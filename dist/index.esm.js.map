{"version":3,"file":"index.esm.js","sources":["../node_modules/tslib/tslib.es6.js","../node_modules/lodash.clonedeep/index.js","../node_modules/bignumber.js/bignumber.mjs","../../src/utils/bignumber.ts","../../src/utils/basicOperations.ts","../../src/utils/index.ts","../../src/types.ts","../../src/pools/weightedPool/weightedMath.ts","../../src/pools/liquidity.ts","../../src/pools/weightedPool/weightedPool.ts","../../src/pools/stablePool/stableMath.ts","../../src/pools/stablePool/stableMathBigInt.ts","../../src/pools/stablePool/stablePool.ts","../../src/pools/metaStablePool/metaStablePool.ts","../../src/pools/linearPool/linearMath.ts","../../src/pools/linearPool/linearPool.ts","../../src/pools/elementPool/elementMath.ts","../../src/pools/elementPool/elementPool.ts","../../src/pools/phantomStablePool/phantomStableMath.ts","../../src/pools/phantomStablePool/phantomStablePool.ts","../../src/pools/composableStable/composableStablePool.ts","../../src/pools/gyroHelpers/constants.ts","../../src/pools/gyroHelpers/gyroSignedFixedPoint.ts","../../src/pools/gyro2Pool/gyro2Math.ts","../../src/pools/gyroHelpers/helpers.ts","../../src/pools/gyro2Pool/gyro2Pool.ts","../../src/pools/gyro3Pool/constants.ts","../../src/pools/gyro3Pool/helpers.ts","../../src/pools/gyro3Pool/gyro3Math.ts","../../src/pools/gyro3Pool/gyro3Pool.ts","../../src/pools/gyroEPool/gyroEMath/constants.ts","../../src/pools/gyroEPool/gyroEMath/gyroEMathHelpers.ts","../../src/pools/gyroEPool/gyroEMath/gyroEMathFunctions.ts","../../src/pools/gyroEPool/gyroEMath/gyroEMath.ts","../../src/pools/gyroEPool/gyroEPool.ts","../../src/pools/gyroEV2Pool/gyroEV2Math/gyroEV2MathHelpers.ts","../../src/pools/gyroEV2Pool/gyroEV2Pool.ts","../../src/pools/xaveFxPool/fxPoolMath.ts","../../src/pools/xaveFxPool/fxPool.ts","../../src/pools/index.ts","../../src/config.ts","../../src/router/helpersClass.ts","../../src/router/sorClass.ts","../../src/router/index.ts","../../src/constants.ts","../../src/pools/lido/index.ts","../../src/wrappers/unbutton.ts","../../src/wrapInfo.ts","../../src/formatSwaps.ts","../../src/poolCacher.ts","../../src/routeProposal/filtering.ts","../../src/routeProposal/pathLimits.ts","../node_modules/lodash/lodash.js","../../src/pathGraph/pathGraph.ts","../../src/routeProposal/index.ts","../../src/swapCostCalculator.ts","../../src/wrapper.ts","../../src/frontendHelpers/weightedHelpers.ts","../../src/frontendHelpers/stableHelpers.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, true, true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = cloneDeep;\n","/*\r\n *      bignumber.js v9.0.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2020 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\nvar\r\n  isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n\r\n  mathceil = Math.ceil,\r\n  mathfloor = Math.floor,\r\n\r\n  bignumberError = '[BigNumber Error] ',\r\n  tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n  BASE = 1e14,\r\n  LOG_BASE = 14,\r\n  MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n  SQRT_BASE = 1e7,\r\n\r\n  // EDITABLE\r\n  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n  // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n  MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n/*\r\n * Create and return a BigNumber constructor.\r\n */\r\nfunction clone(configObject) {\r\n  var div, convertBase, parseNumeric,\r\n    P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n    ONE = new BigNumber(1),\r\n\r\n\r\n    //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n    // The default values below must be integers within the inclusive ranges stated.\r\n    // The values can also be changed at run-time using BigNumber.set.\r\n\r\n    // The maximum number of decimal places for operations involving division.\r\n    DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n    // The rounding mode used when rounding to the above decimal places, and when using\r\n    // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n    // UP         0 Away from zero.\r\n    // DOWN       1 Towards zero.\r\n    // CEIL       2 Towards +Infinity.\r\n    // FLOOR      3 Towards -Infinity.\r\n    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n    // The exponent value at and beneath which toString returns exponential notation.\r\n    // Number type: -7\r\n    TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n    // The exponent value at and above which toString returns exponential notation.\r\n    // Number type: 21\r\n    TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n    // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // Number type: -324  (5e-324)\r\n    MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // Number type:  308  (1.7976931348623157e+308)\r\n    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n    MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    CRYPTO = false,                          // true or false\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN      1 The remainder has the same sign as the dividend.\r\n    //             This modulo mode is commonly known as 'truncated division' and is\r\n    //             equivalent to (a % n) in JavaScript.\r\n    // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n    //             The remainder is always positive.\r\n    //\r\n    // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n    // modes are commonly used for the modulus operation.\r\n    // Although the other rounding modes can also be used, they may not give useful results.\r\n    MODULO_MODE = 1,                         // 0 to 9\r\n\r\n    // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n    // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n    POW_PRECISION = 0,                    // 0 to MAX\r\n\r\n    // The format specification used by the BigNumber.prototype.toFormat method.\r\n    FORMAT = {\r\n      prefix: '',\r\n      groupSize: 3,\r\n      secondaryGroupSize: 0,\r\n      groupSeparator: ',',\r\n      decimalSeparator: '.',\r\n      fractionGroupSize: 0,\r\n      fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n      suffix: ''\r\n    },\r\n\r\n    // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n    // '-', '.', whitespace, or repeated character.\r\n    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n\r\n\r\n  //------------------------------------------------------------------------------------------\r\n\r\n\r\n  // CONSTRUCTOR\r\n\r\n\r\n  /*\r\n   * The BigNumber constructor and exported function.\r\n   * Create and return a new instance of a BigNumber object.\r\n   *\r\n   * v {number|string|BigNumber} A numeric value.\r\n   * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n   */\r\n  function BigNumber(v, b) {\r\n    var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n      x = this;\r\n\r\n    // Enable constructor call without `new`.\r\n    if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n    if (b == null) {\r\n\r\n      if (v && v._isBigNumber === true) {\r\n        x.s = v.s;\r\n\r\n        if (!v.c || v.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n        } else if (v.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.c = v.c.slice();\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n        // Use `1 / n` to handle minus zero also.\r\n        x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n        // Fast path for integers, where n < 2147483648 (2**31).\r\n        if (v === ~~v) {\r\n          for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n          if (e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else {\r\n            x.e = e;\r\n            x.c = [v];\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        str = String(v);\r\n      } else {\r\n\r\n        if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n        x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n      // Exponential form?\r\n      if ((i = str.search(/e/i)) > 0) {\r\n\r\n        // Determine exponent.\r\n        if (e < 0) e = i;\r\n        e += +str.slice(i + 1);\r\n        str = str.substring(0, i);\r\n      } else if (e < 0) {\r\n\r\n        // Integer.\r\n        e = str.length;\r\n      }\r\n\r\n    } else {\r\n\r\n      // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n      intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n      // Allow exponential notation to be used with base 10 argument, while\r\n      // also rounding to DECIMAL_PLACES as with other bases.\r\n      if (b == 10) {\r\n        x = new BigNumber(v);\r\n        return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n      }\r\n\r\n      str = String(v);\r\n\r\n      if (isNum = typeof v == 'number') {\r\n\r\n        // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n        if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n        x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n          throw Error\r\n           (tooManyDigits + v);\r\n        }\r\n      } else {\r\n        x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      alphabet = ALPHABET.slice(0, b);\r\n      e = i = 0;\r\n\r\n      // Check that str is a valid base b number.\r\n      // Don't use RegExp, so alphabet can contain special characters.\r\n      for (len = str.length; i < len; i++) {\r\n        if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n          if (c == '.') {\r\n\r\n            // If '.' is not the first character and it has not be found before.\r\n            if (i > e) {\r\n              e = len;\r\n              continue;\r\n            }\r\n          } else if (!caseChanged) {\r\n\r\n            // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n            if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n              caseChanged = true;\r\n              i = -1;\r\n              e = 0;\r\n              continue;\r\n            }\r\n          }\r\n\r\n          return parseNumeric(x, String(v), isNum, b);\r\n        }\r\n      }\r\n\r\n      // Prevent later check for length on converted number.\r\n      isNum = false;\r\n      str = convertBase(str, b, 10, x.s);\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n      else e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n    if (str = str.slice(i, ++len)) {\r\n      len -= i;\r\n\r\n      // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n      if (isNum && BigNumber.DEBUG &&\r\n        len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n          throw Error\r\n           (tooManyDigits + (x.s * v));\r\n      }\r\n\r\n       // Overflow?\r\n      if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        x.c = x.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      } else {\r\n        x.e = e;\r\n        x.c = [];\r\n\r\n        // Transform base\r\n\r\n        // e is the base 10 exponent.\r\n        // i is where to slice str to get the first element of the coefficient array.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n        if (i < len) {\r\n          if (i) x.c.push(+str.slice(0, i));\r\n\r\n          for (len -= LOG_BASE; i < len;) {\r\n            x.c.push(+str.slice(i, i += LOG_BASE));\r\n          }\r\n\r\n          i = LOG_BASE - (str = str.slice(i)).length;\r\n        } else {\r\n          i -= len;\r\n        }\r\n\r\n        for (; i--; str += '0');\r\n        x.c.push(+str);\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    }\r\n  }\r\n\r\n\r\n  // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n  BigNumber.clone = clone;\r\n\r\n  BigNumber.ROUND_UP = 0;\r\n  BigNumber.ROUND_DOWN = 1;\r\n  BigNumber.ROUND_CEIL = 2;\r\n  BigNumber.ROUND_FLOOR = 3;\r\n  BigNumber.ROUND_HALF_UP = 4;\r\n  BigNumber.ROUND_HALF_DOWN = 5;\r\n  BigNumber.ROUND_HALF_EVEN = 6;\r\n  BigNumber.ROUND_HALF_CEIL = 7;\r\n  BigNumber.ROUND_HALF_FLOOR = 8;\r\n  BigNumber.EUCLID = 9;\r\n\r\n\r\n  /*\r\n   * Configure infrequently-changing library-wide settings.\r\n   *\r\n   * Accept an object with the following optional properties (if the value of a property is\r\n   * a number, it must be an integer within the inclusive range stated):\r\n   *\r\n   *   DECIMAL_PLACES   {number}           0 to MAX\r\n   *   ROUNDING_MODE    {number}           0 to 8\r\n   *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n   *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n   *   CRYPTO           {boolean}          true or false\r\n   *   MODULO_MODE      {number}           0 to 9\r\n   *   POW_PRECISION       {number}           0 to MAX\r\n   *   ALPHABET         {string}           A string of two or more unique characters which does\r\n   *                                     not contain '.'.\r\n   *   FORMAT           {object}           An object with some of the following properties:\r\n   *     prefix                 {string}\r\n   *     groupSize              {number}\r\n   *     secondaryGroupSize     {number}\r\n   *     groupSeparator         {string}\r\n   *     decimalSeparator       {string}\r\n   *     fractionGroupSize      {number}\r\n   *     fractionGroupSeparator {string}\r\n   *     suffix                 {string}\r\n   *\r\n   * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n   *\r\n   * E.g.\r\n   * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n   *\r\n   * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n   *\r\n   * Return an object with the properties current values.\r\n   */\r\n  BigNumber.config = BigNumber.set = function (obj) {\r\n    var p, v;\r\n\r\n    if (obj != null) {\r\n\r\n      if (typeof obj == 'object') {\r\n\r\n        // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          DECIMAL_PLACES = v;\r\n        }\r\n\r\n        // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n        // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 8, p);\r\n          ROUNDING_MODE = v;\r\n        }\r\n\r\n        // EXPONENTIAL_AT {number|number[]}\r\n        // Integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n        // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, 0, p);\r\n            intCheck(v[1], 0, MAX, p);\r\n            TO_EXP_NEG = v[0];\r\n            TO_EXP_POS = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n          }\r\n        }\r\n\r\n        // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n        // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n        if (obj.hasOwnProperty(p = 'RANGE')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, -1, p);\r\n            intCheck(v[1], 1, MAX, p);\r\n            MIN_EXP = v[0];\r\n            MAX_EXP = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            if (v) {\r\n              MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' cannot be zero: ' + v);\r\n            }\r\n          }\r\n        }\r\n\r\n        // CRYPTO {boolean} true or false.\r\n        // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n        // '[BigNumber Error] crypto unavailable'\r\n        if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n          v = obj[p];\r\n          if (v === !!v) {\r\n            if (v) {\r\n              if (typeof crypto != 'undefined' && crypto &&\r\n               (crypto.getRandomValues || crypto.randomBytes)) {\r\n                CRYPTO = v;\r\n              } else {\r\n                CRYPTO = !v;\r\n                throw Error\r\n                 (bignumberError + 'crypto unavailable');\r\n              }\r\n            } else {\r\n              CRYPTO = v;\r\n            }\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' not true or false: ' + v);\r\n          }\r\n        }\r\n\r\n        // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n        // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 9, p);\r\n          MODULO_MODE = v;\r\n        }\r\n\r\n        // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          POW_PRECISION = v;\r\n        }\r\n\r\n        // FORMAT {object}\r\n        // '[BigNumber Error] FORMAT not an object: {v}'\r\n        if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n          v = obj[p];\r\n          if (typeof v == 'object') FORMAT = v;\r\n          else throw Error\r\n           (bignumberError + p + ' not an object: ' + v);\r\n        }\r\n\r\n        // ALPHABET {string}\r\n        // '[BigNumber Error] ALPHABET invalid: {v}'\r\n        if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n          v = obj[p];\r\n\r\n          // Disallow if only one character,\r\n          // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n          if (typeof v == 'string' && !/^.$|[+-.\\s]|(.).*\\1/.test(v)) {\r\n            ALPHABET = v;\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' invalid: ' + v);\r\n          }\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Object expected: {v}'\r\n        throw Error\r\n         (bignumberError + 'Object expected: ' + obj);\r\n      }\r\n    }\r\n\r\n    return {\r\n      DECIMAL_PLACES: DECIMAL_PLACES,\r\n      ROUNDING_MODE: ROUNDING_MODE,\r\n      EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n      RANGE: [MIN_EXP, MAX_EXP],\r\n      CRYPTO: CRYPTO,\r\n      MODULO_MODE: MODULO_MODE,\r\n      POW_PRECISION: POW_PRECISION,\r\n      FORMAT: FORMAT,\r\n      ALPHABET: ALPHABET\r\n    };\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if v is a BigNumber instance, otherwise return false.\r\n   *\r\n   * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n   *\r\n   * v {any}\r\n   *\r\n   * '[BigNumber Error] Invalid BigNumber: {v}'\r\n   */\r\n  BigNumber.isBigNumber = function (v) {\r\n    if (!v || v._isBigNumber !== true) return false;\r\n    if (!BigNumber.DEBUG) return true;\r\n\r\n    var i, n,\r\n      c = v.c,\r\n      e = v.e,\r\n      s = v.s;\r\n\r\n    out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n      if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n        // If the first element is zero, the BigNumber value must be zero.\r\n        if (c[0] === 0) {\r\n          if (e === 0 && c.length === 1) return true;\r\n          break out;\r\n        }\r\n\r\n        // Calculate number of digits that c[0] should have, based on the exponent.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (i < 1) i += LOG_BASE;\r\n\r\n        // Calculate number of digits of c[0].\r\n        //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n        if (String(c[0]).length == i) {\r\n\r\n          for (i = 0; i < c.length; i++) {\r\n            n = c[i];\r\n            if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n          }\r\n\r\n          // Last element cannot be zero, unless it is the only element.\r\n          if (n !== 0) return true;\r\n        }\r\n      }\r\n\r\n    // Infinity/NaN\r\n    } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n      return true;\r\n    }\r\n\r\n    throw Error\r\n      (bignumberError + 'Invalid BigNumber: ' + v);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.maximum = BigNumber.max = function () {\r\n    return maxOrMin(arguments, P.lt);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.minimum = BigNumber.min = function () {\r\n    return maxOrMin(arguments, P.gt);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n   * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n   * zeros are produced).\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n   * '[BigNumber Error] crypto unavailable'\r\n   */\r\n  BigNumber.random = (function () {\r\n    var pow2_53 = 0x20000000000000;\r\n\r\n    // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n    // Check if Math.random() produces more than 32 bits of randomness.\r\n    // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n    // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n    var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n     ? function () { return mathfloor(Math.random() * pow2_53); }\r\n     : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n       (Math.random() * 0x800000 | 0); };\r\n\r\n    return function (dp) {\r\n      var a, b, e, k, v,\r\n        i = 0,\r\n        c = [],\r\n        rand = new BigNumber(ONE);\r\n\r\n      if (dp == null) dp = DECIMAL_PLACES;\r\n      else intCheck(dp, 0, MAX);\r\n\r\n      k = mathceil(dp / LOG_BASE);\r\n\r\n      if (CRYPTO) {\r\n\r\n        // Browsers supporting crypto.getRandomValues.\r\n        if (crypto.getRandomValues) {\r\n\r\n          a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n          for (; i < k;) {\r\n\r\n            // 53 bits:\r\n            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n            //                                     11111 11111111 11111111\r\n            // 0x20000 is 2^21.\r\n            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n            // Rejection sampling:\r\n            // 0 <= v < 9007199254740992\r\n            // Probability that v >= 9e15, is\r\n            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n            if (v >= 9e15) {\r\n              b = crypto.getRandomValues(new Uint32Array(2));\r\n              a[i] = b[0];\r\n              a[i + 1] = b[1];\r\n            } else {\r\n\r\n              // 0 <= v <= 8999999999999999\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 2;\r\n            }\r\n          }\r\n          i = k / 2;\r\n\r\n        // Node.js supporting crypto.randomBytes.\r\n        } else if (crypto.randomBytes) {\r\n\r\n          // buffer\r\n          a = crypto.randomBytes(k *= 7);\r\n\r\n          for (; i < k;) {\r\n\r\n            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n            // 0 <= v < 9007199254740992\r\n            v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n               (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n               (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n            if (v >= 9e15) {\r\n              crypto.randomBytes(7).copy(a, i);\r\n            } else {\r\n\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 7;\r\n            }\r\n          }\r\n          i = k / 7;\r\n        } else {\r\n          CRYPTO = false;\r\n          throw Error\r\n           (bignumberError + 'crypto unavailable');\r\n        }\r\n      }\r\n\r\n      // Use Math.random.\r\n      if (!CRYPTO) {\r\n\r\n        for (; i < k;) {\r\n          v = random53bitInt();\r\n          if (v < 9e15) c[i++] = v % 1e14;\r\n        }\r\n      }\r\n\r\n      k = c[--i];\r\n      dp %= LOG_BASE;\r\n\r\n      // Convert trailing digits to zeros according to dp.\r\n      if (k && dp) {\r\n        v = POWS_TEN[LOG_BASE - dp];\r\n        c[i] = mathfloor(k / v) * v;\r\n      }\r\n\r\n      // Remove trailing elements which are zero.\r\n      for (; c[i] === 0; c.pop(), i--);\r\n\r\n      // Zero?\r\n      if (i < 0) {\r\n        c = [e = 0];\r\n      } else {\r\n\r\n        // Remove leading elements which are zero and adjust exponent accordingly.\r\n        for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n        // Count the digits of the first element of c to determine leading zeros, and...\r\n        for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n        // adjust the exponent accordingly.\r\n        if (i < LOG_BASE) e -= LOG_BASE - i;\r\n      }\r\n\r\n      rand.e = e;\r\n      rand.c = c;\r\n      return rand;\r\n    };\r\n  })();\r\n\r\n\r\n   /*\r\n   * Return a BigNumber whose value is the sum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.sum = function () {\r\n    var i = 1,\r\n      args = arguments,\r\n      sum = new BigNumber(args[0]);\r\n    for (; i < args.length;) sum = sum.plus(args[i++]);\r\n    return sum;\r\n  };\r\n\r\n\r\n  // PRIVATE FUNCTIONS\r\n\r\n\r\n  // Called by BigNumber and BigNumber.prototype.toString.\r\n  convertBase = (function () {\r\n    var decimal = '0123456789';\r\n\r\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n     * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n     */\r\n    function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n      var j,\r\n        arr = [0],\r\n        arrL,\r\n        i = 0,\r\n        len = str.length;\r\n\r\n      for (; i < len;) {\r\n        for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n        arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n        for (j = 0; j < arr.length; j++) {\r\n\r\n          if (arr[j] > baseOut - 1) {\r\n            if (arr[j + 1] == null) arr[j + 1] = 0;\r\n            arr[j + 1] += arr[j] / baseOut | 0;\r\n            arr[j] %= baseOut;\r\n          }\r\n        }\r\n      }\r\n\r\n      return arr.reverse();\r\n    }\r\n\r\n    // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n    // If the caller is toString, we are converting from base 10 to baseOut.\r\n    // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n    return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n      var alphabet, d, e, k, r, x, xc, y,\r\n        i = str.indexOf('.'),\r\n        dp = DECIMAL_PLACES,\r\n        rm = ROUNDING_MODE;\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        k = POW_PRECISION;\r\n\r\n        // Unlimited precision.\r\n        POW_PRECISION = 0;\r\n        str = str.replace('.', '');\r\n        y = new BigNumber(baseIn);\r\n        x = y.pow(str.length - i);\r\n        POW_PRECISION = k;\r\n\r\n        // Convert str as if an integer, then restore the fraction part by dividing the\r\n        // result by its base raised to a power.\r\n\r\n        y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n         10, baseOut, decimal);\r\n        y.e = y.c.length;\r\n      }\r\n\r\n      // Convert the number as integer.\r\n\r\n      xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n       ? (alphabet = ALPHABET, decimal)\r\n       : (alphabet = decimal, ALPHABET));\r\n\r\n      // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n      e = k = xc.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xc[--k] == 0; xc.pop());\r\n\r\n      // Zero?\r\n      if (!xc[0]) return alphabet.charAt(0);\r\n\r\n      // Does str represent an integer? If so, no need for the division.\r\n      if (i < 0) {\r\n        --e;\r\n      } else {\r\n        x.c = xc;\r\n        x.e = e;\r\n\r\n        // The sign is needed for correct rounding.\r\n        x.s = sign;\r\n        x = div(x, y, dp, rm, baseOut);\r\n        xc = x.c;\r\n        r = x.r;\r\n        e = x.e;\r\n      }\r\n\r\n      // xc now represents str converted to baseOut.\r\n\r\n      // THe index of the rounding digit.\r\n      d = e + dp + 1;\r\n\r\n      // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n      i = xc[d];\r\n\r\n      // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n      k = baseOut / 2;\r\n      r = r || d < 0 || xc[d + 1] != null;\r\n\r\n      r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n            : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n      // If the index of the rounding digit is not greater than zero, or xc represents\r\n      // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n      // such as 0.00001.\r\n      if (d < 1 || !xc[0]) {\r\n\r\n        // 1^-dp or 0\r\n        str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n      } else {\r\n\r\n        // Truncate xc to the required number of decimal places.\r\n        xc.length = d;\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (--baseOut; ++xc[--d] > baseOut;) {\r\n            xc[d] = 0;\r\n\r\n            if (!d) {\r\n              ++e;\r\n              xc = [1].concat(xc);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (k = xc.length; !xc[--k];);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n        // Add leading zeros, decimal point and trailing zeros as required.\r\n        str = toFixedPoint(str, e, alphabet.charAt(0));\r\n      }\r\n\r\n      // The caller will add the sign.\r\n      return str;\r\n    };\r\n  })();\r\n\r\n\r\n  // Perform division in the specified base. Called by div and convertBase.\r\n  div = (function () {\r\n\r\n    // Assume non-zero x and k.\r\n    function multiply(x, k, base) {\r\n      var m, temp, xlo, xhi,\r\n        carry = 0,\r\n        i = x.length,\r\n        klo = k % SQRT_BASE,\r\n        khi = k / SQRT_BASE | 0;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        xlo = x[i] % SQRT_BASE;\r\n        xhi = x[i] / SQRT_BASE | 0;\r\n        m = khi * xlo + xhi * klo;\r\n        temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n        carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n        x[i] = temp % base;\r\n      }\r\n\r\n      if (carry) x = [carry].concat(x);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, cmp;\r\n\r\n      if (aL != bL) {\r\n        cmp = aL > bL ? 1 : -1;\r\n      } else {\r\n\r\n        for (i = cmp = 0; i < aL; i++) {\r\n\r\n          if (a[i] != b[i]) {\r\n            cmp = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return cmp;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n    }\r\n\r\n    // x: dividend, y: divisor.\r\n    return function (x, y, dp, rm, base) {\r\n      var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n        yL, yz,\r\n        s = x.s == y.s ? 1 : -1,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n        return new BigNumber(\r\n\r\n         // Return NaN if either NaN, or both Infinity or 0.\r\n         !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n          // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n          xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n       );\r\n      }\r\n\r\n      q = new BigNumber(s);\r\n      qc = q.c = [];\r\n      e = x.e - y.e;\r\n      s = dp + e + 1;\r\n\r\n      if (!base) {\r\n        base = BASE;\r\n        e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n        s = s / LOG_BASE | 0;\r\n      }\r\n\r\n      // Result exponent may be one less then the current value of e.\r\n      // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n      for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n      if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n      if (s < 0) {\r\n        qc.push(1);\r\n        more = true;\r\n      } else {\r\n        xL = xc.length;\r\n        yL = yc.length;\r\n        i = 0;\r\n        s += 2;\r\n\r\n        // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n        n = mathfloor(base / (yc[0] + 1));\r\n\r\n        // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n        // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n        if (n > 1) {\r\n          yc = multiply(yc, n, base);\r\n          xc = multiply(xc, n, base);\r\n          yL = yc.length;\r\n          xL = xc.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xc.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL; rem[remL++] = 0);\r\n        yz = yc.slice();\r\n        yz = [0].concat(yz);\r\n        yc0 = yc[0];\r\n        if (yc[1] >= base / 2) yc0++;\r\n        // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n        // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n        do {\r\n          n = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yc, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, n.\r\n\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // n is how many times the divisor goes into the current remainder.\r\n            n = mathfloor(rem0 / yc0);\r\n\r\n            //  Algorithm:\r\n            //  product = divisor multiplied by trial digit (n).\r\n            //  Compare product and remainder.\r\n            //  If product is greater than remainder:\r\n            //    Subtract divisor from product, decrement trial digit.\r\n            //  Subtract product from remainder.\r\n            //  If product was less than remainder at the last compare:\r\n            //    Compare new remainder and divisor.\r\n            //    If remainder is greater than divisor:\r\n            //      Subtract divisor from remainder, increment trial digit.\r\n\r\n            if (n > 1) {\r\n\r\n              // n may be > base only when base is 3.\r\n              if (n >= base) n = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiply(yc, n, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              // If product > remainder then trial digit n too high.\r\n              // n is 1 too high about 5% of the time, and is not known to have\r\n              // ever been more than 1 too high.\r\n              while (compare(prod, rem, prodL, remL) == 1) {\r\n                n--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                prodL = prod.length;\r\n                cmp = 1;\r\n              }\r\n            } else {\r\n\r\n              // n is 0 or 1, cmp is -1.\r\n              // If n is 0, there is no need to compare yc and rem again below,\r\n              // so change cmp to 1 to avoid it.\r\n              // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n              if (n == 0) {\r\n\r\n                // divisor < remainder, so n must be at least 1.\r\n                cmp = n = 1;\r\n              }\r\n\r\n              // product = divisor\r\n              prod = yc.slice();\r\n              prodL = prod.length;\r\n            }\r\n\r\n            if (prodL < remL) prod = [0].concat(prod);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n            remL = rem.length;\r\n\r\n             // If product was < remainder.\r\n            if (cmp == -1) {\r\n\r\n              // Compare divisor and new remainder.\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              // Trial digit n too low.\r\n              // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n              while (compare(yc, rem, yL, remL) < 1) {\r\n                n++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                remL = rem.length;\r\n              }\r\n            }\r\n          } else if (cmp === 0) {\r\n            n++;\r\n            rem = [0];\r\n          } // else cmp === 1 and n will be 0\r\n\r\n          // Add the next digit, n, to the result array.\r\n          qc[i++] = n;\r\n\r\n          // Update the remainder.\r\n          if (rem[0]) {\r\n            rem[remL++] = xc[xi] || 0;\r\n          } else {\r\n            rem = [xc[xi]];\r\n            remL = 1;\r\n          }\r\n        } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n        more = rem[0] != null;\r\n\r\n        // Leading zero?\r\n        if (!qc[0]) qc.splice(0, 1);\r\n      }\r\n\r\n      if (base == BASE) {\r\n\r\n        // To calculate q.e, first get the number of digits of qc[0].\r\n        for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n        round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n      // Caller is convertBase.\r\n      } else {\r\n        q.e = e;\r\n        q.r = +more;\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n   * notation rounded to the specified decimal places or significant digits.\r\n   *\r\n   * n: a BigNumber.\r\n   * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n   * rm: the rounding mode.\r\n   * id: 1 (toExponential) or 2 (toPrecision).\r\n   */\r\n  function format(n, i, rm, id) {\r\n    var c0, e, ne, len, str;\r\n\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n\r\n    if (!n.c) return n.toString();\r\n\r\n    c0 = n.c[0];\r\n    ne = n.e;\r\n\r\n    if (i == null) {\r\n      str = coeffToString(n.c);\r\n      str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n       ? toExponential(str, ne)\r\n       : toFixedPoint(str, ne, '0');\r\n    } else {\r\n      n = round(new BigNumber(n), i, rm);\r\n\r\n      // n.e may have changed if the value was rounded up.\r\n      e = n.e;\r\n\r\n      str = coeffToString(n.c);\r\n      len = str.length;\r\n\r\n      // toPrecision returns exponential notation if the number of significant digits\r\n      // specified is less than the number of digits necessary to represent the integer\r\n      // part of the value in fixed-point notation.\r\n\r\n      // Exponential notation.\r\n      if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n        // Append zeros?\r\n        for (; len < i; str += '0', len++);\r\n        str = toExponential(str, e);\r\n\r\n      // Fixed-point notation.\r\n      } else {\r\n        i -= ne;\r\n        str = toFixedPoint(str, e, '0');\r\n\r\n        // Append zeros?\r\n        if (e + 1 > len) {\r\n          if (--i > 0) for (str += '.'; i--; str += '0');\r\n        } else {\r\n          i += e - len;\r\n          if (i > 0) {\r\n            if (e + 1 == len) str += '.';\r\n            for (; i--; str += '0');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n.s < 0 && c0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Handle BigNumber.max and BigNumber.min.\r\n  function maxOrMin(args, method) {\r\n    var n,\r\n      i = 1,\r\n      m = new BigNumber(args[0]);\r\n\r\n    for (; i < args.length; i++) {\r\n      n = new BigNumber(args[i]);\r\n\r\n      // If any number is NaN, return NaN.\r\n      if (!n.s) {\r\n        m = n;\r\n        break;\r\n      } else if (method.call(m, n)) {\r\n        m = n;\r\n      }\r\n    }\r\n\r\n    return m;\r\n  }\r\n\r\n\r\n  /*\r\n   * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n   * Called by minus, plus and times.\r\n   */\r\n  function normalise(n, c, e) {\r\n    var i = 1,\r\n      j = c.length;\r\n\r\n     // Remove trailing zeros.\r\n    for (; !c[--j]; c.pop());\r\n\r\n    // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n    for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n    // Overflow?\r\n    if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n      // Infinity.\r\n      n.c = n.e = null;\r\n\r\n    // Underflow?\r\n    } else if (e < MIN_EXP) {\r\n\r\n      // Zero.\r\n      n.c = [n.e = 0];\r\n    } else {\r\n      n.e = e;\r\n      n.c = c;\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n\r\n  // Handle values that fail the validity test in BigNumber.\r\n  parseNumeric = (function () {\r\n    var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n      dotAfter = /^([^.]+)\\.$/,\r\n      dotBefore = /^\\.([^.]+)$/,\r\n      isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n      whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n    return function (x, str, isNum, b) {\r\n      var base,\r\n        s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n      // No exception on ±Infinity or NaN.\r\n      if (isInfinityOrNaN.test(s)) {\r\n        x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n      } else {\r\n        if (!isNum) {\r\n\r\n          // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n          s = s.replace(basePrefix, function (m, p1, p2) {\r\n            base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n            return !b || b == base ? p1 : m;\r\n          });\r\n\r\n          if (b) {\r\n            base = b;\r\n\r\n            // E.g. '1.' to '1', '.1' to '0.1'\r\n            s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n          }\r\n\r\n          if (str != s) return new BigNumber(s, base);\r\n        }\r\n\r\n        // '[BigNumber Error] Not a number: {n}'\r\n        // '[BigNumber Error] Not a base {b} number: {n}'\r\n        if (BigNumber.DEBUG) {\r\n          throw Error\r\n            (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n        }\r\n\r\n        // NaN\r\n        x.s = null;\r\n      }\r\n\r\n      x.c = x.e = null;\r\n    }\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n   * If r is truthy, it is known that there are more digits after the rounding digit.\r\n   */\r\n  function round(x, sd, rm, r) {\r\n    var d, i, j, k, n, ni, rd,\r\n      xc = x.c,\r\n      pows10 = POWS_TEN;\r\n\r\n    // if x is not Infinity or NaN...\r\n    if (xc) {\r\n\r\n      // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n      // ni is the index of n within x.c.\r\n      // d is the number of digits of n.\r\n      // i is the index of rd within n including leading zeros.\r\n      // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n      out: {\r\n\r\n        // Get the number of digits of the first element of xc.\r\n        for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n        i = sd - d;\r\n\r\n        // If the rounding digit is in the first element of xc...\r\n        if (i < 0) {\r\n          i += LOG_BASE;\r\n          j = sd;\r\n          n = xc[ni = 0];\r\n\r\n          // Get the rounding digit at index j of n.\r\n          rd = n / pows10[d - j - 1] % 10 | 0;\r\n        } else {\r\n          ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n          if (ni >= xc.length) {\r\n\r\n            if (r) {\r\n\r\n              // Needed by sqrt.\r\n              for (; xc.length <= ni; xc.push(0));\r\n              n = rd = 0;\r\n              d = 1;\r\n              i %= LOG_BASE;\r\n              j = i - LOG_BASE + 1;\r\n            } else {\r\n              break out;\r\n            }\r\n          } else {\r\n            n = k = xc[ni];\r\n\r\n            // Get the number of digits of n.\r\n            for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n            // Get the index of rd within n.\r\n            i %= LOG_BASE;\r\n\r\n            // Get the index of rd within n, adjusted for leading zeros.\r\n            // The number of leading zeros of n is given by LOG_BASE - d.\r\n            j = i - LOG_BASE + d;\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n          }\r\n        }\r\n\r\n        r = r || sd < 0 ||\r\n\r\n        // Are there any non-zero digits after the rounding digit?\r\n        // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n        // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n         xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n        r = rm < 4\r\n         ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n         : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n           rm == (x.s < 0 ? 8 : 7));\r\n\r\n        if (sd < 1 || !xc[0]) {\r\n          xc.length = 0;\r\n\r\n          if (r) {\r\n\r\n            // Convert sd to decimal places.\r\n            sd -= x.e + 1;\r\n\r\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n            xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n            x.e = -sd || 0;\r\n          } else {\r\n\r\n            // Zero.\r\n            xc[0] = x.e = 0;\r\n          }\r\n\r\n          return x;\r\n        }\r\n\r\n        // Remove excess digits.\r\n        if (i == 0) {\r\n          xc.length = ni;\r\n          k = 1;\r\n          ni--;\r\n        } else {\r\n          xc.length = ni + 1;\r\n          k = pows10[LOG_BASE - i];\r\n\r\n          // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n          // j > 0 means i > number of leading zeros of n.\r\n          xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n        }\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          for (; ;) {\r\n\r\n            // If the digit to be rounded up is in the first element of xc...\r\n            if (ni == 0) {\r\n\r\n              // i will be the length of xc[0] before k is added.\r\n              for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n              j = xc[0] += k;\r\n              for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n              // if i != k the length has increased.\r\n              if (i != k) {\r\n                x.e++;\r\n                if (xc[0] == BASE) xc[0] = 1;\r\n              }\r\n\r\n              break;\r\n            } else {\r\n              xc[ni] += k;\r\n              if (xc[ni] != BASE) break;\r\n              xc[ni--] = 0;\r\n              k = 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; xc[--i] === 0; xc.pop());\r\n      }\r\n\r\n      // Overflow? Infinity.\r\n      if (x.e > MAX_EXP) {\r\n        x.c = x.e = null;\r\n\r\n      // Underflow? Zero.\r\n      } else if (x.e < MIN_EXP) {\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function valueOf(n) {\r\n    var str,\r\n      e = n.e;\r\n\r\n    if (e === null) return n.toString();\r\n\r\n    str = coeffToString(n.c);\r\n\r\n    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n      ? toExponential(str, e)\r\n      : toFixedPoint(str, e, '0');\r\n\r\n    return n.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new BigNumber(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   *   0 if they have the same value,\r\n   *   or null if the value of either is NaN.\r\n   */\r\n  P.comparedTo = function (y, b) {\r\n    return compare(this, new BigNumber(y, b));\r\n  };\r\n\r\n\r\n  /*\r\n   * If dp is undefined or null or true or false, return the number of decimal places of the\r\n   * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   *\r\n   * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.decimalPlaces = P.dp = function (dp, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), dp + x.e + 1, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last number.\r\n    if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n    if (n < 0) n = 0;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n   * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.dividedBy = P.div = function (y, b) {\r\n    return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n   * BigNumber by the value of BigNumber(y, b).\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n    return div(this, new BigNumber(y, b), 0, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n   *\r\n   * If m is present, return the result modulo m.\r\n   * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n   *\r\n   * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n   * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n   *\r\n   * n {number|string|BigNumber} The exponent. An integer.\r\n   * [m] {number|string|BigNumber} The modulus.\r\n   *\r\n   * '[BigNumber Error] Exponent not an integer: {n}'\r\n   */\r\n  P.exponentiatedBy = P.pow = function (n, m) {\r\n    var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n      x = this;\r\n\r\n    n = new BigNumber(n);\r\n\r\n    // Allow NaN and ±Infinity, but not other non-integers.\r\n    if (n.c && !n.isInteger()) {\r\n      throw Error\r\n        (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n    }\r\n\r\n    if (m != null) m = new BigNumber(m);\r\n\r\n    // Exponent of MAX_SAFE_INTEGER is 15.\r\n    nIsBig = n.e > 14;\r\n\r\n    // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n    if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n      // The sign of the result of pow when x is negative depends on the evenness of n.\r\n      // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n      y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n      return m ? y.mod(m) : y;\r\n    }\r\n\r\n    nIsNeg = n.s < 0;\r\n\r\n    if (m) {\r\n\r\n      // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n      if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n      isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n      if (isModExp) x = x.mod(m);\r\n\r\n    // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n    // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n    } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n      // [1, 240000000]\r\n      ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n      // [80000000000000]  [99999750000000]\r\n      : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n      // If x is negative and n is odd, k = -0, else k = 0.\r\n      k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n      // If x >= 1, k = ±Infinity.\r\n      if (x.e > -1) k = 1 / k;\r\n\r\n      // If n is negative return ±0, else return ±Infinity.\r\n      return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n    } else if (POW_PRECISION) {\r\n\r\n      // Truncating each coefficient array to a length of k after each multiplication\r\n      // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n      // i.e. there will be a minimum of 28 guard digits retained.\r\n      k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n    }\r\n\r\n    if (nIsBig) {\r\n      half = new BigNumber(0.5);\r\n      if (nIsNeg) n.s = 1;\r\n      nIsOdd = isOdd(n);\r\n    } else {\r\n      i = Math.abs(+valueOf(n));\r\n      nIsOdd = i % 2;\r\n    }\r\n\r\n    y = new BigNumber(ONE);\r\n\r\n    // Performs 54 loop iterations for n of 9007199254740991.\r\n    for (; ;) {\r\n\r\n      if (nIsOdd) {\r\n        y = y.times(x);\r\n        if (!y.c) break;\r\n\r\n        if (k) {\r\n          if (y.c.length > k) y.c.length = k;\r\n        } else if (isModExp) {\r\n          y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (i) {\r\n        i = mathfloor(i / 2);\r\n        if (i === 0) break;\r\n        nIsOdd = i % 2;\r\n      } else {\r\n        n = n.times(half);\r\n        round(n, n.e + 1, 1);\r\n\r\n        if (n.e > 14) {\r\n          nIsOdd = isOdd(n);\r\n        } else {\r\n          i = +valueOf(n);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        }\r\n      }\r\n\r\n      x = x.times(x);\r\n\r\n      if (k) {\r\n        if (x.c && x.c.length > k) x.c.length = k;\r\n      } else if (isModExp) {\r\n        x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n      }\r\n    }\r\n\r\n    if (isModExp) return y;\r\n    if (nIsNeg) y = ONE.div(y);\r\n\r\n    return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n   * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n   */\r\n  P.integerValue = function (rm) {\r\n    var n = new BigNumber(this);\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n    return round(n, n.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isEqualTo = P.eq = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.c;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isGreaterThan = P.gt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n   */\r\n  P.isInteger = function () {\r\n    return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isLessThan = P.lt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is negative, otherwise return false.\r\n   */\r\n  P.isNegative = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is positive, otherwise return false.\r\n   */\r\n  P.isPositive = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.c && this.c[0] == 0;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.minus = function (y, b) {\r\n    var i, j, t, xLTy,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Either Infinity?\r\n      if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n      // Either zero?\r\n      if (!xc[0] || !yc[0]) {\r\n\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n         // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n         ROUNDING_MODE == 3 ? -0 : 0);\r\n      }\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Determine which is the bigger number.\r\n    if (a = xe - ye) {\r\n\r\n      if (xLTy = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      for (b = a; b--; t.push(0));\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n\r\n        if (xc[b] != yc[b]) {\r\n          xLTy = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n    b = (j = yc.length) - (i = xc.length);\r\n\r\n    // Append zeros to xc if shorter.\r\n    // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n    if (b > 0) for (; b--; xc[i++] = 0);\r\n    b = BASE - 1;\r\n\r\n    // Subtract yc from xc.\r\n    for (; j > a;) {\r\n\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i]; xc[i] = b);\r\n        --xc[i];\r\n        xc[j] += BASE;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n    // Zero?\r\n    if (!xc[0]) {\r\n\r\n      // Following IEEE 754 (2008) 6.3,\r\n      // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n      y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n    // for finite x and y.\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n   * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n   */\r\n  P.modulo = P.mod = function (y, b) {\r\n    var q, s,\r\n      x = this;\r\n\r\n    y = new BigNumber(y, b);\r\n\r\n    // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n    if (!x.c || !y.s || y.c && !y.c[0]) {\r\n      return new BigNumber(NaN);\r\n\r\n    // Return x if y is Infinity or x is zero.\r\n    } else if (!y.c || x.c && !x.c[0]) {\r\n      return new BigNumber(x);\r\n    }\r\n\r\n    if (MODULO_MODE == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // r = x - qy    where  0 <= r < abs(y)\r\n      s = y.s;\r\n      y.s = 1;\r\n      q = div(x, y, 0, 3);\r\n      y.s = s;\r\n      q.s *= s;\r\n    } else {\r\n      q = div(x, y, 0, MODULO_MODE);\r\n    }\r\n\r\n    y = x.minus(q.times(y));\r\n\r\n    // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n    if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n   * of BigNumber(y, b).\r\n   */\r\n  P.multipliedBy = P.times = function (y, b) {\r\n    var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n      base, sqrtBase,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new BigNumber(y, b)).c;\r\n\r\n    // Either NaN, ±Infinity or ±0?\r\n    if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n      // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n      if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n        y.c = y.e = y.s = null;\r\n      } else {\r\n        y.s *= x.s;\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        if (!xc || !yc) {\r\n          y.c = y.e = null;\r\n\r\n        // Return ±0 if either is ±0.\r\n        } else {\r\n          y.c = [0];\r\n          y.e = 0;\r\n        }\r\n      }\r\n\r\n      return y;\r\n    }\r\n\r\n    e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n    y.s *= x.s;\r\n    xcL = xc.length;\r\n    ycL = yc.length;\r\n\r\n    // Ensure xc points to longer array and xcL to its length.\r\n    if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n    // Initialise the result array with zeros.\r\n    for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n    base = BASE;\r\n    sqrtBase = SQRT_BASE;\r\n\r\n    for (i = ycL; --i >= 0;) {\r\n      c = 0;\r\n      ylo = yc[i] % sqrtBase;\r\n      yhi = yc[i] / sqrtBase | 0;\r\n\r\n      for (k = xcL, j = i + k; j > i;) {\r\n        xlo = xc[--k] % sqrtBase;\r\n        xhi = xc[k] / sqrtBase | 0;\r\n        m = yhi * xlo + xhi * ylo;\r\n        xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n        c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n        zc[j--] = xlo % base;\r\n      }\r\n\r\n      zc[j] = c;\r\n    }\r\n\r\n    if (c) {\r\n      ++e;\r\n    } else {\r\n      zc.splice(0, 1);\r\n    }\r\n\r\n    return normalise(y, zc, e);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n   * i.e. multiplied by -1.\r\n   */\r\n  P.negated = function () {\r\n    var x = new BigNumber(this);\r\n    x.s = -x.s || null;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.plus = function (y, b) {\r\n    var t,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n     if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Return ±Infinity if either ±Infinity.\r\n      if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n      // Either zero?\r\n      // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n      if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--; t.push(0));\r\n      t.reverse();\r\n    }\r\n\r\n    a = xc.length;\r\n    b = yc.length;\r\n\r\n    // Point xc to the longer array, and b to the shorter length.\r\n    if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n    for (a = 0; b;) {\r\n      a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n      xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n    }\r\n\r\n    if (a) {\r\n      xc = [a].concat(xc);\r\n      ++ye;\r\n    }\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    // ye = MAX_EXP + 1 possible\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   * If sd is undefined or null or true or false, return the number of significant digits of\r\n   * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   * If sd is true include integer-part trailing zeros in the count.\r\n   *\r\n   * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n   *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.precision = P.sd = function (sd, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (sd != null && sd !== !!sd) {\r\n      intCheck(sd, 1, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), sd, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    v = c.length - 1;\r\n    n = v * LOG_BASE + 1;\r\n\r\n    if (v = c[v]) {\r\n\r\n      // Subtract the number of trailing zeros of the last element.\r\n      for (; v % 10 == 0; v /= 10, n--);\r\n\r\n      // Add the number of digits of the first element.\r\n      for (v = c[0]; v >= 10; v /= 10, n++);\r\n    }\r\n\r\n    if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n   * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n   *\r\n   * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n   */\r\n  P.shiftedBy = function (k) {\r\n    intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n    return this.times('1e' + k);\r\n  };\r\n\r\n\r\n  /*\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N) =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I) =  I\r\n   *  sqrt(0) =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n   * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, r, rep, t,\r\n      x = this,\r\n      c = x.c,\r\n      s = x.s,\r\n      e = x.e,\r\n      dp = DECIMAL_PLACES + 4,\r\n      half = new BigNumber('0.5');\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !c || !c[0]) {\r\n      return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n    }\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+valueOf(x));\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = coeffToString(c);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(+n);\r\n      e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new BigNumber(n);\r\n    } else {\r\n      r = new BigNumber(s + '');\r\n    }\r\n\r\n    // Check for zero.\r\n    // r could be zero if MIN_EXP is changed after the this value was created.\r\n    // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n    // coeffToString to throw.\r\n    if (r.c[0]) {\r\n      e = r.e;\r\n      s = e + dp;\r\n      if (s < 3) s = 0;\r\n\r\n      // Newton-Raphson iteration.\r\n      for (; ;) {\r\n        t = r;\r\n        r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n        if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n          // The exponent of r may here be one less than the final result exponent,\r\n          // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n          // are indexed correctly.\r\n          if (r.e < e) --s;\r\n          n = n.slice(s - 3, s + 1);\r\n\r\n          // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n          // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n          // iteration.\r\n          if (n == '9999' || !rep && n == '4999') {\r\n\r\n            // On the first iteration only, check to see if rounding up gives the\r\n            // exact result as the nines may infinitely repeat.\r\n            if (!rep) {\r\n              round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n              if (t.times(t).eq(x)) {\r\n                r = t;\r\n                break;\r\n              }\r\n            }\r\n\r\n            dp += 4;\r\n            s += 4;\r\n            rep = 1;\r\n          } else {\r\n\r\n            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n            // result. If not, then there are further digits and m will be truthy.\r\n            if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n              // Truncate to the first rounding digit.\r\n              round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n              m = !r.times(r).eq(x);\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in exponential notation and\r\n   * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp++;\r\n    }\r\n    return format(this, dp, rm, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n   * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n   * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp = dp + this.e + 1;\r\n    }\r\n    return format(this, dp, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n   * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n   * of the format or FORMAT object (see BigNumber.set).\r\n   *\r\n   * The formatting object may contain some or all of the properties shown below.\r\n   *\r\n   * FORMAT = {\r\n   *   prefix: '',\r\n   *   groupSize: 3,\r\n   *   secondaryGroupSize: 0,\r\n   *   groupSeparator: ',',\r\n   *   decimalSeparator: '.',\r\n   *   fractionGroupSize: 0,\r\n   *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n   *   suffix: ''\r\n   * };\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   * [format] {object} Formatting options. See FORMAT pbject above.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   * '[BigNumber Error] Argument not an object: {format}'\r\n   */\r\n  P.toFormat = function (dp, rm, format) {\r\n    var str,\r\n      x = this;\r\n\r\n    if (format == null) {\r\n      if (dp != null && rm && typeof rm == 'object') {\r\n        format = rm;\r\n        rm = null;\r\n      } else if (dp && typeof dp == 'object') {\r\n        format = dp;\r\n        dp = rm = null;\r\n      } else {\r\n        format = FORMAT;\r\n      }\r\n    } else if (typeof format != 'object') {\r\n      throw Error\r\n        (bignumberError + 'Argument not an object: ' + format);\r\n    }\r\n\r\n    str = x.toFixed(dp, rm);\r\n\r\n    if (x.c) {\r\n      var i,\r\n        arr = str.split('.'),\r\n        g1 = +format.groupSize,\r\n        g2 = +format.secondaryGroupSize,\r\n        groupSeparator = format.groupSeparator || '',\r\n        intPart = arr[0],\r\n        fractionPart = arr[1],\r\n        isNeg = x.s < 0,\r\n        intDigits = isNeg ? intPart.slice(1) : intPart,\r\n        len = intDigits.length;\r\n\r\n      if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n      if (g1 > 0 && len > 0) {\r\n        i = len % g1 || g1;\r\n        intPart = intDigits.substr(0, i);\r\n        for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n        if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n        if (isNeg) intPart = '-' + intPart;\r\n      }\r\n\r\n      str = fractionPart\r\n       ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n        ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n         '$&' + (format.fractionGroupSeparator || ''))\r\n        : fractionPart)\r\n       : intPart;\r\n    }\r\n\r\n    return (format.prefix || '') + str + (format.suffix || '');\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n   * fraction with an integer numerator and an integer denominator.\r\n   * The denominator will be a positive non-zero value less than or equal to the specified\r\n   * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n   * the lowest value necessary to represent the number exactly.\r\n   *\r\n   * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n   *\r\n   * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n   */\r\n  P.toFraction = function (md) {\r\n    var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n      x = this,\r\n      xc = x.c;\r\n\r\n    if (md != null) {\r\n      n = new BigNumber(md);\r\n\r\n      // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n      if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n        throw Error\r\n          (bignumberError + 'Argument ' +\r\n            (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n      }\r\n    }\r\n\r\n    if (!xc) return new BigNumber(x);\r\n\r\n    d = new BigNumber(ONE);\r\n    n1 = d0 = new BigNumber(ONE);\r\n    d1 = n0 = new BigNumber(ONE);\r\n    s = coeffToString(xc);\r\n\r\n    // Determine initial denominator.\r\n    // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n    e = d.e = s.length - x.e - 1;\r\n    d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n    md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n    exp = MAX_EXP;\r\n    MAX_EXP = 1 / 0;\r\n    n = new BigNumber(s);\r\n\r\n    // n0 = d1 = 0\r\n    n0.c[0] = 0;\r\n\r\n    for (; ;)  {\r\n      q = div(n, d, 0, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.comparedTo(md) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      n1 = n0.plus(q.times(d2 = n1));\r\n      n0 = d2;\r\n      d = n.minus(q.times(d2 = d));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = div(md.minus(d0), d1, 0, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n    e = e * 2;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n    r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n        div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n    MAX_EXP = exp;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this BigNumber converted to a number primitive.\r\n   */\r\n  P.toNumber = function () {\r\n    return +valueOf(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n   * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n   * necessary to represent the integer part of the value in fixed-point notation, then use\r\n   * exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    if (sd != null) intCheck(sd, 1, MAX);\r\n    return format(this, sd, rm, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n   * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n   * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n   * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n   * TO_EXP_NEG, return exponential notation.\r\n   *\r\n   * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n   *\r\n   * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n   */\r\n  P.toString = function (b) {\r\n    var str,\r\n      n = this,\r\n      s = n.s,\r\n      e = n.e;\r\n\r\n    // Infinity or NaN?\r\n    if (e === null) {\r\n      if (s) {\r\n        str = 'Infinity';\r\n        if (s < 0) str = '-' + str;\r\n      } else {\r\n        str = 'NaN';\r\n      }\r\n    } else {\r\n      if (b == null) {\r\n        str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n         ? toExponential(coeffToString(n.c), e)\r\n         : toFixedPoint(coeffToString(n.c), e, '0');\r\n      } else if (b === 10) {\r\n        n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n        str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n      } else {\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n        str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n      }\r\n\r\n      if (s < 0 && n.c[0]) str = '-' + str;\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return as toString, but do not accept a base argument, and include the minus sign for\r\n   * negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return valueOf(this);\r\n  };\r\n\r\n\r\n  P._isBigNumber = true;\r\n\r\n  P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n  // Node.js v10.12.0+\r\n  P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n\r\n  if (configObject != null) BigNumber.set(configObject);\r\n\r\n  return BigNumber;\r\n}\r\n\r\n\r\n// PRIVATE HELPER FUNCTIONS\r\n\r\n// These functions don't need access to variables,\r\n// e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\nfunction bitFloor(n) {\r\n  var i = n | 0;\r\n  return n > 0 || n === i ? i : i - 1;\r\n}\r\n\r\n\r\n// Return a coefficient array as a string of base 10 digits.\r\nfunction coeffToString(a) {\r\n  var s, z,\r\n    i = 1,\r\n    j = a.length,\r\n    r = a[0] + '';\r\n\r\n  for (; i < j;) {\r\n    s = a[i++] + '';\r\n    z = LOG_BASE - s.length;\r\n    for (; z--; s = '0' + s);\r\n    r += s;\r\n  }\r\n\r\n  // Determine trailing zeros.\r\n  for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n  return r.slice(0, j + 1 || 1);\r\n}\r\n\r\n\r\n// Compare the value of BigNumbers x and y.\r\nfunction compare(x, y) {\r\n  var a, b,\r\n    xc = x.c,\r\n    yc = y.c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either NaN?\r\n  if (!i || !j) return null;\r\n\r\n  a = xc && !xc[0];\r\n  b = yc && !yc[0];\r\n\r\n  // Either zero?\r\n  if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  a = i < 0;\r\n  b = k == l;\r\n\r\n  // Either Infinity?\r\n  if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n  // Compare exponents.\r\n  if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n}\r\n\r\n\r\n/*\r\n * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n */\r\nfunction intCheck(n, min, max, name) {\r\n  if (n < min || n > max || n !== mathfloor(n)) {\r\n    throw Error\r\n     (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n       ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n       : ' not a primitive number: ') + String(n));\r\n  }\r\n}\r\n\r\n\r\n// Assumes finite n.\r\nfunction isOdd(n) {\r\n  var k = n.c.length - 1;\r\n  return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n}\r\n\r\n\r\nfunction toExponential(str, e) {\r\n  return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n   (e < 0 ? 'e' : 'e+') + e;\r\n}\r\n\r\n\r\nfunction toFixedPoint(str, e, z) {\r\n  var len, zs;\r\n\r\n  // Negative exponent?\r\n  if (e < 0) {\r\n\r\n    // Prepend zeros.\r\n    for (zs = z + '.'; ++e; zs += z);\r\n    str = zs + str;\r\n\r\n  // Positive exponent\r\n  } else {\r\n    len = str.length;\r\n\r\n    // Append zeros.\r\n    if (++e > len) {\r\n      for (zs = z, e -= len; --e; zs += z);\r\n      str += zs;\r\n    } else if (e < len) {\r\n      str = str.slice(0, e) + '.' + str.slice(e);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// EXPORT\r\n\r\n\r\nexport var BigNumber = clone();\r\n\r\nexport default BigNumber;\r\n","import { BigNumber } from 'bignumber.js';\nBigNumber.config({\n    EXPONENTIAL_AT: [-100, 100],\n    ROUNDING_MODE: 1,\n    DECIMAL_PLACES: 18,\n});\n\nexport const ZERO = bnum(0);\nexport const ONE = bnum(1);\nexport const INFINITY = bnum('Infinity');\n\nexport function scale(input: BigNumber, decimalPlaces: number): BigNumber {\n    const scalePow = new BigNumber(decimalPlaces.toString());\n    const scaleMul = new BigNumber(10).pow(scalePow);\n    return input.times(scaleMul);\n}\n\nexport function bnum(val: string | number | BigNumber): BigNumber {\n    return new BigNumber(val.toString());\n}\n\nexport { BigNumber };\n","export const BZERO = BigInt(0);\nexport const BONE = BigInt(1);\nexport const ONE = BigInt('1000000000000000000'); // 18 decimal places\n\nconst _require = (b: boolean, message: string) => {\n    if (!b) throw new Error(message);\n};\n\n/**\n * @dev Returns a scaling factor that, when multiplied to a token amount for `token`, normalizes its balance as if\n * it had 18 decimals.\n */\nexport function _computeScalingFactor(tokenDecimals: bigint): bigint {\n    // Tokens with more than 18 decimals are not supported.\n    const decimalsDifference = BigInt(18) - tokenDecimals;\n    return ONE * BigInt(10) ** decimalsDifference;\n}\n\n/**\n * @dev Applies `scalingFactor` to `amount`, resulting in a larger or equal value depending on whether it needed\n * scaling or not.\n */\nexport function _upscale(amount: bigint, scalingFactor: bigint): bigint {\n    // Upscale rounding wouldn't necessarily always go in the same direction: in a swap for example the balance of\n    // token in should be rounded up, and that of token out rounded down. This is the only place where we round in\n    // the same direction for all amounts, as the impact of this rounding is expected to be minimal (and there's no\n    // rounding error unless `_scalingFactor()` is overriden).\n    return MathSol.mulDownFixed(amount, scalingFactor);\n}\n\n/**\n * @dev Same as `_upscale`, but for an entire array. This function does not return anything, but instead *mutates*\n * the `amounts` array.\n */\nexport function _upscaleArray(\n    amounts: bigint[],\n    scalingFactors: bigint[]\n): bigint[] {\n    const upscaledAmounts = new Array<bigint>(amounts.length);\n    for (let i = 0; i < amounts.length; ++i) {\n        upscaledAmounts[i] = MathSol.mulDownFixed(\n            amounts[i],\n            scalingFactors[i]\n        );\n    }\n    return upscaledAmounts;\n}\n\n/**\n * @dev Reverses the `scalingFactor` applied to `amount`, resulting in a smaller or equal value depending on\n * whether it needed scaling or not. The result is rounded down.\n */\nexport function _downscaleDown(amount: bigint, scalingFactor: bigint): bigint {\n    return MathSol.divDownFixed(amount, scalingFactor);\n}\n\n/**\n * @dev Same as `_downscaleDown`, but for an entire array. This function does not return anything, but instead\n * *mutates* the `amounts` array.\n */\nexport function _downscaleDownArray(\n    amounts: bigint[],\n    scalingFactors: bigint[]\n): bigint[] {\n    const downscaledAmounts = new Array<bigint>(amounts.length);\n    for (let i = 0; i < amounts.length; ++i) {\n        downscaledAmounts[i] = MathSol.divDownFixed(\n            amounts[i],\n            scalingFactors[i]\n        );\n    }\n    return downscaledAmounts;\n}\n\n/**\n * @dev Reverses the `scalingFactor` applied to `amount`, resulting in a smaller or equal value depending on\n * whether it needed scaling or not. The result is rounded up.\n */\nexport function _downscaleUp(amount: bigint, scalingFactor: bigint): bigint {\n    return MathSol.divUpFixed(amount, scalingFactor);\n}\n\n/**\n * @dev Same as `_downscaleUp`, but for an entire array. This function does not return anything, but instead\n * *mutates* the `amounts` array.\n */\nexport function _downscaleUpArray(\n    amounts: bigint[],\n    scalingFactors: bigint[]\n): bigint[] {\n    const downscaledAmounts = new Array<bigint>(amounts.length);\n    for (let i = 0; i < amounts.length; ++i) {\n        downscaledAmounts[i] = MathSol.divUpFixed(\n            amounts[i],\n            scalingFactors[i]\n        );\n    }\n    return downscaledAmounts;\n}\n\nexport class MathSol {\n    /**\n     * @dev Returns the addition of two unsigned integers of 256 bits, reverting on overflow.\n     */\n    // add(a: bigint, b: bigint): bigint {\n    //     const c = a + b;\n    //     // _require(c >= a, Errors.ADD_OVERFLOW);\n    //     return c;\n    // }\n\n    /**\n     * @dev Returns the addition of two signed integers, reverting on overflow.\n     */\n    static add(a: bigint, b: bigint): bigint {\n        const c = a + b;\n        _require((b >= 0 && c >= a) || (b < 0 && c < a), 'Errors.ADD_OVERFLOW');\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers of 256 bits, reverting on overflow.\n     */\n    static sub(a: bigint, b: bigint): bigint {\n        _require(b <= a, 'Errors.SUB_OVERFLOW');\n        const c = a - b;\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two signed integers, reverting on overflow.\n     */\n    // sub(int256 a, int256 b) internal pure returns (int256) {\n    //     int256 c = a - b;\n    //     // _require((b >= 0 && c <= a) || (b < 0 && c > a), Errors.SUB_OVERFLOW);\n    //     return c;\n    // }\n\n    /**\n     * @dev Returns the largest of two numbers of 256 bits.\n     */\n    static max(a: bigint, b: bigint): bigint {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers of 256 bits.\n     */\n    static min(a: bigint, b: bigint): bigint {\n        return a < b ? a : b;\n    }\n\n    static mul(a: bigint, b: bigint): bigint {\n        const c = a * b;\n        _require(a == BZERO || c / a == b, 'Errors.MUL_OVERFLOW');\n        return c;\n    }\n\n    static div(a: bigint, b: bigint, roundUp: boolean): bigint {\n        return roundUp ? this.divUp(a, b) : this.divDown(a, b);\n    }\n\n    static divDown(a: bigint, b: bigint): bigint {\n        _require(b != BZERO, 'Errors.ZERO_DIVISION');\n        return a / b;\n    }\n\n    static divUp(a: bigint, b: bigint): bigint {\n        _require(b != BZERO, 'Errors.ZERO_DIVISION');\n\n        if (a == BZERO) {\n            return BZERO;\n        } else {\n            return BONE + (a - BONE) / b;\n        }\n    }\n\n    // Modification: Taken from the fixed point class\n    static ONE = BigInt('1000000000000000000'); // 18 decimal places\n    static MAX_POW_RELATIVE_ERROR = BigInt(10000);\n\n    static mulUpFixed(a: bigint, b: bigint): bigint {\n        const product = a * b;\n        _require(a == BZERO || product / a == b, 'Errors.MUL_OVERFLOW');\n\n        if (product == BZERO) {\n            return BZERO;\n        } else {\n            // The traditional divUp formula is:\n            // divUp(x, y) := (x + y - 1) / y\n            // To avoid intermediate overflow in the addition, we distribute the division and get:\n            // divUp(x, y) := (x - 1) / y + 1\n            // Note that this requires x != 0, which we already tested for.\n\n            return (product - BONE) / this.ONE + BONE;\n        }\n    }\n\n    // Modification: Taken from the fixed point class\n    // Same as divDown in Smart Contract FixedPoint.sol\n    static divDownFixed(a: bigint, b: bigint): bigint {\n        _require(b != BZERO, 'Errors.ZERO_DIVISION');\n        if (a == BZERO) {\n            return BZERO;\n        } else {\n            const aInflated = a * this.ONE;\n            // _require(aInflated / a == ONE, Errors.DIV_INTERNAL); // mul overflow\n\n            return aInflated / b;\n        }\n    }\n\n    // Modification: Taken from the fixed point class\n    static divUpFixed(a: bigint, b: bigint): bigint {\n        _require(b != BZERO, 'Errors.ZERO_DIVISION');\n\n        if (a == BZERO) {\n            return BZERO;\n        } else {\n            const aInflated = a * this.ONE;\n            _require(aInflated / a == this.ONE, 'Errors.DIV_INTERNAL'); // mul overflow\n\n            // The traditional divUp formula is:\n            // divUp(x, y) := (x + y - 1) / y\n            // To avoid intermediate overflow in the addition, we distribute the division and get:\n            // divUp(x, y) := (x - 1) / y + 1\n            // Note that this requires x != 0, which we already tested for.\n\n            return (aInflated - BONE) / b + BONE;\n        }\n    }\n\n    // Modification: Taken from the fixed point class\n    static powUpFixed(x: bigint, y: bigint): bigint {\n        const raw = LogExpMath.pow(x, y);\n        const maxError = this.add(\n            this.mulUpFixed(raw, this.MAX_POW_RELATIVE_ERROR),\n            BONE\n        );\n\n        return this.add(raw, maxError);\n    }\n\n    static powDown(x: bigint, y: bigint): bigint {\n        const raw = LogExpMath.pow(x, y);\n        const maxError = this.add(\n            this.mulUpFixed(raw, this.MAX_POW_RELATIVE_ERROR),\n            BONE\n        );\n        return this.sub(raw, maxError);\n    }\n\n    // Modification: Taken from the fixed point class\n    static complementFixed(x: bigint): bigint {\n        return x < this.ONE ? this.ONE - x : BZERO;\n    }\n\n    // This is the same as mulDown in Smart Contracts FixedPoint.sol\n    static mulDownFixed(a: bigint, b: bigint): bigint {\n        const product = a * b;\n        _require(a == BZERO || product / a == b, 'Errors.MUL_OVERFLOW');\n\n        return product / this.ONE;\n    }\n}\n\nclass LogExpMath {\n    // All fixed point multiplications and divisions are inlined. This means we need to divide by ONE when multiplying\n    // two numbers, and multiply by ONE when dividing them.\n\n    // All arguments and return values are 18 decimal fixed point numbers.\n    static ONE_18 = BigInt('1000000000000000000');\n\n    // Internally, intermediate values are computed with higher precision as 20 decimal fixed point numbers, and in the\n    // case of ln36, 36 decimals.\n    static ONE_20 = BigInt('100000000000000000000');\n    static ONE_36 = BigInt('1000000000000000000000000000000000000');\n\n    // The domain of natural exponentiation is bound by the word size and number of decimals used.\n    //\n    // Because internally the result will be stored using 20 decimals, the largest possible result is\n    // (2^255 - 1) / 10^20, which makes the largest exponent ln((2^255 - 1) / 10^20) = 130.700829182905140221.\n    // The smallest possible result is 10^(-18), which makes largest negative argument\n    // ln(10^(-18)) = -41.446531673892822312.\n    // We use 130.0 and -41.0 to have some safety margin.\n    static MAX_NATURAL_EXPONENT = BigInt('130000000000000000000');\n    static MIN_NATURAL_EXPONENT = BigInt('-41000000000000000000');\n\n    // Bounds for ln_36's argument. Both ln(0.9) and ln(1.1) can be represented with 36 decimal places in a fixed point\n    // 256 bit integer.\n    static LN_36_LOWER_BOUND: bigint =\n        BigInt(LogExpMath.ONE_18) - BigInt('100000000000000000');\n    static LN_36_UPPER_BOUND: bigint =\n        BigInt(LogExpMath.ONE_18) + BigInt('100000000000000000');\n\n    static MILD_EXPONENT_BOUND: bigint =\n        BigInt(2) ** BigInt(254) / LogExpMath.ONE_20;\n\n    // 18 decimal constants\n    static x0 = BigInt('128000000000000000000'); // 2ˆ7\n    static a0 = BigInt(\n        '38877084059945950922200000000000000000000000000000000000'\n    ); // eˆ(x0) (no decimals)\n    static x1 = BigInt('64000000000000000000'); // 2ˆ6\n    static a1 = BigInt('6235149080811616882910000000'); // eˆ(x1) (no decimals)\n\n    // 20 decimal constants\n    static x2 = BigInt('3200000000000000000000'); // 2ˆ5\n    static a2 = BigInt('7896296018268069516100000000000000'); // eˆ(x2)\n    static x3 = BigInt('1600000000000000000000'); // 2ˆ4\n    static a3 = BigInt('888611052050787263676000000'); // eˆ(x3)\n    static x4 = BigInt('800000000000000000000'); // 2ˆ3\n    static a4 = BigInt('298095798704172827474000'); // eˆ(x4)\n    static x5 = BigInt('400000000000000000000'); // 2ˆ2\n    static a5 = BigInt('5459815003314423907810'); // eˆ(x5)\n    static x6 = BigInt('200000000000000000000'); // 2ˆ1\n    static a6 = BigInt('738905609893065022723'); // eˆ(x6)\n    static x7 = BigInt('100000000000000000000'); // 2ˆ0\n    static a7 = BigInt('271828182845904523536'); // eˆ(x7)\n    static x8 = BigInt('50000000000000000000'); // 2ˆ-1\n    static a8 = BigInt('164872127070012814685'); // eˆ(x8)\n    static x9 = BigInt('25000000000000000000'); // 2ˆ-2\n    static a9 = BigInt('128402541668774148407'); // eˆ(x9)\n    static x10 = BigInt('12500000000000000000'); // 2ˆ-3\n    static a10 = BigInt('113314845306682631683'); // eˆ(x10)\n    static x11 = BigInt('6250000000000000000'); // 2ˆ-4\n    static a11 = BigInt('106449445891785942956'); // eˆ(x11)\n\n    // All arguments and return values are 18 decimal fixed point numbers.\n    static pow(x: bigint, y: bigint): bigint {\n        if (y === BZERO) {\n            // We solve the 0^0 indetermination by making it equal one.\n            return this.ONE_18;\n        }\n\n        if (x == BZERO) {\n            return BZERO;\n        }\n\n        // Instead of computing x^y directly, we instead rely on the properties of logarithms and exponentiation to\n        // arrive at that result. In particular, exp(ln(x)) = x, and ln(x^y) = y * ln(x). This means\n        // x^y = exp(y * ln(x)).\n\n        // The ln function takes a signed value, so we need to make sure x fits in the signed 256 bit range.\n        _require(\n            x <\n                BigInt(\n                    '57896044618658097711785492504343953926634992332820282019728792003956564819968'\n                ),\n            'Errors.X_OUT_OF_BOUNDS'\n        );\n        const x_int256 = x;\n\n        // We will compute y * ln(x) in a single step. Depending on the value of x, we can either use ln or ln_36. In\n        // both cases, we leave the division by ONE_18 (due to fixed point multiplication) to the end.\n\n        // This prevents y * ln(x) from overflowing, and at the same time guarantees y fits in the signed 256 bit range.\n        _require(y < this.MILD_EXPONENT_BOUND, 'Errors.Y_OUT_OF_BOUNDS');\n        const y_int256 = y;\n\n        let logx_times_y;\n        if (\n            this.LN_36_LOWER_BOUND < x_int256 &&\n            x_int256 < this.LN_36_UPPER_BOUND\n        ) {\n            const ln_36_x = this._ln_36(x_int256);\n\n            // ln_36_x has 36 decimal places, so multiplying by y_int256 isn't as straightforward, since we can't just\n            // bring y_int256 to 36 decimal places, as it might overflow. Instead, we perform two 18 decimal\n            // multiplications and add the results: one with the first 18 decimals of ln_36_x, and one with the\n            // (downscaled) last 18 decimals.\n            logx_times_y =\n                (ln_36_x / this.ONE_18) * y_int256 +\n                ((ln_36_x % this.ONE_18) * y_int256) / this.ONE_18;\n        } else {\n            logx_times_y = this._ln(x_int256) * y_int256;\n        }\n        logx_times_y /= this.ONE_18;\n\n        // Finally, we compute exp(y * ln(x)) to arrive at x^y\n        _require(\n            this.MIN_NATURAL_EXPONENT <= logx_times_y &&\n                logx_times_y <= this.MAX_NATURAL_EXPONENT,\n            'Errors.PRODUCT_OUT_OF_BOUNDS'\n        );\n\n        // return uint256(exp(logx_times_y));\n        return this.exp(logx_times_y);\n    }\n\n    static exp(x: bigint): bigint {\n        _require(\n            x >= this.MIN_NATURAL_EXPONENT && x <= this.MAX_NATURAL_EXPONENT,\n            'Errors.INVALID_EXPONENT'\n        );\n\n        if (x < 0) {\n            // We only handle positive exponents: e^(-x) is computed as 1 / e^x. We can safely make x positive since it\n            // fits in the signed 256 bit range (as it is larger than MIN_NATURAL_EXPONENT).\n            // Fixed point division requires multiplying by ONE_18.\n            return (this.ONE_18 * this.ONE_18) / this.exp(BigInt(-1) * x);\n        }\n\n        // First, we use the fact that e^(x+y) = e^x * e^y to decompose x into a sum of powers of two, which we call x_n,\n        // where x_n == 2^(7 - n), and e^x_n = a_n has been precomputed. We choose the first x_n, x0, to equal 2^7\n        // because all larger powers are larger than MAX_NATURAL_EXPONENT, and therefore not present in the\n        // decomposition.\n        // At the end of this process we will have the product of all e^x_n = a_n that apply, and the remainder of this\n        // decomposition, which will be lower than the smallest x_n.\n        // exp(x) = k_0 * a_0 * k_1 * a_1 * ... + k_n * a_n * exp(remainder), where each k_n equals either 0 or 1.\n        // We mutate x by subtracting x_n, making it the remainder of the decomposition.\n\n        // The first two a_n (e^(2^7) and e^(2^6)) are too large if stored as 18 decimal numbers, and could cause\n        // intermediate overflows. Instead we store them as plain integers, with 0 decimals.\n        // Additionally, x0 + x1 is larger than MAX_NATURAL_EXPONENT, which means they will not both be present in the\n        // decomposition.\n\n        // For each x_n, we test if that term is present in the decomposition (if x is larger than it), and if so deduct\n        // it and compute the accumulated product.\n\n        let firstAN;\n        if (x >= this.x0) {\n            x -= this.x0;\n            firstAN = this.a0;\n        } else if (x >= this.x1) {\n            x -= this.x1;\n            firstAN = this.a1;\n        } else {\n            firstAN = BigInt(1); // One with no decimal places\n        }\n\n        // We now transform x into a 20 decimal fixed point number, to have enhanced precision when computing the\n        // smaller terms.\n        x *= BigInt(100);\n\n        // `product` is the accumulated product of all a_n (except a0 and a1), which starts at 20 decimal fixed point\n        // one. Recall that fixed point multiplication requires dividing by ONE_20.\n        let product = this.ONE_20;\n\n        if (x >= this.x2) {\n            x -= this.x2;\n            product = (product * this.a2) / this.ONE_20;\n        }\n        if (x >= this.x3) {\n            x -= this.x3;\n            product = (product * this.a3) / this.ONE_20;\n        }\n        if (x >= this.x4) {\n            x -= this.x4;\n            product = (product * this.a4) / this.ONE_20;\n        }\n        if (x >= this.x5) {\n            x -= this.x5;\n            product = (product * this.a5) / this.ONE_20;\n        }\n        if (x >= this.x6) {\n            x -= this.x6;\n            product = (product * this.a6) / this.ONE_20;\n        }\n        if (x >= this.x7) {\n            x -= this.x7;\n            product = (product * this.a7) / this.ONE_20;\n        }\n        if (x >= this.x8) {\n            x -= this.x8;\n            product = (product * this.a8) / this.ONE_20;\n        }\n        if (x >= this.x9) {\n            x -= this.x9;\n            product = (product * this.a9) / this.ONE_20;\n        }\n\n        // x10 and x11 are unnecessary here since we have high enough precision already.\n\n        // Now we need to compute e^x, where x is small (in particular, it is smaller than x9). We use the Taylor series\n        // expansion for e^x: 1 + x + (x^2 / 2!) + (x^3 / 3!) + ... + (x^n / n!).\n\n        let seriesSum = this.ONE_20; // The initial one in the sum, with 20 decimal places.\n        let term; // Each term in the sum, where the nth term is (x^n / n!).\n\n        // The first term is simply x.\n        term = x;\n        seriesSum += term;\n\n        // Each term (x^n / n!) equals the previous one times x, divided by n. Since x is a fixed point number,\n        // multiplying by it requires dividing by this.ONE_20, but dividing by the non-fixed point n values does not.\n\n        term = (term * x) / this.ONE_20 / BigInt(2);\n        seriesSum += term;\n\n        term = (term * x) / this.ONE_20 / BigInt(3);\n        seriesSum += term;\n\n        term = (term * x) / this.ONE_20 / BigInt(4);\n        seriesSum += term;\n\n        term = (term * x) / this.ONE_20 / BigInt(5);\n        seriesSum += term;\n\n        term = (term * x) / this.ONE_20 / BigInt(6);\n        seriesSum += term;\n\n        term = (term * x) / this.ONE_20 / BigInt(7);\n        seriesSum += term;\n\n        term = (term * x) / this.ONE_20 / BigInt(8);\n        seriesSum += term;\n\n        term = (term * x) / this.ONE_20 / BigInt(9);\n        seriesSum += term;\n\n        term = (term * x) / this.ONE_20 / BigInt(10);\n        seriesSum += term;\n\n        term = (term * x) / this.ONE_20 / BigInt(11);\n        seriesSum += term;\n\n        term = (term * x) / this.ONE_20 / BigInt(12);\n        seriesSum += term;\n\n        // 12 Taylor terms are sufficient for 18 decimal precision.\n\n        // We now have the first a_n (with no decimals), and the product of all other a_n present, and the Taylor\n        // approximation of the exponentiation of the remainder (both with 20 decimals). All that remains is to multiply\n        // all three (one 20 decimal fixed point multiplication, dividing by this.ONE_20, and one integer multiplication),\n        // and then drop two digits to return an 18 decimal value.\n\n        return (((product * seriesSum) / this.ONE_20) * firstAN) / BigInt(100);\n    }\n\n    static _ln_36(x: bigint): bigint {\n        // Since ln(1) = 0, a value of x close to one will yield a very small result, which makes using 36 digits\n        // worthwhile.\n\n        // First, we transform x to a 36 digit fixed point value.\n        x *= this.ONE_18;\n\n        // We will use the following Taylor expansion, which converges very rapidly. Let z = (x - 1) / (x + 1).\n        // ln(x) = 2 * (z + z^3 / 3 + z^5 / 5 + z^7 / 7 + ... + z^(2 * n + 1) / (2 * n + 1))\n\n        // Recall that 36 digit fixed point division requires multiplying by ONE_36, and multiplication requires\n        // division by ONE_36.\n        const z = ((x - this.ONE_36) * this.ONE_36) / (x + this.ONE_36);\n        const z_squared = (z * z) / this.ONE_36;\n\n        // num is the numerator of the series: the z^(2 * n + 1) term\n        let num = z;\n\n        // seriesSum holds the accumulated sum of each term in the series, starting with the initial z\n        let seriesSum = num;\n\n        // In each step, the numerator is multiplied by z^2\n        num = (num * z_squared) / this.ONE_36;\n        seriesSum += num / BigInt(3);\n\n        num = (num * z_squared) / this.ONE_36;\n        seriesSum += num / BigInt(5);\n\n        num = (num * z_squared) / this.ONE_36;\n        seriesSum += num / BigInt(7);\n\n        num = (num * z_squared) / this.ONE_36;\n        seriesSum += num / BigInt(9);\n\n        num = (num * z_squared) / this.ONE_36;\n        seriesSum += num / BigInt(11);\n\n        num = (num * z_squared) / this.ONE_36;\n        seriesSum += num / BigInt(13);\n\n        num = (num * z_squared) / this.ONE_36;\n        seriesSum += num / BigInt(15);\n\n        // 8 Taylor terms are sufficient for 36 decimal precision.\n\n        // All that remains is multiplying by 2 (non fixed point).\n        return seriesSum * BigInt(2);\n    }\n\n    /**\n     * @dev Internal natural logarithm (ln(a)) with signed 18 decimal fixed point argument.\n     */\n    static _ln(a: bigint): bigint {\n        if (a < this.ONE_18) {\n            // Since ln(a^k) = k * ln(a), we can compute ln(a) as ln(a) = ln((1/a)^(-1)) = - ln((1/a)). If a is less\n            // than one, 1/a will be greater than one, and this if statement will not be entered in the recursive call.\n            // Fixed point division requires multiplying by this.ONE_18.\n            return BigInt(-1) * this._ln((this.ONE_18 * this.ONE_18) / a);\n        }\n\n        // First, we use the fact that ln^(a * b) = ln(a) + ln(b) to decompose ln(a) into a sum of powers of two, which\n        // we call x_n, where x_n == 2^(7 - n), which are the natural logarithm of precomputed quantities a_n (that is,\n        // ln(a_n) = x_n). We choose the first x_n, x0, to equal 2^7 because the exponential of all larger powers cannot\n        // be represented as 18 fixed point decimal numbers in 256 bits, and are therefore larger than a.\n        // At the end of this process we will have the sum of all x_n = ln(a_n) that apply, and the remainder of this\n        // decomposition, which will be lower than the smallest a_n.\n        // ln(a) = k_0 * x_0 + k_1 * x_1 + ... + k_n * x_n + ln(remainder), where each k_n equals either 0 or 1.\n        // We mutate a by subtracting a_n, making it the remainder of the decomposition.\n\n        // For reasons related to how `exp` works, the first two a_n (e^(2^7) and e^(2^6)) are not stored as fixed point\n        // numbers with 18 decimals, but instead as plain integers with 0 decimals, so we need to multiply them by\n        // this.ONE_18 to convert them to fixed point.\n        // For each a_n, we test if that term is present in the decomposition (if a is larger than it), and if so divide\n        // by it and compute the accumulated sum.\n\n        let sum = BZERO;\n        if (a >= this.a0 * this.ONE_18) {\n            a /= this.a0; // Integer, not fixed point division\n            sum += this.x0;\n        }\n\n        if (a >= this.a1 * this.ONE_18) {\n            a /= this.a1; // Integer, not fixed point division\n            sum += this.x1;\n        }\n\n        // All other a_n and x_n are stored as 20 digit fixed point numbers, so we convert the sum and a to this format.\n        sum *= BigInt(100);\n        a *= BigInt(100);\n\n        // Because further a_n are  20 digit fixed point numbers, we multiply by ONE_20 when dividing by them.\n\n        if (a >= this.a2) {\n            a = (a * this.ONE_20) / this.a2;\n            sum += this.x2;\n        }\n\n        if (a >= this.a3) {\n            a = (a * this.ONE_20) / this.a3;\n            sum += this.x3;\n        }\n\n        if (a >= this.a4) {\n            a = (a * this.ONE_20) / this.a4;\n            sum += this.x4;\n        }\n\n        if (a >= this.a5) {\n            a = (a * this.ONE_20) / this.a5;\n            sum += this.x5;\n        }\n\n        if (a >= this.a6) {\n            a = (a * this.ONE_20) / this.a6;\n            sum += this.x6;\n        }\n\n        if (a >= this.a7) {\n            a = (a * this.ONE_20) / this.a7;\n            sum += this.x7;\n        }\n\n        if (a >= this.a8) {\n            a = (a * this.ONE_20) / this.a8;\n            sum += this.x8;\n        }\n\n        if (a >= this.a9) {\n            a = (a * this.ONE_20) / this.a9;\n            sum += this.x9;\n        }\n\n        if (a >= this.a10) {\n            a = (a * this.ONE_20) / this.a10;\n            sum += this.x10;\n        }\n\n        if (a >= this.a11) {\n            a = (a * this.ONE_20) / this.a11;\n            sum += this.x11;\n        }\n\n        // a is now a small number (smaller than a_11, which roughly equals 1.06). This means we can use a Taylor series\n        // that converges rapidly for values of `a` close to one - the same one used in ln_36.\n        // Let z = (a - 1) / (a + 1).\n        // ln(a) = 2 * (z + z^3 / 3 + z^5 / 5 + z^7 / 7 + ... + z^(2 * n + 1) / (2 * n + 1))\n\n        // Recall that 20 digit fixed point division requires multiplying by ONE_20, and multiplication requires\n        // division by ONE_20.\n        const z = ((a - this.ONE_20) * this.ONE_20) / (a + this.ONE_20);\n        const z_squared = (z * z) / this.ONE_20;\n\n        // num is the numerator of the series: the z^(2 * n + 1) term\n        let num = z;\n\n        // seriesSum holds the accumulated sum of each term in the series, starting with the initial z\n        let seriesSum = num;\n\n        // In each step, the numerator is multiplied by z^2\n        num = (num * z_squared) / this.ONE_20;\n        seriesSum += num / BigInt(3);\n\n        num = (num * z_squared) / this.ONE_20;\n        seriesSum += num / BigInt(5);\n\n        num = (num * z_squared) / this.ONE_20;\n        seriesSum += num / BigInt(7);\n\n        num = (num * z_squared) / this.ONE_20;\n        seriesSum += num / BigInt(9);\n\n        num = (num * z_squared) / this.ONE_20;\n        seriesSum += num / BigInt(11);\n\n        // 6 Taylor terms are sufficient for 36 decimal precision.\n\n        // Finally, we multiply by 2 (non fixed point) to compute ln(remainder)\n        seriesSum *= BigInt(2);\n\n        // We now have the sum of all x_n present, and the Taylor approximation of the logarithm of the remainder (both\n        // with 20 decimals). All that remains is to sum these two, and then drop two digits to return a 18 decimal\n        // value.\n\n        return (sum + seriesSum) / BigInt(100);\n    }\n}\n","import { getAddress } from '@ethersproject/address';\nimport { parseFixed, BigNumber } from '@ethersproject/bignumber';\nimport { WeiPerEther as ONE } from '@ethersproject/constants';\nimport {\n    _computeScalingFactor,\n    _downscaleDown,\n    ONE as ONE_BigInt,\n    _upscale,\n} from './basicOperations';\nimport { SubgraphToken } from '../types';\n\nexport const isSameAddress = (address1: string, address2: string): boolean =>\n    getAddress(address1) === getAddress(address2);\n\n/// Parses a fixed-point decimal string into a BigNumber\n/// If we do not have enough decimals to express the number, we truncate it\nexport function safeParseFixed(value: string, decimals = 0): BigNumber {\n    const [integer, fraction] = value.split('.');\n    if (!fraction) {\n        return parseFixed(value, decimals);\n    }\n    const safeValue = integer + '.' + fraction.slice(0, decimals);\n    return parseFixed(safeValue, decimals);\n}\n\n// normalizes its balance as if it had 18 decimals taking price rate into consideration.\nexport const normaliseBalance = (\n    token: Partial<Pick<SubgraphToken, 'priceRate'>> &\n        Pick<SubgraphToken, 'balance'>\n): bigint => {\n    return parseFixed(token.balance, 18)\n        .mul(parseFixed(token.priceRate ?? '1', 18))\n        .div(ONE)\n        .toBigInt();\n};\n\n// normalizes amount as if it had 18 decimals taking price rate into consideration.\nexport const normaliseAmount = (\n    amount: bigint,\n    token: Partial<Pick<SubgraphToken, 'priceRate'>> &\n        Pick<SubgraphToken, 'decimals'>\n): bigint => {\n    const scalingFactor = _computeScalingFactor(BigInt(token.decimals));\n    return BigNumber.from(_upscale(amount, scalingFactor).toString())\n        .mul(parseFixed(token.priceRate ?? '1', 18))\n        .div(ONE)\n        .toBigInt();\n};\n\n// denormalises amount from 18 decimals to token decimals taking price rate into consideration.\nexport const denormaliseAmount = (\n    amount: bigint,\n    token: Partial<Pick<SubgraphToken, 'priceRate'>> &\n        Pick<SubgraphToken, 'decimals'>\n): bigint => {\n    const amountAfterRate =\n        (amount * ONE_BigInt) /\n        BigInt(parseFixed(token.priceRate ?? '1', 18).toString());\n    const scalingFactor = _computeScalingFactor(BigInt(token.decimals));\n    return _downscaleDown(amountAfterRate, scalingFactor);\n};\n","import { BigNumber } from '@ethersproject/bignumber';\nimport { BigNumber as OldBigNumber } from './utils/bignumber';\n\nexport interface SorConfig {\n    chainId: number;\n    vault: string;\n    weth: string;\n    connectingTokens?: { symbol: string; address: string }[];\n    staBal3Pool?: { id: string; address: string };\n    usdcConnectingPool?: { id: string; usdc: string };\n    wETHwstETH?: { id: string; address: string };\n    lbpRaisingTokens?: string[];\n}\n\nexport type NoNullableField<T> = {\n    [P in keyof T]: NonNullable<T[P]>;\n};\n\nexport enum SwapTypes {\n    SwapExactIn,\n    SwapExactOut,\n}\n\nexport enum PoolTypes {\n    Weighted,\n    Stable,\n    Element,\n    MetaStable,\n    Linear,\n    Gyro2,\n    Gyro3,\n    GyroE,\n    Fx,\n}\n\nexport interface SwapOptions {\n    gasPrice: BigNumber;\n    swapGas: BigNumber;\n    timestamp: number;\n    maxPools: number;\n    poolTypeFilter: PoolFilter;\n    forceRefresh: boolean;\n}\n\nexport type PoolPairBase = {\n    id: string;\n    address: string;\n    poolType: PoolTypes;\n    swapFee: BigNumber;\n    tokenIn: string;\n    tokenOut: string;\n    decimalsIn: number;\n    decimalsOut: number;\n    balanceIn: BigNumber;\n    balanceOut: BigNumber;\n};\n\nexport interface Swap {\n    pool: string;\n    tokenIn: string;\n    tokenOut: string;\n    swapAmount?: string;\n    limitReturnAmount?: string;\n    maxPrice?: string;\n    tokenInDecimals: number;\n    tokenOutDecimals: number;\n    returnAmount?: string;\n}\n\nexport interface SubgraphPoolBase {\n    id: string;\n    address: string;\n    poolType: string;\n    poolTypeVersion?: number;\n    swapFee: string;\n    swapEnabled: boolean;\n    totalShares: string;\n    tokens: SubgraphToken[];\n    tokensList: string[];\n\n    // Weighted & Element field\n    totalWeight?: string;\n\n    // Stable specific fields\n    amp?: string;\n\n    // Element specific fields\n    expiryTime?: number;\n    unitSeconds?: number;\n    principalToken?: string;\n    baseToken?: string;\n\n    // Linear specific fields\n    mainIndex?: number;\n    wrappedIndex?: number;\n    lowerTarget?: string;\n    upperTarget?: string;\n\n    // Gyro2 specific fields\n    sqrtAlpha?: string;\n    sqrtBeta?: string;\n\n    // Gyro3 specific field\n    root3Alpha?: string;\n\n    // GyroE and GyroEV2 specific fields\n    alpha?: string;\n    beta?: string;\n    c?: string;\n    s?: string;\n    lambda?: string;\n    tauAlphaX?: string;\n    tauAlphaY?: string;\n    tauBetaX?: string;\n    tauBetaY?: string;\n    u?: string;\n    v?: string;\n    w?: string;\n    z?: string;\n    dSq?: string;\n\n    // GyroEV2 specific fields\n    tokenRates?: string[];\n\n    // FxPool\n    delta?: string;\n    epsilon?: string;\n}\n\nexport type SubgraphToken = {\n    address: string;\n    balance: string;\n    decimals: number;\n    priceRate: string;\n    // WeightedPool field\n    weight: string | null;\n    token?: SubgraphTokenData;\n};\n\nexport type SubgraphTokenData = {\n    latestFXPrice?: string;\n};\n\nexport interface SwapV2 {\n    poolId: string;\n    assetInIndex: number;\n    assetOutIndex: number;\n    amount: string;\n    userData: string;\n    returnAmount?: string;\n}\n\nexport interface SwapInfo {\n    tokenAddresses: string[];\n    swaps: SwapV2[];\n    swapAmount: BigNumber;\n    swapAmountForSwaps: BigNumber; // Used with stETH/wstETH\n    returnAmount: BigNumber;\n    returnAmountFromSwaps: BigNumber; // Used with stETH/wstETH\n    returnAmountConsideringFees: BigNumber;\n    tokenIn: string;\n    tokenInForSwaps?: string; // Used with stETH/wstETH\n    tokenOut: string;\n    tokenOutFromSwaps?: string; // Used with stETH/wstETH\n    marketSp: string;\n}\n\nexport interface PoolDictionary {\n    [poolId: string]: PoolBase;\n}\n\nexport interface PoolPairDictionary {\n    [tokenInOut: string]: PoolPairBase;\n}\n\nexport interface hopDictionary {\n    [hopToken: string]: Set<string>; // the set of pool ids\n}\n\nexport interface NewPath {\n    id: string; // pool address if direct path, contactenation of pool addresses if multihop\n    swaps: Swap[];\n    poolPairData: PoolPairBase[];\n    limitAmount: BigNumber;\n    pools: PoolBase[];\n    filterEffectivePrice?: OldBigNumber; // TODO: This is just used for filtering, maybe there is a better way to filter?\n}\n\nexport enum PoolFilter {\n    All = 'All',\n    Weighted = 'Weighted',\n    Stable = 'Stable',\n    MetaStable = 'MetaStable',\n    LiquidityBootstrapping = 'LiquidityBootstrapping',\n    Investment = 'Investment',\n    Element = 'Element',\n    StablePhantom = 'StablePhantom',\n    ComposableStable = 'ComposableStable',\n    Gyro2 = 'Gyro2',\n    Gyro3 = 'Gyro3',\n    GyroE = 'GyroE',\n    // Linear Pools defined below all operate the same mathematically but have different factories and names in Subgraph\n    AaveLinear = 'AaveLinear',\n    Linear = 'Linear',\n    EulerLinear = 'EulerLinear',\n    ERC4626Linear = 'ERC4626Linear',\n    BeefyLinear = 'BeefyLinear',\n    GearboxLinear = 'GearboxLinear',\n    MidasLinear = 'MidasLinear',\n    ReaperLinear = 'ReaperLinear',\n    SiloLinear = 'SiloLinear',\n    TetuLinear = 'TetuLinear',\n    YearnLinear = 'YearnLinear',\n    // FX = 'FX',\n}\n\nexport interface PoolBase<D extends PoolPairBase = PoolPairBase> {\n    poolType: PoolTypes;\n    id: string;\n    address: string;\n    tokensList: string[];\n    tokens: { address: string; balance: string; decimals: number }[];\n    totalShares: BigNumber;\n    mainIndex?: number;\n    isLBP?: boolean;\n    parsePoolPairData: (tokenIn: string, tokenOut: string) => D;\n    getNormalizedLiquidity: (poolPairData: D) => OldBigNumber;\n    getLimitAmountSwap: (poolPairData: D, swapType: SwapTypes) => OldBigNumber;\n    /**\n     * @param {string} token - Address of token.\n     * @param {BigNumber} newBalance - New balance of token. EVM scaled.\n     */\n    updateTokenBalanceForPool: (token: string, newBalance: BigNumber) => void;\n    updateTotalShares: (newTotalShares: BigNumber) => void;\n    _exactTokenInForTokenOut: (\n        poolPairData: D,\n        amount: OldBigNumber\n    ) => OldBigNumber;\n    _tokenInForExactTokenOut: (\n        poolPairData: D,\n        amount: OldBigNumber\n    ) => OldBigNumber;\n    _calcTokensOutGivenExactBptIn(bptAmountIn: BigNumber): BigNumber[];\n    _calcBptOutGivenExactTokensIn(amountsIn: BigNumber[]): BigNumber;\n    _spotPriceAfterSwapExactTokenInForTokenOut: (\n        poolPairData: D,\n        amount: OldBigNumber\n    ) => OldBigNumber;\n    _spotPriceAfterSwapTokenInForExactTokenOut: (\n        poolPairData: D,\n        amount: OldBigNumber\n    ) => OldBigNumber;\n    _derivativeSpotPriceAfterSwapExactTokenInForTokenOut: (\n        poolPairData: D,\n        amount: OldBigNumber\n    ) => OldBigNumber;\n    _derivativeSpotPriceAfterSwapTokenInForExactTokenOut: (\n        poolPairData: D,\n        amount: OldBigNumber\n    ) => OldBigNumber;\n}\n\nexport interface WeightedPool<D extends PoolPairBase> extends PoolBase<D> {\n    totalWeight: string;\n}\n\nexport interface TokenPriceService {\n    /**\n     * This should return the price of the native asset (ETH) in the token defined by tokenAddress.\n     * Example: BAL = $20 USD, ETH = $4,000 USD, then 1 ETH = 200 BAL. This function would return 200.\n     * @param tokenAddress\n     */\n    getNativeAssetPriceInToken(tokenAddress: string): Promise<string>;\n}\n\nexport interface PoolDataService {\n    getPools(query?: GraphQLArgs): Promise<SubgraphPoolBase[]>;\n}\n\nexport type FundManagement = {\n    sender: string;\n    recipient: string;\n    fromInternalBalance: boolean;\n    toInternalBalance: boolean;\n};\n\ntype GraphQLFilterOperator = 'gt' | 'lt' | 'eq' | 'in' | 'not_in' | 'contains';\n\ntype GraphQLFilter = {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [operator in GraphQLFilterOperator]?: any;\n};\n\nexport interface GraphQLArgs {\n    chainId?: number;\n    first?: number;\n    skip?: number;\n    nextToken?: string;\n    orderBy?: string;\n    orderDirection?: string;\n    block?: {\n        number?: number;\n    };\n    where?: Record<string, GraphQLFilter>;\n}\n","import { formatFixed } from '@ethersproject/bignumber';\nimport { BigNumber as OldBigNumber, bnum } from '../../utils/bignumber';\nimport { WeightedPoolPairData } from './weightedPool';\nimport { MathSol, BZERO } from '../../utils/basicOperations';\n\nconst MAX_INVARIANT_RATIO = BigInt('3000000000000000000'); // 3e18\n\n// The following function are BigInt versions implemented by Sergio.\n// BigInt was requested from integrators as it is more efficient.\n// Swap outcomes formulas should match exactly those from smart contracts.\n// PairType = 'token->token'\n// SwapType = 'swapExactIn'\nexport function _calcOutGivenIn(\n    balanceIn: bigint,\n    weightIn: bigint,\n    balanceOut: bigint,\n    weightOut: bigint,\n    amountIn: bigint,\n    fee: bigint\n): bigint {\n    // is it necessary to check ranges of variables? same for the other functions\n    amountIn = subtractFee(amountIn, fee);\n    const exponent = MathSol.divDownFixed(weightIn, weightOut);\n    const denominator = MathSol.add(balanceIn, amountIn);\n    const base = MathSol.divUpFixed(balanceIn, denominator);\n    const power = MathSol.powUpFixed(base, exponent);\n    return MathSol.mulDownFixed(balanceOut, MathSol.complementFixed(power));\n}\n\n// PairType = 'token->token'\n// SwapType = 'swapExactOut'\nexport function _calcInGivenOut(\n    balanceIn: bigint,\n    weightIn: bigint,\n    balanceOut: bigint,\n    weightOut: bigint,\n    amountOut: bigint,\n    fee: bigint\n): bigint {\n    const base = MathSol.divUpFixed(balanceOut, balanceOut - amountOut);\n    const exponent = MathSol.divUpFixed(weightOut, weightIn);\n    const power = MathSol.powUpFixed(base, exponent);\n    const ratio = MathSol.sub(power, MathSol.ONE);\n    const amountIn = MathSol.mulUpFixed(balanceIn, ratio);\n    return addFee(amountIn, fee);\n}\n\nfunction subtractFee(amount: bigint, fee: bigint): bigint {\n    const feeAmount = MathSol.mulUpFixed(amount, fee);\n    return amount - feeAmount;\n}\n\nfunction addFee(amount: bigint, fee: bigint): bigint {\n    return MathSol.divUpFixed(amount, MathSol.complementFixed(fee));\n}\n\n// TO DO - Swap old versions of these in Pool for the BigInt version\n// PairType = 'token->token'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapExactTokenInForTokenOutBigInt(\n    balanceIn: bigint,\n    weightIn: bigint,\n    balanceOut: bigint,\n    weightOut: bigint,\n    amountIn: bigint,\n    fee: bigint\n): bigint {\n    const numerator = MathSol.mulUpFixed(balanceIn, weightOut);\n    let denominator = MathSol.mulUpFixed(balanceOut, weightIn);\n    const feeComplement = MathSol.complementFixed(fee);\n    denominator = MathSol.mulUpFixed(denominator, feeComplement);\n    const base = MathSol.divUpFixed(\n        balanceIn,\n        MathSol.add(MathSol.mulUpFixed(amountIn, feeComplement), balanceIn)\n    );\n    const exponent = MathSol.divUpFixed(weightIn + weightOut, weightOut);\n    denominator = MathSol.mulUpFixed(\n        denominator,\n        MathSol.powUpFixed(base, exponent)\n    );\n    return MathSol.divUpFixed(numerator, denominator);\n    //        -(\n    //            (Bi * wo) /\n    //            (Bo * (-1 + f) * (Bi / (Ai + Bi - Ai * f)) ** ((wi + wo) / wo) * wi)\n    //        )\n}\n\n// PairType = 'token->token'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapTokenInForExactTokenOutBigInt(\n    balanceIn: bigint,\n    weightIn: bigint,\n    balanceOut: bigint,\n    weightOut: bigint,\n    amountOut: bigint,\n    fee: bigint\n): bigint {\n    let numerator = MathSol.mulUpFixed(balanceIn, weightOut);\n    const feeComplement = MathSol.complementFixed(fee);\n    const base = MathSol.divUpFixed(\n        balanceOut,\n        MathSol.sub(balanceOut, amountOut)\n    );\n    const exponent = MathSol.divUpFixed(weightIn + weightOut, weightIn);\n    numerator = MathSol.mulUpFixed(\n        numerator,\n        MathSol.powUpFixed(base, exponent)\n    );\n    const denominator = MathSol.mulUpFixed(\n        MathSol.mulUpFixed(balanceOut, weightIn),\n        feeComplement\n    );\n    return MathSol.divUpFixed(numerator, denominator);\n    //        -(\n    //            (Bi * (Bo / (-Ao + Bo)) ** ((wi + wo) / wi) * wo) /\n    //            (Bo * (-1 + f) * wi)\n    //        )\n}\n\n/**\n * Calculates BPT for given tokens in. Note all numbers use upscaled amounts. e.g. 1USDC = 1e18.\n * @param balances Pool balances.\n * @param normalizedWeights Token weights.\n * @param amountsIn Amount of each token.\n * @param bptTotalSupply Total BPT of pool.\n * @param swapFeePercentage Swap fee percentage.\n * @returns BPT out.\n */\nexport function _calcBptOutGivenExactTokensIn(\n    balances: bigint[],\n    normalizedWeights: bigint[],\n    amountsIn: bigint[],\n    bptTotalSupply: bigint,\n    swapFeePercentage: bigint\n): bigint {\n    const balanceRatiosWithFee = new Array<bigint>(amountsIn.length);\n\n    let invariantRatioWithFees = BZERO;\n    for (let i = 0; i < balances.length; i++) {\n        balanceRatiosWithFee[i] = MathSol.divDownFixed(\n            MathSol.add(balances[i], amountsIn[i]),\n            balances[i]\n        );\n        invariantRatioWithFees = MathSol.add(\n            invariantRatioWithFees,\n            MathSol.mulDownFixed(balanceRatiosWithFee[i], normalizedWeights[i])\n        );\n    }\n\n    let invariantRatio = MathSol.ONE;\n    for (let i = 0; i < balances.length; i++) {\n        let amountInWithoutFee: bigint;\n\n        if (balanceRatiosWithFee[i] > invariantRatioWithFees) {\n            const nonTaxableAmount = MathSol.mulDownFixed(\n                balances[i],\n                MathSol.sub(invariantRatioWithFees, MathSol.ONE)\n            );\n            const taxableAmount = MathSol.sub(amountsIn[i], nonTaxableAmount);\n            const swapFee = MathSol.mulUpFixed(\n                taxableAmount,\n                swapFeePercentage\n            );\n            amountInWithoutFee = MathSol.add(\n                nonTaxableAmount,\n                MathSol.sub(taxableAmount, swapFee)\n            );\n        } else {\n            amountInWithoutFee = amountsIn[i];\n        }\n\n        const balanceRatio = MathSol.divDownFixed(\n            MathSol.add(balances[i], amountInWithoutFee),\n            balances[i]\n        );\n\n        invariantRatio = MathSol.mulDownFixed(\n            invariantRatio,\n            MathSol.powDown(balanceRatio, normalizedWeights[i])\n        );\n    }\n\n    if (invariantRatio > MathSol.ONE) {\n        return MathSol.mulDownFixed(\n            bptTotalSupply,\n            MathSol.sub(invariantRatio, MathSol.ONE)\n        );\n    } else {\n        return BZERO;\n    }\n}\n\nexport function _calcTokensOutGivenExactBptIn(\n    balances: bigint[],\n    bptAmountIn: bigint,\n    totalBPT: bigint\n): bigint[] {\n    /**********************************************************************************************\n    // exactBPTInForTokensOut                                                                    //\n    // (per token)                                                                               //\n    // aO = amountOut                  /        bptIn         \\                                  //\n    // b = balance           a0 = b * | ---------------------  |                                 //\n    // bptIn = bptAmountIn             \\       totalBPT       /                                  //\n    // bpt = totalBPT                                                                            //\n    **********************************************************************************************/\n\n    // Since we're computing an amount out, we round down overall. This means rounding down on both the\n    // multiplication and division.\n\n    const bptRatio = MathSol.divDownFixed(bptAmountIn, totalBPT);\n\n    const amountsOut = new Array<bigint>(balances.length);\n    for (let i = 0; i < balances.length; i++) {\n        amountsOut[i] = MathSol.mulDownFixed(balances[i], bptRatio);\n    }\n\n    return amountsOut;\n}\n\nexport function _calcTokenOutGivenExactBptIn(\n    balance: bigint,\n    normalizedWeight: bigint,\n    bptAmountIn: bigint,\n    bptTotalSupply: bigint,\n    swapFeePercentage: bigint\n): bigint {\n    /*****************************************************************************************\n        // exactBPTInForTokenOut                                                                //\n        // a = amountOut                                                                        //\n        // b = balance                     /      /    totalBPT - bptIn       \\    (1 / w)  \\   //\n        // bptIn = bptAmountIn    a = b * |  1 - | --------------------------  | ^           |  //\n        // bpt = totalBPT                  \\      \\       totalBPT            /             /   //\n        // w = weight                                                                           //\n        *****************************************************************************************/\n\n    // Token out, so we round down overall. The multiplication rounds down, but the power rounds up (so the base\n    // rounds up). Because (totalBPT - bptIn) / totalBPT <= 1, the exponent rounds down.\n    // Calculate the factor by which the invariant will decrease after burning BPTAmountIn\n    const invariantRatio = MathSol.divUpFixed(\n        MathSol.sub(bptTotalSupply, bptAmountIn),\n        bptTotalSupply\n    );\n    // Calculate by how much the token balance has to decrease to match invariantRatio\n    const balanceRatio = MathSol.powUpFixed(\n        invariantRatio,\n        MathSol.divDownFixed(MathSol.ONE, normalizedWeight)\n    );\n\n    // Because of rounding up, balanceRatio can be greater than one. Using complement prevents reverts.\n    const amountOutWithoutFee = MathSol.mulDownFixed(\n        balance,\n        MathSol.complementFixed(balanceRatio)\n    );\n\n    // We can now compute how much excess balance is being withdrawn as a result of the virtual swaps, which result\n    // in swap fees.\n\n    // Swap fees are typically charged on 'token in', but there is no 'token in' here, so we apply it\n    // to 'token out'. This results in slightly larger price impact. Fees are rounded up.\n    const taxableAmount = MathSol.mulUpFixed(\n        amountOutWithoutFee,\n        MathSol.complementFixed(normalizedWeight)\n    );\n    const nonTaxableAmount = MathSol.sub(amountOutWithoutFee, taxableAmount);\n    const swapFee = MathSol.mulUpFixed(taxableAmount, swapFeePercentage);\n    const amountOut = MathSol.add(\n        nonTaxableAmount,\n        MathSol.sub(taxableAmount, swapFee)\n    );\n    return amountOut;\n}\n\nexport function _calcBptInGivenExactTokensOut(\n    balances: bigint[],\n    normalizedWeights: bigint[],\n    amountsOut: bigint[],\n    bptTotalSupply: bigint,\n    swapFeePercentage: bigint\n): bigint {\n    // BPT in, so we round up overall.\n    const balanceRatiosWithoutFee = new Array<bigint>(amountsOut.length);\n\n    let invariantRatioWithoutFees = BZERO;\n    for (let i = 0; i < balances.length; i++) {\n        balanceRatiosWithoutFee[i] = MathSol.divUpFixed(\n            MathSol.sub(balances[i], amountsOut[i]),\n            balances[i]\n        );\n        invariantRatioWithoutFees = MathSol.add(\n            invariantRatioWithoutFees,\n            MathSol.mulUpFixed(balanceRatiosWithoutFee[i], normalizedWeights[i])\n        );\n    }\n\n    const invariantRatio = _computeExitExactTokensOutInvariantRatio(\n        balances,\n        normalizedWeights,\n        amountsOut,\n        balanceRatiosWithoutFee,\n        invariantRatioWithoutFees,\n        swapFeePercentage\n    );\n\n    return MathSol.mulUpFixed(\n        bptTotalSupply,\n        MathSol.complementFixed(invariantRatio)\n    );\n}\n\nexport const _calcTokenInGivenExactBptOut = (\n    balance: bigint,\n    normalizedWeight: bigint,\n    bptAmountOut: bigint,\n    bptTotalSupply: bigint,\n    swapFee: bigint\n): bigint => {\n    /*****************************************************************************************\n    // tokenInForExactBptOut                                                                //\n    // a = amountIn                                                                         //\n    // b = balance                      /  /     bpt + bptOut     \\    (1 / w)      \\       //\n    // bptOut = bptAmountOut   a = b * |  | ---------------------- | ^          - 1  |      //\n    // bpt = bptTotalSupply             \\  \\         bpt          /                 /       //\n    // w = normalizedWeight                                                                 //\n    *****************************************************************************************/\n\n    // Token in, so we round up overall\n\n    // Calculate the factor by which the invariant will increase after minting `bptAmountOut`\n    const invariantRatio = MathSol.divUpFixed(\n        MathSol.add(bptTotalSupply, bptAmountOut),\n        bptTotalSupply\n    );\n    if (invariantRatio > MAX_INVARIANT_RATIO) {\n        throw new Error('MAX_OUT_BPT_FOR_TOKEN_IN');\n    }\n\n    // Calculate by how much the token balance has to increase to cause `invariantRatio`\n    const balanceRatio = MathSol.powUpFixed(\n        invariantRatio,\n        MathSol.divUpFixed(MathSol.ONE, normalizedWeight)\n    );\n    const amountInWithoutFee = MathSol.mulUpFixed(\n        balance,\n        MathSol.sub(balanceRatio, MathSol.ONE)\n    );\n    // We can now compute how much extra balance is being deposited and used in virtual swaps, and charge swap fees accordingly\n    const taxablePercentage = MathSol.complementFixed(normalizedWeight);\n    const taxableAmount = MathSol.mulUpFixed(\n        amountInWithoutFee,\n        taxablePercentage\n    );\n    const nonTaxableAmount = MathSol.sub(amountInWithoutFee, taxableAmount);\n\n    return MathSol.add(\n        nonTaxableAmount,\n        MathSol.divUpFixed(taxableAmount, MathSol.complementFixed(swapFee))\n    );\n};\n\n/**\n * @dev Intermediate function to avoid stack-too-deep errors.\n */\nfunction _computeExitExactTokensOutInvariantRatio(\n    balances: bigint[],\n    normalizedWeights: bigint[],\n    amountsOut: bigint[],\n    balanceRatiosWithoutFee: bigint[],\n    invariantRatioWithoutFees: bigint,\n    swapFeePercentage: bigint\n): bigint {\n    let invariantRatio = MathSol.ONE;\n\n    for (let i = 0; i < balances.length; i++) {\n        // Swap fees are typically charged on 'token in', but there is no 'token in' here, so we apply it to\n        // 'token out'. This results in slightly larger price impact.\n\n        let amountOutWithFee;\n        if (invariantRatioWithoutFees > balanceRatiosWithoutFee[i]) {\n            const nonTaxableAmount = MathSol.mulDownFixed(\n                balances[i],\n                MathSol.complementFixed(invariantRatioWithoutFees)\n            );\n            const taxableAmount = MathSol.sub(amountsOut[i], nonTaxableAmount);\n            const taxableAmountPlusFees = MathSol.divUpFixed(\n                taxableAmount,\n                MathSol.complementFixed(swapFeePercentage)\n            );\n\n            amountOutWithFee = MathSol.add(\n                nonTaxableAmount,\n                taxableAmountPlusFees\n            );\n        } else {\n            amountOutWithFee = amountsOut[i];\n        }\n\n        const balanceRatio = MathSol.divDownFixed(\n            MathSol.sub(balances[i], amountOutWithFee),\n            balances[i]\n        );\n\n        invariantRatio = MathSol.mulDownFixed(\n            invariantRatio,\n            MathSol.powDown(balanceRatio, normalizedWeights[i])\n        );\n    }\n    return invariantRatio;\n}\n\n// Invariant is used to collect protocol swap fees by comparing its value between two times.\n// So we can round always to the same direction. It is also used to initiate the BPT amount\n// and, because there is a minimum BPT, we round down the invariant.\nexport function _calculateInvariant(\n    normalizedWeights: bigint[],\n    balances: bigint[]\n): bigint {\n    /**********************************************************************************************\n    // invariant               _____                                                             //\n    // wi = weight index i      | |      wi                                                      //\n    // bi = balance index i     | |  bi ^   = i                                                  //\n    // i = invariant                                                                             //\n    **********************************************************************************************/\n\n    let invariant = MathSol.ONE;\n    for (let i = 0; i < normalizedWeights.length; i++) {\n        invariant = MathSol.mulDownFixed(\n            invariant,\n            MathSol.powDown(balances[i], normalizedWeights[i])\n        );\n    }\n\n    if (invariant < 0) throw Error('Weighted Invariant < 0');\n\n    return invariant;\n}\n\nexport function _calcDueProtocolSwapFeeBptAmount(\n    totalSupply: bigint,\n    previousInvariant: bigint,\n    currentInvariant: bigint,\n    protocolSwapFeePercentage: bigint\n): bigint {\n    // We round down to prevent issues in the Pool's accounting, even if it means paying slightly less in protocol\n    // fees to the Vault.\n    const growth = MathSol.divDownFixed(currentInvariant, previousInvariant);\n\n    // Shortcut in case there was no growth when comparing the current against the previous invariant.\n    // This shouldn't happen outside of rounding errors, but have this safeguard nonetheless to prevent the Pool\n    // from entering a locked state in which joins and exits revert while computing accumulated swap fees.\n    if (growth <= MathSol.ONE) {\n        return BZERO;\n    }\n\n    // Assuming the Pool is balanced and token weights have not changed, a growth of the invariant translates into\n    // proportional growth of all token balances. The protocol is due a percentage of that growth: more precisely,\n    // it is due `k = protocol fee * (growth - 1) * balance / growth` for each token.\n    // We compute the amount of BPT to mint for the protocol that would allow it to proportionally exit the Pool and\n    // receive these balances. Note that the total BPT supply will increase when minting, so we need to account for\n    // this in order to compute the percentage of Pool ownership the protocol will have.\n\n    // The formula is:\n    //\n    // toMint = supply * k / (1 - k)\n\n    // We compute protocol fee * (growth - 1) / growth, as we'll use that value twice.\n    // There is no need to use SafeMath since we already checked growth is strictly greater than one.\n    const k = MathSol.divDownFixed(\n        MathSol.mulDownFixed(protocolSwapFeePercentage, growth - MathSol.ONE),\n        growth\n    );\n    const numerator = MathSol.mulDownFixed(totalSupply, k);\n    const denominator = MathSol.complementFixed(k);\n\n    return denominator == BZERO\n        ? BZERO\n        : MathSol.divDownFixed(numerator, denominator);\n}\n\n// spotPriceAfterSwap\n\n// PairType = 'token->token'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapExactTokenInForTokenOut(\n    amount: OldBigNumber,\n    poolPairData: WeightedPoolPairData\n): OldBigNumber {\n    const Bi = parseFloat(\n        formatFixed(poolPairData.balanceIn, poolPairData.decimalsIn)\n    );\n    const Bo = parseFloat(\n        formatFixed(poolPairData.balanceOut, poolPairData.decimalsOut)\n    );\n    const wi = parseFloat(formatFixed(poolPairData.weightIn, 18));\n    const wo = parseFloat(formatFixed(poolPairData.weightOut, 18));\n    const Ai = amount.toNumber();\n    const f = parseFloat(formatFixed(poolPairData.swapFee, 18));\n    return bnum(\n        -(\n            (Bi * wo) /\n            (Bo * (-1 + f) * (Bi / (Ai + Bi - Ai * f)) ** ((wi + wo) / wo) * wi)\n        )\n    );\n}\n\n// PairType = 'token->token'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapTokenInForExactTokenOut(\n    amount: OldBigNumber,\n    poolPairData: WeightedPoolPairData\n): OldBigNumber {\n    const Bi = parseFloat(\n        formatFixed(poolPairData.balanceIn, poolPairData.decimalsIn)\n    );\n    const Bo = parseFloat(\n        formatFixed(poolPairData.balanceOut, poolPairData.decimalsOut)\n    );\n    const wi = parseFloat(formatFixed(poolPairData.weightIn, 18));\n    const wo = parseFloat(formatFixed(poolPairData.weightOut, 18));\n    const Ao = amount.toNumber();\n    const f = parseFloat(formatFixed(poolPairData.swapFee, 18));\n    return bnum(\n        -(\n            (Bi * (Bo / (-Ao + Bo)) ** ((wi + wo) / wi) * wo) /\n            (Bo * (-1 + f) * wi)\n        )\n    );\n}\n\n// PairType = 'token->BPT'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapExactTokenInForBPTOut(\n    amount: OldBigNumber,\n    poolPairData: WeightedPoolPairData\n): OldBigNumber {\n    const Bi = parseFloat(\n        formatFixed(poolPairData.balanceIn, poolPairData.decimalsIn)\n    );\n    const Bbpt = parseFloat(\n        formatFixed(poolPairData.balanceOut, poolPairData.decimalsOut)\n    );\n    const wi = parseFloat(formatFixed(poolPairData.weightIn, 18));\n    const Ai = amount.toNumber();\n    const f = parseFloat(formatFixed(poolPairData.swapFee, 18));\n    return bnum(\n        (Bi * ((Ai + Bi + Ai * f * (-1 + wi)) / Bi) ** (1 - wi)) /\n            (Bbpt * (1 + f * (-1 + wi)) * wi)\n    );\n}\n\n// PairType = 'token->BPT'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapBptOutGivenExactTokenInBigInt(\n    balanceIn: bigint,\n    balanceOut: bigint,\n    weightIn: bigint,\n    amountIn: bigint,\n    swapFeeRatio: bigint\n): bigint {\n    const feeFactor =\n        MathSol.ONE -\n        MathSol.mulDownFixed(MathSol.complementFixed(weightIn), swapFeeRatio);\n    const denominatorFactor = MathSol.powDown(\n        MathSol.ONE + (amountIn * feeFactor) / balanceIn,\n        MathSol.complementFixed(weightIn)\n    );\n    return MathSol.divDownFixed(\n        MathSol.ONE,\n        (balanceOut * weightIn * feeFactor) / (balanceIn * denominatorFactor)\n    );\n}\n\n// PairType = 'BPT->token'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapExactBPTInForTokenOut(\n    amount: OldBigNumber,\n    poolPairData: WeightedPoolPairData\n): OldBigNumber {\n    const Bbpt = parseFloat(\n        formatFixed(poolPairData.balanceIn, poolPairData.decimalsIn)\n    );\n    const Bo = parseFloat(\n        formatFixed(poolPairData.balanceOut, poolPairData.decimalsOut)\n    );\n    const wo = parseFloat(formatFixed(poolPairData.weightOut, 18));\n    const Aibpt = amount.toNumber();\n    const f = parseFloat(formatFixed(poolPairData.swapFee));\n    return bnum(\n        ((1 - Aibpt / Bbpt) ** ((-1 + wo) / wo) *\n            Bbpt *\n            (1 + f * (-1 + wo)) *\n            wo) /\n            Bo\n    );\n}\n\n// PairType = 'BPT->token'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapBPTInForExactTokenOut(\n    amount: OldBigNumber,\n    poolPairData: WeightedPoolPairData\n): OldBigNumber {\n    const Bbpt = parseFloat(formatFixed(poolPairData.balanceIn, 18));\n    const Bo = parseFloat(\n        formatFixed(poolPairData.balanceOut, poolPairData.decimalsOut)\n    );\n    const wo = parseFloat(formatFixed(poolPairData.weightOut, 18));\n    const Ao = amount.toNumber();\n    const f = parseFloat(formatFixed(poolPairData.swapFee, 18));\n    return bnum(\n        (Bbpt *\n            (1 + f * (-1 + wo)) *\n            wo *\n            (1 + (Ao * (-1 + f - f * wo)) / Bo) ** (-1 + wo)) /\n            Bo\n    );\n}\n\n// PairType = 'token->BPT'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapTokenInForExactBPTOut(\n    amount: OldBigNumber,\n    poolPairData: WeightedPoolPairData\n): OldBigNumber {\n    const Bi = parseFloat(\n        formatFixed(poolPairData.balanceIn, poolPairData.decimalsIn)\n    );\n    const Bbpt = parseFloat(formatFixed(poolPairData.balanceOut, 18));\n    const wi = parseFloat(formatFixed(poolPairData.weightIn, 18));\n    const Aobpt = amount.toNumber();\n    const f = parseFloat(formatFixed(poolPairData.swapFee, 18));\n    return bnum(\n        (((Aobpt + Bbpt) / Bbpt) ** (1 / wi) * Bi) /\n            ((Aobpt + Bbpt) * (1 + f * (-1 + wi)) * wi)\n    );\n}\n\n/////////\n///  Derivatives of spotPriceAfterSwap\n/////////\n\n// PairType = 'token->token'\n// SwapType = 'swapExactIn'\nexport function _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n    amount: OldBigNumber,\n    poolPairData: WeightedPoolPairData\n): OldBigNumber {\n    const Bi = parseFloat(\n        formatFixed(poolPairData.balanceIn, poolPairData.decimalsIn)\n    );\n    const Bo = parseFloat(\n        formatFixed(poolPairData.balanceOut, poolPairData.decimalsOut)\n    );\n    const wi = parseFloat(formatFixed(poolPairData.weightIn, 18));\n    const wo = parseFloat(formatFixed(poolPairData.weightOut, 18));\n    const Ai = amount.toNumber();\n    const f = parseFloat(formatFixed(poolPairData.swapFee, 18));\n    return bnum((wi + wo) / (Bo * (Bi / (Ai + Bi - Ai * f)) ** (wi / wo) * wi));\n}\n\n// PairType = 'token->token'\n// SwapType = 'swapExactOut'\nexport function _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n    amount: OldBigNumber,\n    poolPairData: WeightedPoolPairData\n): OldBigNumber {\n    const Bi = parseFloat(\n        formatFixed(poolPairData.balanceIn, poolPairData.decimalsIn)\n    );\n    const Bo = parseFloat(\n        formatFixed(poolPairData.balanceOut, poolPairData.decimalsOut)\n    );\n    const wi = parseFloat(formatFixed(poolPairData.weightIn, 18));\n    const wo = parseFloat(formatFixed(poolPairData.weightOut, 18));\n    const Ao = amount.toNumber();\n    const f = parseFloat(formatFixed(poolPairData.swapFee, 18));\n    return bnum(\n        -(\n            (Bi * (Bo / (-Ao + Bo)) ** (wo / wi) * wo * (wi + wo)) /\n            ((Ao - Bo) ** 2 * (-1 + f) * wi ** 2)\n        )\n    );\n}\n\n// PairType = 'token->BPT'\n// SwapType = 'swapExactIn'\nexport function _derivativeSpotPriceAfterSwapExactTokenInForBPTOut(\n    amount: OldBigNumber,\n    poolPairData: WeightedPoolPairData\n): OldBigNumber {\n    const Bi = parseFloat(\n        formatFixed(poolPairData.balanceIn, poolPairData.decimalsIn)\n    );\n    const Bbpt = parseFloat(formatFixed(poolPairData.balanceOut, 18));\n    const wi = parseFloat(formatFixed(poolPairData.weightIn, 18));\n    const Ai = amount.toNumber();\n    const f = parseFloat(formatFixed(poolPairData.swapFee, 18));\n    return bnum(\n        -((-1 + wi) / (Bbpt * ((Ai + Bi + Ai * f * (-1 + wi)) / Bi) ** wi * wi))\n    );\n}\n\n// PairType = 'token->BPT'\n// SwapType = 'swapExactOut'\nexport function _derivativeSpotPriceAfterSwapTokenInForExactBPTOut(\n    amount: OldBigNumber,\n    poolPairData: WeightedPoolPairData\n): OldBigNumber {\n    const Bi = parseFloat(\n        formatFixed(poolPairData.balanceIn, poolPairData.decimalsIn)\n    );\n    const Bbpt = parseFloat(\n        formatFixed(poolPairData.balanceOut.toNumber(), 18)\n    );\n    const wi = parseFloat(formatFixed(poolPairData.weightIn, 18));\n    const Aobpt = amount.toNumber();\n    const f = parseFloat(formatFixed(poolPairData.swapFee, 18));\n    return bnum(\n        -(\n            (((Aobpt + Bbpt) / Bbpt) ** (1 / wi) * Bi * (-1 + wi)) /\n            ((Aobpt + Bbpt) ** 2 * (1 + f * (-1 + wi)) * wi ** 2)\n        )\n    );\n}\n\n// PairType = 'BPT->token'\n// SwapType = 'swapExactIn'\nexport function _derivativeSpotPriceAfterSwapExactBPTInForTokenOut(\n    amount: OldBigNumber,\n    poolPairData: WeightedPoolPairData\n): OldBigNumber {\n    const Bbpt = parseFloat(formatFixed(poolPairData.balanceIn, 18));\n    const Bo = parseFloat(\n        formatFixed(poolPairData.balanceOut, poolPairData.decimalsOut)\n    );\n    const wo = parseFloat(formatFixed(poolPairData.weightOut, 18));\n    const Aibpt = amount.toNumber();\n    const f = parseFloat(formatFixed(poolPairData.swapFee, 18));\n    return bnum(\n        -(\n            ((1 + f * (-1 + wo)) * (-1 + wo)) /\n            ((1 - Aibpt / Bbpt) ** (1 / wo) * Bo)\n        )\n    );\n}\n\n// PairType = 'BPT->token'\n// SwapType = 'swapExactOut'\nexport function _derivativeSpotPriceAfterSwapBPTInForExactTokenOut(\n    amount: OldBigNumber,\n    poolPairData: WeightedPoolPairData\n): OldBigNumber {\n    const Bbpt = parseFloat(formatFixed(poolPairData.balanceIn, 18));\n    const Bo = parseFloat(\n        formatFixed(poolPairData.balanceOut, poolPairData.decimalsOut)\n    );\n    const wo = parseFloat(formatFixed(poolPairData.weightOut));\n    const Ao = amount.toNumber();\n    const f = parseFloat(formatFixed(poolPairData.swapFee));\n    return bnum(\n        -(\n            (Bbpt *\n                (1 + f * (-1 + wo)) ** 2 *\n                (-1 + wo) *\n                wo *\n                (1 + (Ao * (-1 + f - f * wo)) / Bo) ** (-2 + wo)) /\n            Bo ** 2\n        )\n    );\n}\n","import { BigNumber as OldBigNumber, ZERO, bnum } from '../utils/bignumber';\n\n/*\nIt is possible to compute the normalized liquidity using another function already existing at every pool type, which is the derivative of spot price after swap.\nhttps://quark-ceres-740.notion.site/SOR-Normalized-liquidity-and-highest-liquidity-pool-d81bd3db48e5482ab2275a8eecac33b4\n*/\nexport function universalNormalizedLiquidity(\n    derivativeSpotPriceAtZero: OldBigNumber\n): OldBigNumber {\n    const ans = bnum(1).div(derivativeSpotPriceAtZero);\n    if (ans.isNaN() || ans.lt(ZERO) || !ans.isFinite()) return ZERO;\n    return ans;\n}\n","import { getAddress } from '@ethersproject/address';\nimport {\n    BigNumber as OldBigNumber,\n    bnum,\n    scale,\n    ZERO,\n} from '../../utils/bignumber';\nimport {\n    isSameAddress,\n    normaliseBalance,\n    normaliseAmount,\n    denormaliseAmount,\n} from '../../utils';\nimport {\n    PoolBase,\n    PoolTypes,\n    PoolPairBase,\n    SwapTypes,\n    SubgraphPoolBase,\n    SubgraphToken,\n    NoNullableField,\n} from '../../types';\nimport {\n    _calcOutGivenIn,\n    _calcInGivenOut,\n    _spotPriceAfterSwapExactTokenInForTokenOut,\n    _spotPriceAfterSwapTokenInForExactTokenOut,\n    _derivativeSpotPriceAfterSwapExactTokenInForTokenOut,\n    _derivativeSpotPriceAfterSwapTokenInForExactTokenOut,\n    _calcBptOutGivenExactTokensIn,\n    _calcTokenOutGivenExactBptIn,\n    _calcTokenInGivenExactBptOut,\n    _calcBptInGivenExactTokensOut,\n    _spotPriceAfterSwapExactTokenInForBPTOut,\n    _spotPriceAfterSwapExactBPTInForTokenOut,\n    _spotPriceAfterSwapTokenInForExactBPTOut,\n    _spotPriceAfterSwapBPTInForExactTokenOut,\n    _derivativeSpotPriceAfterSwapExactBPTInForTokenOut,\n    _derivativeSpotPriceAfterSwapExactTokenInForBPTOut,\n    _calcTokensOutGivenExactBptIn,\n} from './weightedMath';\nimport { BigNumber, formatFixed, parseFixed } from '@ethersproject/bignumber';\nimport { WeiPerEther as ONE, Zero } from '@ethersproject/constants';\nimport { MathSol } from '../../utils/basicOperations';\nimport { universalNormalizedLiquidity } from '../liquidity';\n\nenum PairTypes {\n    BptToToken,\n    TokenToBpt,\n    TokenToToken,\n}\n\nexport type WeightedPoolToken = Pick<\n    NoNullableField<SubgraphToken>,\n    'address' | 'balance' | 'decimals' | 'weight'\n>;\n\nexport type WeightedPoolPairData = PoolPairBase & {\n    pairType: PairTypes;\n    weightIn: BigNumber;\n    weightOut: BigNumber;\n};\n\nexport class WeightedPool implements PoolBase<WeightedPoolPairData> {\n    poolType: PoolTypes = PoolTypes.Weighted;\n    id: string;\n    address: string;\n    swapFee: BigNumber;\n    totalShares: BigNumber;\n    tokens: WeightedPoolToken[];\n    totalWeight: BigNumber;\n    tokensList: string[];\n    MAX_IN_RATIO = parseFixed('0.3', 18);\n    MAX_OUT_RATIO = parseFixed('0.3', 18);\n    isLBP = false;\n\n    static fromPool(pool: SubgraphPoolBase, isLBP?: boolean): WeightedPool {\n        if (!pool.totalWeight)\n            throw new Error('WeightedPool missing totalWeight');\n        const weightedPool = new WeightedPool(\n            pool.id,\n            pool.address,\n            pool.swapFee,\n            pool.totalWeight,\n            pool.totalShares,\n            pool.tokens as WeightedPoolToken[],\n            pool.tokensList\n        );\n        if (isLBP) weightedPool.isLBP = true;\n        return weightedPool;\n    }\n\n    constructor(\n        id: string,\n        address: string,\n        swapFee: string,\n        totalWeight: string,\n        totalShares: string,\n        tokens: WeightedPoolToken[],\n        tokensList: string[]\n    ) {\n        this.id = id;\n        this.address = address;\n        this.swapFee = parseFixed(swapFee, 18);\n        this.totalShares = parseFixed(totalShares, 18);\n        this.tokens = tokens;\n        this.tokensList = tokensList;\n        this.totalWeight = parseFixed(totalWeight, 18);\n    }\n\n    parsePoolPairData(tokenIn: string, tokenOut: string): WeightedPoolPairData {\n        const tokenIndexIn = this.tokens.findIndex(\n            (t) => getAddress(t.address) === getAddress(tokenIn)\n        );\n        if (tokenIndexIn < 0) throw 'Pool does not contain tokenIn';\n        const tI = this.tokens[tokenIndexIn];\n        const balanceIn = tI.balance;\n        const decimalsIn = tI.decimals;\n        const weightIn = parseFixed(tI.weight, 18)\n            .mul(ONE)\n            .div(this.totalWeight);\n\n        const tokenIndexOut = this.tokens.findIndex(\n            (t) => getAddress(t.address) === getAddress(tokenOut)\n        );\n        if (tokenIndexOut < 0) throw 'Pool does not contain tokenOut';\n        const tO = this.tokens[tokenIndexOut];\n        const balanceOut = tO.balance;\n        const decimalsOut = tO.decimals;\n        const weightOut = parseFixed(tO.weight, 18)\n            .mul(ONE)\n            .div(this.totalWeight);\n\n        let pairType: PairTypes;\n        if (tokenIn == this.address) {\n            pairType = PairTypes.BptToToken;\n        } else if (tokenOut == this.address) {\n            pairType = PairTypes.TokenToBpt;\n        } else {\n            pairType = PairTypes.TokenToToken;\n        }\n\n        const poolPairData: WeightedPoolPairData = {\n            id: this.id,\n            address: this.address,\n            poolType: this.poolType,\n            tokenIn: tokenIn,\n            tokenOut: tokenOut,\n            decimalsIn: Number(decimalsIn),\n            decimalsOut: Number(decimalsOut),\n            balanceIn: parseFixed(balanceIn, decimalsIn),\n            balanceOut: parseFixed(balanceOut, decimalsOut),\n            pairType: pairType,\n            weightIn: weightIn,\n            weightOut: weightOut,\n            swapFee: this.swapFee,\n        };\n\n        return poolPairData;\n    }\n\n    getNormalizedWeights(): bigint[] {\n        return this.tokens.map((t) =>\n            parseFixed(t.weight, 18).mul(ONE).div(this.totalWeight).toBigInt()\n        );\n    }\n\n    getNormalizedLiquidity(poolPairData: WeightedPoolPairData): OldBigNumber {\n        return universalNormalizedLiquidity(\n            this._derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n                poolPairData,\n                ZERO\n            )\n        );\n    }\n\n    getLimitAmountSwap(\n        poolPairData: PoolPairBase,\n        swapType: SwapTypes\n    ): OldBigNumber {\n        if (swapType === SwapTypes.SwapExactIn) {\n            return bnum(\n                formatFixed(\n                    poolPairData.balanceIn.mul(this.MAX_IN_RATIO).div(ONE),\n                    poolPairData.decimalsIn\n                )\n            );\n        } else {\n            return bnum(\n                formatFixed(\n                    poolPairData.balanceOut.mul(this.MAX_OUT_RATIO).div(ONE),\n                    poolPairData.decimalsOut\n                )\n            );\n        }\n    }\n\n    // Updates the balance of a given token for the pool\n    updateTokenBalanceForPool(token: string, newBalance: BigNumber): void {\n        // token is BPT\n        if (isSameAddress(this.address, token)) {\n            this.updateTotalShares(newBalance);\n        }\n        // token is underlying in the pool\n        const T = this.tokens.find((t) => isSameAddress(t.address, token));\n        if (!T) throw Error('Pool does not contain this token');\n        T.balance = formatFixed(newBalance, T.decimals);\n    }\n\n    updateTotalShares(newTotalShares: BigNumber): void {\n        this.totalShares = newTotalShares;\n    }\n\n    // Using BigNumber.js decimalPlaces (dp), allows us to consider token decimal accuracy correctly,\n    // i.e. when using token with 2decimals 0.002 should be returned as 0\n    // Uses ROUND_DOWN mode (1)\n    // calcOutGivenIn\n    _exactTokenInForTokenOut(\n        poolPairData: WeightedPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        if (amount.isNaN()) return amount;\n        const amountIn = parseFixed(amount.dp(18, 1).toString(), 18).toBigInt();\n        const decimalsIn = poolPairData.decimalsIn;\n        const decimalsOut = poolPairData.decimalsOut;\n        const balanceIn = parseFixed(\n            poolPairData.balanceIn.toString(),\n            18 - decimalsIn\n        ).toBigInt();\n        const balanceOut = parseFixed(\n            poolPairData.balanceOut.toString(),\n            18 - decimalsOut\n        ).toBigInt();\n        const normalizedWeightIn = poolPairData.weightIn.toBigInt();\n        const normalizedWeightOut = poolPairData.weightOut.toBigInt();\n        const swapFee = poolPairData.swapFee.toBigInt();\n        let returnAmt: bigint;\n        try {\n            if (poolPairData.pairType === PairTypes.TokenToBpt) {\n                returnAmt = _calcBptOutGivenExactTokensIn(\n                    [balanceIn, BigInt(1)],\n                    [normalizedWeightIn, MathSol.ONE - normalizedWeightIn],\n                    [amountIn, BigInt(0)],\n                    balanceOut,\n                    swapFee\n                );\n            } else if (poolPairData.pairType === PairTypes.BptToToken) {\n                returnAmt = _calcTokenOutGivenExactBptIn(\n                    balanceOut,\n                    normalizedWeightOut,\n                    amountIn,\n                    balanceIn,\n                    swapFee\n                );\n            } else {\n                returnAmt = _calcOutGivenIn(\n                    balanceIn,\n                    normalizedWeightIn,\n                    balanceOut,\n                    normalizedWeightOut,\n                    amountIn,\n                    swapFee\n                );\n            }\n            // return human scaled\n            return scale(bnum(returnAmt.toString()), -18);\n        } catch (err) {\n            return ZERO;\n        }\n    }\n\n    // Using BigNumber.js decimalPlaces (dp), allows us to consider token decimal accuracy correctly,\n    // i.e. when using token with 2decimals 0.002 should be returned as 0\n    // Uses ROUND_UP mode (0)\n    // calcInGivenOut\n    _tokenInForExactTokenOut(\n        poolPairData: WeightedPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        if (amount.isNaN()) return amount;\n        const amountOut = parseFixed(\n            amount.dp(18, 1).toString(),\n            18\n        ).toBigInt();\n        const decimalsIn = poolPairData.decimalsIn;\n        const decimalsOut = poolPairData.decimalsOut;\n        const balanceIn = parseFixed(\n            poolPairData.balanceIn.toString(),\n            18 - decimalsIn\n        ).toBigInt();\n        const balanceOut = parseFixed(\n            poolPairData.balanceOut.toString(),\n            18 - decimalsOut\n        ).toBigInt();\n        const normalizedWeightIn = poolPairData.weightIn.toBigInt();\n        const normalizedWeightOut = poolPairData.weightOut.toBigInt();\n        const swapFee = poolPairData.swapFee.toBigInt();\n        let returnAmt: bigint;\n        try {\n            if (poolPairData.pairType === PairTypes.TokenToBpt) {\n                returnAmt = _calcTokenInGivenExactBptOut(\n                    balanceIn,\n                    normalizedWeightIn,\n                    amountOut,\n                    balanceOut,\n                    swapFee\n                );\n            } else if (poolPairData.pairType === PairTypes.BptToToken) {\n                returnAmt = _calcBptInGivenExactTokensOut(\n                    [balanceOut, BigInt(1)],\n                    [normalizedWeightOut, MathSol.ONE - normalizedWeightOut],\n                    [amountOut, BigInt(0)],\n                    balanceIn,\n                    swapFee\n                );\n            } else {\n                returnAmt = _calcInGivenOut(\n                    balanceIn,\n                    normalizedWeightIn,\n                    balanceOut,\n                    normalizedWeightOut,\n                    amountOut,\n                    swapFee\n                );\n            }\n            // return human scaled\n            return scale(bnum(returnAmt.toString()), -18);\n        } catch (err) {\n            return ZERO;\n        }\n    }\n\n    /**\n     * _calcTokensOutGivenExactBptIn\n     * @param bptAmountIn EVM scale.\n     * @returns EVM scale.\n     */\n    _calcTokensOutGivenExactBptIn(bptAmountIn: BigNumber): BigNumber[] {\n        // balances and amounts must be normalized to 1e18 fixed point - e.g. 1USDC => 1e18 not 1e6\n        const balancesNormalised = this.tokens\n            .filter((t) => !isSameAddress(t.address, this.address))\n            .map((t) => normaliseBalance(t));\n        try {\n            const amountsOutNormalised = _calcTokensOutGivenExactBptIn(\n                balancesNormalised,\n                bptAmountIn.toBigInt(),\n                this.totalShares.toBigInt()\n            );\n            // We want to return denormalised amounts. e.g. 1USDC => 1e6 not 1e18\n            const amountsOut = amountsOutNormalised.map((a, i) =>\n                denormaliseAmount(a, this.tokens[i])\n            );\n            return amountsOut.map((a) => BigNumber.from(a));\n        } catch (err) {\n            return new Array(balancesNormalised.length).fill(ZERO);\n        }\n    }\n\n    /**\n     * _calcBptOutGivenExactTokensIn\n     * @param amountsIn EVM Scale\n     * @returns EVM Scale\n     */\n    _calcBptOutGivenExactTokensIn(amountsIn: BigNumber[]): BigNumber {\n        try {\n            // balances and amounts must be normalized to 1e18 fixed point - e.g. 1USDC => 1e18 not 1e6\n            const amountsInNormalised = new Array(amountsIn.length).fill(\n                BigInt(0)\n            );\n            const balancesNormalised = new Array(amountsIn.length).fill(\n                BigInt(0)\n            );\n            this.tokens\n                .filter((t) => !isSameAddress(t.address, this.address))\n                .forEach((token, i) => {\n                    amountsInNormalised[i] = normaliseAmount(\n                        BigInt(amountsIn[i].toString()),\n                        token\n                    );\n                    balancesNormalised[i] = normaliseBalance(token);\n                });\n            const bptAmountOut = _calcBptOutGivenExactTokensIn(\n                balancesNormalised,\n                this.getNormalizedWeights(),\n                amountsInNormalised,\n                this.totalShares.toBigInt(),\n                this.swapFee.toBigInt()\n            );\n            return BigNumber.from(bptAmountOut.toString());\n        } catch (err) {\n            return Zero;\n        }\n    }\n\n    _spotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: WeightedPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        if (poolPairData.pairType === PairTypes.TokenToBpt) {\n            return _spotPriceAfterSwapExactTokenInForBPTOut(\n                amount,\n                poolPairData\n            );\n        } else if (poolPairData.pairType === PairTypes.BptToToken) {\n            return _spotPriceAfterSwapExactBPTInForTokenOut(\n                amount,\n                poolPairData\n            );\n        } else {\n            return _spotPriceAfterSwapExactTokenInForTokenOut(\n                amount,\n                poolPairData\n            );\n        }\n    }\n\n    _spotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: WeightedPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        if (poolPairData.pairType === PairTypes.TokenToBpt) {\n            return _spotPriceAfterSwapTokenInForExactBPTOut(\n                amount,\n                poolPairData\n            );\n        } else if (poolPairData.pairType === PairTypes.BptToToken) {\n            return _spotPriceAfterSwapBPTInForExactTokenOut(\n                amount,\n                poolPairData\n            );\n        } else {\n            return _spotPriceAfterSwapTokenInForExactTokenOut(\n                amount,\n                poolPairData\n            );\n        }\n    }\n\n    _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: WeightedPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        if (poolPairData.pairType === PairTypes.TokenToBpt) {\n            return _derivativeSpotPriceAfterSwapExactTokenInForBPTOut(\n                amount,\n                poolPairData\n            );\n        } else if (poolPairData.pairType === PairTypes.BptToToken) {\n            return _derivativeSpotPriceAfterSwapExactBPTInForTokenOut(\n                amount,\n                poolPairData\n            );\n        } else {\n            return _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n                amount,\n                poolPairData\n            );\n        }\n    }\n\n    _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: WeightedPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        return _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n            amount,\n            poolPairData\n        );\n    }\n}\n","import { BigNumber, formatFixed } from '@ethersproject/bignumber';\nimport { WeiPerEther as EONE } from '@ethersproject/constants';\nimport {\n    BigNumber as OldBigNumber,\n    bnum,\n    ZERO,\n    ONE,\n} from '../../utils/bignumber';\nimport { StablePoolPairData } from './stablePool';\n// All functions are adapted from the solidity ones to be found on:\n// https://github.com/balancer-labs/balancer-core-v2/blob/master/contracts/pools/stable/StableMath.sol\n\n// TODO: implement all up and down rounding variations\n\n/**********************************************************************************************\n    // invariant                                                                                 //\n    // D = invariant to compute                                                                  //\n    // A = amplifier                n * D^2 + A * n^n * S * (n^n * P / D^(n−1))                  //\n    // S = sum of balances         ____________________________________________                  //\n    // P = product of balances    (n+1) * D + ( A * n^n − 1)* (n^n * P / D^(n−1))                //\n    // n = number of tokens                                                                      //\n    **********************************************************************************************/\nexport function _invariant(\n    A: BigNumber,\n    balances: OldBigNumber[] // balances\n): OldBigNumber {\n    let sum = ZERO;\n    const totalCoins = balances.length;\n    for (let i = 0; i < totalCoins; i++) {\n        sum = sum.plus(balances[i]);\n    }\n    if (sum.isZero()) {\n        return ZERO;\n    }\n    let prevInv = ZERO;\n    let inv = sum;\n\n    // A is passed as an ethers bignumber while maths uses bignumber.js\n    const AAdjusted = bnum(formatFixed(A, 3));\n    const ATimesNpowN = AAdjusted.times(totalCoins ** totalCoins); // A*n^n\n\n    for (let i = 0; i < 255; i++) {\n        let P_D = bnum(totalCoins).times(balances[0]);\n        for (let j = 1; j < totalCoins; j++) {\n            //P_D is rounded up\n            P_D = P_D.times(balances[j]).times(totalCoins).div(inv);\n        }\n        prevInv = inv;\n        //inv is rounded up\n        inv = bnum(totalCoins)\n            .times(inv)\n            .times(inv)\n            .plus(ATimesNpowN.times(sum).times(P_D))\n            .div(\n                bnum(totalCoins + 1)\n                    .times(inv)\n                    .plus(ATimesNpowN.minus(1).times(P_D))\n            );\n        // Equality with the precision of 1\n        if (inv.gt(prevInv)) {\n            if (inv.minus(prevInv).lt(bnum(10 ** -18))) {\n                break;\n            }\n        } else if (prevInv.minus(inv).lt(bnum(10 ** -18))) {\n            break;\n        }\n    }\n    //Result is rounded up\n    return inv;\n}\n\n// Adapted from StableMath.sol, _outGivenIn()\n// * Added swap fee at very first line\n/**********************************************************************************************\n    // outGivenIn token x for y - polynomial equation to solve                                   //\n    // ay = amount out to calculate                                                              //\n    // by = balance token out                                                                    //\n    // y = by - ay                                                                               //\n    // D = invariant                               D                     D^(n+1)                 //\n    // A = amplifier               y^2 + ( S - ----------  - 1) * y -  ------------- = 0         //\n    // n = number of tokens                    (A * n^n)               A * n^2n * P              //\n    // S = sum of final balances but y                                                           //\n    // P = product of final balances but y                                                       //\n    **********************************************************************************************/\nexport function _exactTokenInForTokenOut(\n    amount: OldBigNumber,\n    poolPairData: StablePoolPairData\n): OldBigNumber {\n    // The formula below returns some dust (due to rounding errors) but when\n    // we input zero the output should be zero\n    if (amount.isZero()) return amount;\n    const { amp, allBalances, tokenIndexIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const n = balances.length;\n    const A = amp.div(n ** (n - 1));\n    let tokenAmountIn = amount;\n    tokenAmountIn = tokenAmountIn\n        .times(EONE.sub(swapFee).toString())\n        .div(EONE.toString());\n\n    //Invariant is rounded up\n    const inv = _invariant(A, balances);\n    let p = inv;\n    let sum = ZERO;\n    const totalCoins = bnum(balances.length);\n    let n_pow_n = ONE;\n    let x = ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        n_pow_n = n_pow_n.times(totalCoins);\n\n        if (i == tokenIndexIn) {\n            x = balances[i].plus(tokenAmountIn);\n        } else if (i != tokenIndexOut) {\n            x = balances[i];\n        } else {\n            continue;\n        }\n        sum = sum.plus(x);\n        //Round up p\n        p = p.times(inv).div(x);\n    }\n\n    //Calculate out balance\n    const y = _solveAnalyticalBalance(sum, inv, A, n_pow_n, p);\n\n    //Result is rounded down\n    // return balances[tokenIndexOut] > y ? balances[tokenIndexOut].minus(y) : 0;\n    return balances[tokenIndexOut].minus(y);\n}\n\n// Adapted from StableMath.sol, _inGivenOut()\n// * Added swap fee at very last line\n/**********************************************************************************************\n    // inGivenOut token x for y - polynomial equation to solve                                   //\n    // ax = amount in to calculate                                                               //\n    // bx = balance token in                                                                     //\n    // x = bx + ax                                                                               //\n    // D = invariant                               D                     D^(n+1)                 //\n    // A = amplifier               x^2 + ( S - ----------  - 1) * x -  ------------- = 0         //\n    // n = number of tokens                    (A * n^n)               A * n^2n * P              //\n    // S = sum of final balances but x                                                           //\n    // P = product of final balances but x                                                       //\n    **********************************************************************************************/\nexport function _tokenInForExactTokenOut(\n    amount: OldBigNumber,\n    poolPairData: StablePoolPairData\n): OldBigNumber {\n    // The formula below returns some dust (due to rounding errors) but when\n    // we input zero the output should be zero\n    if (amount.isZero()) return amount;\n    const { amp, allBalances, tokenIndexIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const n = balances.length;\n    const A = amp.div(n ** (n - 1));\n    const tokenAmountOut = amount;\n    //Invariant is rounded up\n    const inv = _invariant(A, balances);\n    let p = inv;\n    let sum = ZERO;\n    const totalCoins = bnum(balances.length);\n    let n_pow_n = ONE;\n    let x = ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        n_pow_n = n_pow_n.times(totalCoins);\n\n        if (i == tokenIndexOut) {\n            x = balances[i].minus(tokenAmountOut);\n        } else if (i != tokenIndexIn) {\n            x = balances[i];\n        } else {\n            continue;\n        }\n        sum = sum.plus(x);\n        //Round up p\n        p = p.times(inv).div(x);\n    }\n\n    //Calculate in balance\n    const y = _solveAnalyticalBalance(sum, inv, A, n_pow_n, p);\n\n    //Result is rounded up\n    return y\n        .minus(balances[tokenIndexIn])\n        .multipliedBy(EONE.toString())\n        .div(EONE.sub(swapFee).toString());\n}\n\n//This function calcuates the analytical solution to find the balance required\nexport function _solveAnalyticalBalance(\n    sum: OldBigNumber,\n    inv: OldBigNumber,\n    A: BigNumber,\n    n_pow_n: OldBigNumber,\n    p: OldBigNumber\n): OldBigNumber {\n    // A is passed as an ethers bignumber while maths uses bignumber.js\n    const oldBN_A = bnum(formatFixed(A, 3));\n    //Round up p\n    p = p.times(inv).div(oldBN_A.times(n_pow_n).times(n_pow_n));\n    //Round down b\n    const b = sum.plus(inv.div(oldBN_A.times(n_pow_n)));\n    const c = inv\n        .minus(b)\n        .plus(inv.minus(b).times(inv.minus(b)).plus(p.times(4)).sqrt());\n    //Round up y\n    return c.div(2);\n}\n\n//////////////////////\n////  These functions have been added exclusively for the SORv2\n//////////////////////\n\nfunction _poolDerivatives(\n    A: BigNumber,\n    balances: OldBigNumber[],\n    tokenIndexIn: number,\n    tokenIndexOut: number,\n    is_first_derivative: boolean,\n    wrt_out: boolean\n): OldBigNumber {\n    const totalCoins = balances.length;\n    const D = _invariant(A, balances);\n    let S = ZERO;\n    for (let i = 0; i < totalCoins; i++) {\n        if (i != tokenIndexIn && i != tokenIndexOut) {\n            S = S.plus(balances[i]);\n        }\n    }\n    const x = balances[tokenIndexIn];\n    const y = balances[tokenIndexOut];\n    // A is passed as an ethers bignumber while maths uses bignumber.js\n    const AAdjusted = bnum(formatFixed(A, 3));\n    const a = AAdjusted.times(totalCoins ** totalCoins); // = ATimesNpowN\n    const b = S.minus(D).times(a).plus(D);\n    const twoaxy = bnum(2).times(a).times(x).times(y);\n    const partial_x = twoaxy.plus(a.times(y).times(y)).plus(b.times(y));\n    const partial_y = twoaxy.plus(a.times(x).times(x)).plus(b.times(x));\n    let ans;\n    if (is_first_derivative) {\n        ans = partial_x.div(partial_y);\n    } else {\n        const partial_xx = bnum(2).times(a).times(y);\n        const partial_yy = bnum(2).times(a).times(x);\n        const partial_xy = partial_xx.plus(partial_yy).plus(b);\n        const numerator = bnum(2)\n            .times(partial_x)\n            .times(partial_y)\n            .times(partial_xy)\n            .minus(partial_xx.times(partial_y.pow(2)))\n            .minus(partial_yy.times(partial_x.pow(2)));\n        const denominator = partial_x.pow(2).times(partial_y);\n        ans = numerator.div(denominator);\n        if (wrt_out) {\n            ans = ans.times(partial_y).div(partial_x);\n        }\n    }\n    return ans;\n}\n\n/////////\n/// SpotPriceAfterSwap\n/////////\n\n// PairType = 'token->token'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapExactTokenInForTokenOut(\n    amount: OldBigNumber,\n    poolPairData: StablePoolPairData\n): OldBigNumber {\n    const { amp, allBalances, tokenIndexIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const n = balances.length;\n    const A = amp.div(n ** (n - 1));\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(\n        amount.times(EONE.sub(swapFee).toString()).div(EONE.toString())\n    );\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(\n        _exactTokenInForTokenOut(amount, poolPairData)\n    );\n    let ans = _poolDerivatives(\n        A,\n        balances,\n        tokenIndexIn,\n        tokenIndexOut,\n        true,\n        false\n    );\n    ans = ONE.div(ans.times(EONE.sub(swapFee).toString()).div(EONE.toString()));\n    return ans;\n}\n\n// PairType = 'token->token'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapTokenInForExactTokenOut(\n    amount: OldBigNumber,\n    poolPairData: StablePoolPairData\n): OldBigNumber {\n    const { amp, allBalances, tokenIndexIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const n = balances.length;\n    const A = amp.div(n ** (n - 1));\n    const _in = _tokenInForExactTokenOut(amount, poolPairData)\n        .times(EONE.sub(swapFee).toString())\n        .div(EONE.toString());\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(_in);\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(amount);\n    let ans = _poolDerivatives(\n        A,\n        balances,\n        tokenIndexIn,\n        tokenIndexOut,\n        true,\n        true\n    );\n    ans = ONE.div(ans.times(EONE.sub(swapFee).toString()).div(EONE.toString()));\n    return ans;\n}\n\n/////////\n///  Derivatives of spotPriceAfterSwap\n/////////\n\n// PairType = 'token->token'\n// SwapType = 'swapExactIn'\nexport function _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n    amount: OldBigNumber,\n    poolPairData: StablePoolPairData\n): OldBigNumber {\n    const { amp, allBalances, tokenIndexIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const n = balances.length;\n    const A = amp.div(n ** (n - 1));\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(\n        amount.times(EONE.sub(swapFee).toString()).div(EONE.toString())\n    );\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(\n        _exactTokenInForTokenOut(amount, poolPairData)\n    );\n    return _poolDerivatives(\n        A,\n        balances,\n        tokenIndexIn,\n        tokenIndexOut,\n        false,\n        false\n    );\n}\n\n// PairType = 'token->token'\n// SwapType = 'swapExactOut'\nexport function _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n    amount: OldBigNumber,\n    poolPairData: StablePoolPairData\n): OldBigNumber {\n    const { amp, allBalances, tokenIndexIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const n = balances.length;\n    const A = amp.div(n ** (n - 1));\n    const _in = _tokenInForExactTokenOut(amount, poolPairData)\n        .times(EONE.sub(swapFee).toString())\n        .div(EONE.toString());\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(_in);\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(amount);\n    const feeFactor = EONE.div(swapFee).toString();\n    return _poolDerivatives(\n        A,\n        balances,\n        tokenIndexIn,\n        tokenIndexOut,\n        false,\n        true\n    ).div(feeFactor);\n}\n\n// The following are used in front-end helper functions\n\nfunction _feeFactor(\n    balances: OldBigNumber[],\n    tokenIndex: number,\n    swapFee: BigNumber\n): OldBigNumber {\n    let sumBalances = ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = sumBalances.plus(balances[i]);\n    }\n    const currentWeight = balances[tokenIndex].div(sumBalances);\n    const tokenBalancePercentageExcess = ONE.minus(currentWeight);\n    return ONE.minus(\n        tokenBalancePercentageExcess\n            .times(swapFee.toString())\n            .div(EONE.toString())\n    );\n}\n\n// PairType = 'token->BPT'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapTokenInForExactBPTOut(\n    amount: OldBigNumber,\n    poolPairData: StablePoolPairData\n): OldBigNumber {\n    const { amp, allBalances, balanceOut, tokenIndexIn, decimalsOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const n = balances.length;\n    const A = amp.div(n ** (n - 1));\n    const _in = _tokenInForExactBPTOut(amount, poolPairData);\n    const feeFactor = _feeFactor(balances, tokenIndexIn, swapFee);\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(_in.times(feeFactor));\n    let ans = _poolDerivativesBPT(\n        A,\n        balances,\n        bnum(formatFixed(balanceOut, decimalsOut)).plus(amount),\n        tokenIndexIn,\n        true,\n        true,\n        true\n    );\n    ans = ONE.div(ans.times(feeFactor));\n    return ans;\n}\n\n/*\nFlow of calculations:\namountBPTOut -> newInvariant -> (amountInProportional, amountInAfterFee) ->\namountInPercentageExcess -> amountIn\n*/\nfunction _tokenInForExactBPTOut(\n    amount: OldBigNumber,\n    poolPairData: StablePoolPairData\n): OldBigNumber {\n    // The formula below returns some dust (due to rounding errors) but when\n    // we input zero the output should be zero\n    if (amount.isZero()) return amount;\n    const { amp, allBalances, tokenIndexIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const n = balances.length;\n    const A = amp.div(n ** (n - 1));\n    const bptAmountOut = amount;\n\n    /**********************************************************************************************\n    // TODO description                            //\n    **********************************************************************************************/\n\n    // Get current invariant\n    const currentInvariant = _invariant(A, balances);\n    // Calculate new invariant\n    const newInvariant = allBalances[tokenIndexOut]\n        .plus(bptAmountOut)\n        .div(allBalances[tokenIndexOut])\n        .times(currentInvariant);\n\n    // First calculate the sum of all token balances which will be used to calculate\n    // the current weight of token\n    let sumBalances = ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = sumBalances.plus(balances[i]);\n    }\n\n    // get amountInAfterFee\n    const newBalanceTokenIndex =\n        _getTokenBalanceGivenInvariantAndAllOtherBalances(\n            A,\n            balances,\n            newInvariant,\n            tokenIndexIn\n        );\n    const amountInAfterFee = newBalanceTokenIndex.minus(balances[tokenIndexIn]);\n\n    // Get tokenBalancePercentageExcess\n    const currentWeight = balances[tokenIndexIn].div(sumBalances);\n    const tokenBalancePercentageExcess = ONE.minus(currentWeight);\n\n    // return amountIn\n    return amountInAfterFee.div(\n        ONE.minus(\n            tokenBalancePercentageExcess\n                .times(swapFee.toString())\n                .div(EONE.toString())\n        )\n    );\n}\n\n//This function calculates the balance of a given token (tokenIndex)\n// given all the other balances and the invariant\nfunction _getTokenBalanceGivenInvariantAndAllOtherBalances(\n    A: BigNumber,\n    balances: OldBigNumber[],\n    inv: OldBigNumber,\n    tokenIndex: number\n): OldBigNumber {\n    let p = inv;\n    let sum = ZERO;\n    const totalCoins = balances.length;\n    let nPowN = ONE;\n    let x = ZERO;\n    for (let i = 0; i < totalCoins; i++) {\n        nPowN = nPowN.times(totalCoins);\n        if (i != tokenIndex) {\n            x = balances[i];\n        } else {\n            continue;\n        }\n        sum = sum.plus(x);\n        //Round up p\n        p = p.times(inv).div(x);\n    }\n\n    // Calculate token balance\n    return _solveAnalyticalBalance(sum, inv, A, nPowN, p);\n}\n\nfunction _poolDerivativesBPT(\n    A: BigNumber,\n    balances: OldBigNumber[],\n    bptSupply: OldBigNumber,\n    tokenIndexIn: number,\n    is_first_derivative: boolean,\n    is_BPT_out: boolean,\n    wrt_out: boolean\n): OldBigNumber {\n    const totalCoins = balances.length;\n    const D = _invariant(A, balances);\n    let S = ZERO;\n    let D_P = D.div(totalCoins);\n    for (let i = 0; i < totalCoins; i++) {\n        if (i != tokenIndexIn) {\n            S = S.plus(balances[i]);\n            D_P = D_P.times(D).div(balances[i].times(totalCoins));\n        }\n    }\n    const x = balances[tokenIndexIn];\n    // A is passed as an ethers bignumber while maths uses bignumber.js\n    const AAdjusted = bnum(formatFixed(A, 3));\n    const alpha = AAdjusted.times(totalCoins ** totalCoins); // = ATimesNpowN\n    const beta = alpha.times(S);\n    const gamma = ONE.minus(alpha);\n    const partial_x = bnum(2)\n        .times(alpha)\n        .times(x)\n        .plus(beta)\n        .plus(gamma.times(D));\n    const minus_partial_D = D_P.times(totalCoins + 1).minus(gamma.times(x));\n    const partial_D = ZERO.minus(minus_partial_D);\n    let ans;\n    if (is_first_derivative) {\n        ans = partial_x.div(minus_partial_D).times(bptSupply).div(D);\n    } else {\n        const partial_xx = bnum(2).times(alpha);\n        const partial_xD = gamma;\n        const n_times_nplusone = totalCoins * (totalCoins + 1);\n        const partial_DD = ZERO.minus(D_P.times(n_times_nplusone).div(D));\n        if (is_BPT_out) {\n            const term1 = partial_xx.times(partial_D).div(partial_x.pow(2));\n            const term2 = bnum(2).times(partial_xD).div(partial_x);\n            const term3 = partial_DD.div(partial_D);\n            ans = term1.minus(term2).plus(term3).times(D).div(bptSupply);\n            if (wrt_out) {\n                const D_prime = ZERO.minus(partial_x.div(partial_D));\n                ans = ans.div(D_prime).times(D).div(bptSupply);\n            }\n        } else {\n            ans = bnum(2)\n                .times(partial_xD)\n                .div(partial_D)\n                .minus(partial_DD.times(partial_x).div(partial_D.pow(2)))\n                .minus(partial_xx.div(partial_x));\n            if (wrt_out) {\n                ans = ans\n                    .times(partial_x)\n                    .div(minus_partial_D)\n                    .times(bptSupply)\n                    .div(D);\n            }\n        }\n    }\n    return ans;\n}\n","/*\nSwap outcome and \"spot price after swap\" formulas for weighted, stable and linear pools.\nAmounts are represented using bigint type. Swap outcomes formulas should\nmatch exactly those from smart contracts.\n\nTest cases are found in poolsMathWeighted.spec.ts, poolsMathStable.spec.ts poolsMathLinear.spec.ts.\n\nIt is necessary to review whether to use MathSol operations or native +,-,\\*,/ case by case. MathSol operations are able to reproduce overflows while native operations produce a much more readable code. For instance, for \"spot price after swap\" native operations\nare preferred since in this case there are not smart contract analogs, amount limits are assumed to have been checked elsewhere, and some formulas get complicated, specially for stable pools.\n*/\nimport { MathSol, BZERO } from '../../utils/basicOperations';\n\nconst AMP_PRECISION = BigInt(1e3);\n\nfunction _calculateInvariant(amp: bigint, balances: bigint[]): bigint {\n    /**********************************************************************************************\n      // invariant                                                                                 //\n      // D = invariant                                                  D^(n+1)                    //\n      // A = amplification coefficient      A  n^n S + D = A D n^n + -----------                   //\n      // S = sum of balances                                             n^n P                     //\n      // P = product of balances                                                                   //\n      // n = number of tokens                                                                      //\n      *********x************************************************************************************/\n\n    // Always round down, to match Vyper's arithmetic (which always truncates).\n\n    let sum = BZERO;\n    const numTokens = balances.length;\n    for (let i = 0; i < numTokens; i++) {\n        sum = sum + balances[i];\n    }\n    if (sum == BZERO) {\n        return BZERO;\n    }\n\n    let prevInvariant = BZERO;\n    let invariant = sum;\n    const ampTimesTotal = amp * BigInt(numTokens);\n\n    for (let i = 0; i < 255; i++) {\n        let D_P = invariant;\n        for (let j = 0; j < numTokens; j++) {\n            // (D_P * invariant) / (balances[j] * numTokens)\n            D_P = MathSol.divDown(\n                MathSol.mul(D_P, invariant),\n                MathSol.mul(balances[j], BigInt(numTokens))\n            );\n        }\n\n        prevInvariant = invariant;\n        invariant = MathSol.divDown(\n            MathSol.mul(\n                // (ampTimesTotal * sum) / AMP_PRECISION + D_P * numTokens\n                MathSol.divDown(\n                    MathSol.mul(ampTimesTotal, sum),\n                    AMP_PRECISION\n                ) + MathSol.mul(D_P, BigInt(numTokens)),\n                invariant\n            ),\n            // ((ampTimesTotal - _AMP_PRECISION) * invariant) / _AMP_PRECISION + (numTokens + 1) * D_P\n            MathSol.divDown(\n                MathSol.mul(ampTimesTotal - AMP_PRECISION, invariant),\n                AMP_PRECISION\n            ) + MathSol.mul(BigInt(numTokens + 1), D_P)\n        );\n\n        if (invariant > prevInvariant) {\n            if (invariant - prevInvariant <= 1) {\n                return invariant;\n            }\n        } else if (prevInvariant - invariant <= 1) {\n            return invariant;\n        }\n    }\n    throw new Error('Errors.STABLE_INVARIANT_DIDNT_CONVERGE');\n}\n\n// PairType = 'token->token'\n// SwapType = 'swapExactIn'\nexport function _calcOutGivenIn(\n    amp: bigint,\n    balances: bigint[],\n    tokenIndexIn: number,\n    tokenIndexOut: number,\n    amountIn: bigint,\n    fee: bigint\n): bigint {\n    amountIn = subtractFee(amountIn, fee);\n    const invariant = _calculateInvariant(amp, balances);\n\n    const initBalance = balances[tokenIndexIn];\n    balances[tokenIndexIn] = initBalance + amountIn;\n    const finalBalanceOut = _getTokenBalanceGivenInvariantAndAllOtherBalances(\n        amp,\n        balances,\n        invariant,\n        tokenIndexOut\n    );\n    return balances[tokenIndexOut] - finalBalanceOut - BigInt(1);\n}\n\nexport function _calcInGivenOut(\n    amp: bigint,\n    balances: bigint[],\n    tokenIndexIn: number,\n    tokenIndexOut: number,\n    amountOut: bigint,\n    fee: bigint\n): bigint {\n    const invariant = _calculateInvariant(amp, balances);\n    balances[tokenIndexOut] = MathSol.sub(balances[tokenIndexOut], amountOut);\n\n    const finalBalanceIn = _getTokenBalanceGivenInvariantAndAllOtherBalances(\n        amp,\n        balances,\n        invariant,\n        tokenIndexIn\n    );\n\n    let amountIn = MathSol.add(\n        MathSol.sub(finalBalanceIn, balances[tokenIndexIn]),\n        BigInt(1)\n    );\n    amountIn = addFee(amountIn, fee);\n    return amountIn;\n}\n\n/**\n * _calcBptOutGivenExactTokensIn\n * @param amp Amplification parameter in EVM Scale\n * @param balances Token balances in EVM Scale normalised to 18 decimals (Should not have value for BPT token)\n * @param amountsIn Token amounts in EVM Scale normalised to 18 decimals (Should not have value for BPT token)\n * @param bptTotalSupply BPT total supply in EVM Scale\n * @param swapFeePercentage Swap fee percentage in EVM Scale\n * @returns BPT out in EVM Scale\n */\nexport function _calcBptOutGivenExactTokensIn(\n    amp: bigint,\n    balances: bigint[],\n    amountsIn: bigint[],\n    bptTotalSupply: bigint,\n    swapFeePercentage: bigint\n): bigint {\n    // BPT out, so we round down overall.\n\n    // First loop calculates the sum of all token balances, which will be used to calculate\n    // the current weights of each token, relative to this sum\n    let sumBalances = BigInt(0);\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = sumBalances + balances[i];\n    }\n\n    // Calculate the weighted balance ratio without considering fees\n    const balanceRatiosWithFee: bigint[] = new Array(amountsIn.length);\n    // The weighted sum of token balance ratios with fee\n    let invariantRatioWithFees = BigInt(0);\n    for (let i = 0; i < balances.length; i++) {\n        const currentWeight = MathSol.divDownFixed(balances[i], sumBalances);\n        balanceRatiosWithFee[i] = MathSol.divDownFixed(\n            balances[i] + amountsIn[i],\n            balances[i]\n        );\n        invariantRatioWithFees =\n            invariantRatioWithFees +\n            MathSol.mulDownFixed(balanceRatiosWithFee[i], currentWeight);\n    }\n\n    // Second loop calculates new amounts in, taking into account the fee on the percentage excess\n    const newBalances: bigint[] = new Array(balances.length);\n    for (let i = 0; i < balances.length; i++) {\n        let amountInWithoutFee: bigint;\n\n        // Check if the balance ratio is greater than the ideal ratio to charge fees or not\n        if (balanceRatiosWithFee[i] > invariantRatioWithFees) {\n            const nonTaxableAmount = MathSol.mulDownFixed(\n                balances[i],\n                invariantRatioWithFees - MathSol.ONE\n            );\n            const taxableAmount = amountsIn[i] - nonTaxableAmount;\n            // No need to use checked arithmetic for the swap fee, it is guaranteed to be lower than 50%\n            amountInWithoutFee =\n                nonTaxableAmount +\n                MathSol.mulDownFixed(\n                    taxableAmount,\n                    MathSol.ONE - swapFeePercentage\n                );\n        } else {\n            amountInWithoutFee = amountsIn[i];\n        }\n        newBalances[i] = balances[i] + amountInWithoutFee;\n    }\n\n    // Get current and new invariants, taking swap fees into account\n    const currentInvariant = _calculateInvariant(amp, balances);\n    const newInvariant = _calculateInvariant(amp, newBalances);\n\n    const invariantRatio = MathSol.divDownFixed(newInvariant, currentInvariant);\n\n    // If the invariant didn't increase for any reason, we simply don't mint BPT\n    if (invariantRatio > MathSol.ONE) {\n        return MathSol.mulDownFixed(\n            bptTotalSupply,\n            invariantRatio - MathSol.ONE\n        );\n    } else {\n        return BigInt(0);\n    }\n}\n\n/**\n * _calcTokenInGivenExactBptOut\n * @param amp Amplification parameter in EVM Scale\n * @param balances Token balances in EVM Scale normalised to 18 decimals (Should not have value for BPT token)\n * @param tokenIndexIn Index of token in (from tokens array without BPT)\n * @param bptAmountOut BPT amount out in EVM scale\n * @param bptTotalSupply BPT total supply in EVM Scale\n * @param fee Swap fee percentage in EVM Scale\n * @returns token in EVM Scale normalised to 18 decimals\n */\nexport function _calcTokenInGivenExactBptOut(\n    amp: bigint,\n    balances: bigint[],\n    tokenIndexIn: number,\n    bptAmountOut: bigint,\n    bptTotalSupply: bigint,\n    fee: bigint\n): bigint {\n    // Token in, so we round up overall.\n    const currentInvariant = _calculateInvariant(amp, balances);\n    const newInvariant = MathSol.mulUpFixed(\n        MathSol.divUpFixed(\n            MathSol.add(bptTotalSupply, bptAmountOut),\n            bptTotalSupply\n        ),\n        currentInvariant\n    );\n\n    // Calculate amount in without fee.\n    const newBalanceTokenIndex =\n        _getTokenBalanceGivenInvariantAndAllOtherBalances(\n            amp,\n            balances,\n            newInvariant,\n            tokenIndexIn\n        );\n    const amountInWithoutFee = MathSol.sub(\n        newBalanceTokenIndex,\n        balances[tokenIndexIn]\n    );\n\n    // First calculate the sum of all token balances, which will be used to calculate\n    // the current weight of each token\n    let sumBalances = BigInt(0);\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = MathSol.add(sumBalances, balances[i]);\n    }\n\n    // We can now compute how much extra balance is being deposited\n    // and used in virtual swaps, and charge swap fees accordingly.\n    const currentWeight = MathSol.divDownFixed(\n        balances[tokenIndexIn],\n        sumBalances\n    );\n    const taxablePercentage = MathSol.complementFixed(currentWeight);\n    const taxableAmount = MathSol.mulUpFixed(\n        amountInWithoutFee,\n        taxablePercentage\n    );\n    const nonTaxableAmount = MathSol.sub(amountInWithoutFee, taxableAmount);\n\n    return MathSol.add(\n        nonTaxableAmount,\n        MathSol.divUpFixed(taxableAmount, MathSol.sub(MathSol.ONE, fee))\n    );\n}\n\n/*\nFlow of calculations:\namountsTokenOut -> amountsOutProportional ->\namountOutPercentageExcess -> amountOutBeforeFee -> newInvariant -> amountBPTIn\n*/\nexport function _calcBptInGivenExactTokensOut(\n    amp: bigint,\n    balances: bigint[],\n    amountsOut: bigint[],\n    bptTotalSupply: bigint,\n    swapFeePercentage: bigint\n): bigint {\n    // BPT in, so we round up overall.\n\n    // First loop calculates the sum of all token balances, which will be used to calculate\n    // the current weights of each token relative to this sum\n    let sumBalances = BigInt(0);\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = sumBalances + balances[i];\n    }\n\n    // Calculate the weighted balance ratio without considering fees\n    const balanceRatiosWithoutFee: bigint[] = new Array(amountsOut.length);\n    let invariantRatioWithoutFees = BigInt(0);\n    for (let i = 0; i < balances.length; i++) {\n        const currentWeight = MathSol.divUpFixed(balances[i], sumBalances);\n        balanceRatiosWithoutFee[i] = MathSol.divUpFixed(\n            balances[i] - amountsOut[i],\n            balances[i]\n        );\n        invariantRatioWithoutFees =\n            invariantRatioWithoutFees +\n            MathSol.mulUpFixed(balanceRatiosWithoutFee[i], currentWeight);\n    }\n\n    // Second loop calculates new amounts in, taking into account the fee on the percentage excess\n    const newBalances: bigint[] = new Array(balances.length);\n    for (let i = 0; i < balances.length; i++) {\n        // Swap fees are typically charged on 'token in', but there is no 'token in' here, so we apply it to\n        // 'token out'. This results in slightly larger price impact.\n\n        let amountOutWithFee: bigint;\n        if (invariantRatioWithoutFees > balanceRatiosWithoutFee[i]) {\n            const nonTaxableAmount = MathSol.mulDownFixed(\n                balances[i],\n                MathSol.complementFixed(invariantRatioWithoutFees)\n            );\n            const taxableAmount = amountsOut[i] - nonTaxableAmount;\n            // No need to use checked arithmetic for the swap fee, it is guaranteed to be lower than 50%\n            amountOutWithFee =\n                nonTaxableAmount +\n                MathSol.divUpFixed(\n                    taxableAmount,\n                    MathSol.ONE - swapFeePercentage\n                );\n        } else {\n            amountOutWithFee = amountsOut[i];\n        }\n        newBalances[i] = balances[i] - amountOutWithFee;\n    }\n\n    // Get current and new invariants, taking into account swap fees\n    const currentInvariant = _calculateInvariant(amp, balances);\n    const newInvariant = _calculateInvariant(amp, newBalances);\n    const invariantRatio = MathSol.divDownFixed(newInvariant, currentInvariant);\n\n    // return amountBPTIn\n    return MathSol.mulUpFixed(\n        bptTotalSupply,\n        MathSol.complementFixed(invariantRatio)\n    );\n}\n\nexport function _calcTokenOutGivenExactBptIn(\n    amp: bigint,\n    balances: bigint[],\n    tokenIndex: number,\n    bptAmountIn: bigint,\n    bptTotalSupply: bigint,\n    swapFeePercentage: bigint\n): bigint {\n    // Token out, so we round down overall.\n\n    const currentInvariant = _calculateInvariant(amp, balances);\n    const newInvariant = MathSol.mulUpFixed(\n        MathSol.divUpFixed(bptTotalSupply - bptAmountIn, bptTotalSupply),\n        currentInvariant\n    );\n\n    // Calculate amount out without fee\n    const newBalanceTokenIndex =\n        _getTokenBalanceGivenInvariantAndAllOtherBalances(\n            amp,\n            balances,\n            newInvariant,\n            tokenIndex\n        );\n    const amountOutWithoutFee = balances[tokenIndex] - newBalanceTokenIndex;\n\n    // First calculate the sum of all token balances, which will be used to calculate\n    // the current weight of each token\n    let sumBalances = BigInt(0);\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = sumBalances + balances[i];\n    }\n\n    // We can now compute how much excess balance is being withdrawn as a result of the virtual swaps, which result\n    // in swap fees.\n    const currentWeight = MathSol.divDownFixed(\n        balances[tokenIndex],\n        sumBalances\n    );\n    const taxablePercentage = MathSol.complementFixed(currentWeight);\n\n    // Swap fees are typically charged on 'token in', but there is no 'token in' here, so we apply it\n    // to 'token out'. This results in slightly larger price impact. Fees are rounded up.\n    const taxableAmount = MathSol.mulUpFixed(\n        amountOutWithoutFee,\n        taxablePercentage\n    );\n    const nonTaxableAmount = amountOutWithoutFee - taxableAmount;\n\n    // No need to use checked arithmetic for the swap fee, it is guaranteed to be lower than 50%\n    return (\n        nonTaxableAmount +\n        MathSol.mulDownFixed(taxableAmount, MathSol.ONE - swapFeePercentage)\n    );\n}\n\nexport function _calcTokensOutGivenExactBptIn(\n    balances: bigint[],\n    bptAmountIn: bigint,\n    bptTotalSupply: bigint\n): bigint[] {\n    /**********************************************************************************************\n    // exactBPTInForTokensOut                                                                    //\n    // (per token)                                                                               //\n    // aO = tokenAmountOut             /        bptIn         \\                                  //\n    // b = tokenBalance      a0 = b * | ---------------------  |                                 //\n    // bptIn = bptAmountIn             \\     bptTotalSupply    /                                 //\n    // bpt = bptTotalSupply                                                                      //\n    **********************************************************************************************/\n\n    // Since we're computing an amount out, we round down overall. This means rounding down on both the\n    // multiplication and division.\n\n    const bptRatio = MathSol.divDownFixed(bptAmountIn, bptTotalSupply);\n\n    const amountsOut: bigint[] = new Array(balances.length);\n    for (let i = 0; i < balances.length; i++) {\n        amountsOut[i] = MathSol.mulDownFixed(balances[i], bptRatio);\n    }\n\n    return amountsOut;\n}\n\nfunction _getTokenBalanceGivenInvariantAndAllOtherBalances(\n    amp: bigint,\n    balances: bigint[],\n    invariant: bigint,\n    tokenIndex: number\n): bigint {\n    // Rounds result up overall\n\n    const ampTimesTotal = amp * BigInt(balances.length);\n    let sum = balances[0];\n    let P_D = balances[0] * BigInt(balances.length);\n    for (let j = 1; j < balances.length; j++) {\n        P_D = MathSol.divDown(\n            MathSol.mul(MathSol.mul(P_D, balances[j]), BigInt(balances.length)),\n            invariant\n        );\n        sum = sum + balances[j];\n    }\n    // No need to use safe math, based on the loop above `sum` is greater than or equal to `balances[tokenIndex]`\n    sum = sum - balances[tokenIndex];\n\n    const inv2 = MathSol.mul(invariant, invariant);\n    // We remove the balance fromm c by multiplying it\n    const c = MathSol.mul(\n        MathSol.mul(\n            MathSol.divUp(inv2, MathSol.mul(ampTimesTotal, P_D)),\n            AMP_PRECISION\n        ),\n        balances[tokenIndex]\n    );\n    const b =\n        sum +\n        MathSol.mul(MathSol.divDown(invariant, ampTimesTotal), AMP_PRECISION);\n\n    // We iterate to find the balance\n    let prevTokenBalance = BZERO;\n    // We multiply the first iteration outside the loop with the invariant to set the value of the\n    // initial approximation.\n    let tokenBalance = MathSol.divUp(inv2 + c, invariant + b);\n\n    for (let i = 0; i < 255; i++) {\n        prevTokenBalance = tokenBalance;\n\n        tokenBalance = MathSol.divUp(\n            MathSol.mul(tokenBalance, tokenBalance) + c,\n            MathSol.mul(tokenBalance, BigInt(2)) + b - invariant\n        );\n\n        if (tokenBalance > prevTokenBalance) {\n            if (tokenBalance - prevTokenBalance <= 1) {\n                return tokenBalance;\n            }\n        } else if (prevTokenBalance - tokenBalance <= 1) {\n            return tokenBalance;\n        }\n    }\n    throw new Error('Errors.STABLE_GET_BALANCE_DIDNT_CONVERGE');\n}\n\nfunction subtractFee(amount: bigint, fee: bigint): bigint {\n    const feeAmount = MathSol.mulUpFixed(amount, fee);\n    return amount - feeAmount;\n}\n\nfunction addFee(amount: bigint, fee: bigint): bigint {\n    return MathSol.divUpFixed(amount, MathSol.complementFixed(fee));\n}\n\n/////////\n/// SpotPriceAfterSwap\n/////////\n\n// PairType = 'token->token'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapExactTokenInForTokenOut(\n    amp: bigint,\n    balances: bigint[],\n    tokenIndexIn: number,\n    tokenIndexOut: number,\n    amountIn: bigint,\n    fee: bigint\n): bigint {\n    const feeComplement = MathSol.complementFixed(fee);\n    const balancesCopy = [...balances];\n    balances[tokenIndexIn] = MathSol.add(\n        balances[tokenIndexIn],\n        MathSol.mulUpFixed(amountIn, feeComplement)\n    );\n    balances[tokenIndexOut] = MathSol.sub(\n        balances[tokenIndexOut],\n        _calcOutGivenIn(\n            amp,\n            balancesCopy,\n            tokenIndexIn,\n            tokenIndexOut,\n            amountIn,\n            fee\n        )\n    );\n    let ans = _poolDerivatives(\n        amp,\n        balances,\n        tokenIndexIn,\n        tokenIndexOut,\n        true,\n        false\n    );\n    ans = MathSol.divDownFixed(\n        MathSol.ONE,\n        MathSol.mulDownFixed(ans, feeComplement)\n    );\n    return ans;\n}\n\n// PairType = 'token->token'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapTokenInForExactTokenOut(\n    amp: bigint,\n    balances: bigint[],\n    tokenIndexIn: number,\n    tokenIndexOut: number,\n    amountOut: bigint,\n    fee: bigint\n): bigint {\n    const balancesCopy = [...balances];\n    const _in = _calcInGivenOut(\n        amp,\n        balancesCopy,\n        tokenIndexIn,\n        tokenIndexOut,\n        amountOut,\n        fee\n    );\n    balances[tokenIndexIn] = balances[tokenIndexIn] + _in;\n    balances[tokenIndexOut] = MathSol.sub(balances[tokenIndexOut], amountOut);\n    let ans = _poolDerivatives(\n        amp,\n        balances,\n        tokenIndexIn,\n        tokenIndexOut,\n        true,\n        true\n    );\n    const feeComplement = MathSol.complementFixed(fee);\n    ans = MathSol.divUpFixed(\n        MathSol.ONE,\n        MathSol.mulUpFixed(ans, feeComplement)\n    );\n    return ans;\n}\n\n// PairType = 'token->BPT'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapExactTokenInForBPTOut(\n    amp: bigint,\n    balances: bigint[],\n    tokenIndexIn: number,\n    bptTotalSupply: bigint,\n    amountIn: bigint\n    // assuming zero fee\n): bigint {\n    balances[tokenIndexIn] = balances[tokenIndexIn] + amountIn;\n    // working\n    const amountsIn = balances.map((_value, index) =>\n        index == tokenIndexIn ? amountIn : BigInt(0)\n    );\n    const finalBPTSupply =\n        bptTotalSupply +\n        _calcBptOutGivenExactTokensIn(\n            amp,\n            balances,\n            amountsIn,\n            bptTotalSupply,\n            BigInt(0)\n        );\n    let ans = _poolDerivativesBPT(\n        amp,\n        balances,\n        finalBPTSupply,\n        tokenIndexIn,\n        true,\n        true,\n        false\n    );\n    ans = MathSol.divUpFixed(MathSol.ONE, ans);\n    return ans;\n}\n\n// PairType = 'token->BPT'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapTokenInForExactBPTOut(\n    amp: bigint,\n    balances: bigint[],\n    tokenIndexIn: number,\n    bptTotalSupply: bigint,\n    amountOut: bigint\n    // assuming zero fee\n): bigint {\n    const balancesCopy = [...balances];\n    const _in = _calcTokenInGivenExactBptOut(\n        amp,\n        balancesCopy,\n        tokenIndexIn,\n        amountOut,\n        bptTotalSupply,\n        BigInt(0)\n    );\n    balances[tokenIndexIn] = balances[tokenIndexIn] + _in;\n    let ans = _poolDerivativesBPT(\n        amp,\n        balances,\n        bptTotalSupply + amountOut,\n        tokenIndexIn,\n        true,\n        true,\n        true\n    );\n    ans = MathSol.divUpFixed(MathSol.ONE, ans); // ONE.div(ans.times(feeFactor));\n    return ans;\n}\n\n// PairType = 'BPT->token'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapExactBPTInForTokenOut(\n    amp: bigint,\n    balances: bigint[],\n    tokenIndexOut: number,\n    bptTotalSupply: bigint,\n    amountIn: bigint\n    // assuming zero fee\n): bigint {\n    // balances copy not necessary?\n    const _out = _calcTokenOutGivenExactBptIn(\n        amp,\n        balances,\n        tokenIndexOut,\n        amountIn,\n        bptTotalSupply,\n        BigInt(0)\n    );\n    balances[tokenIndexOut] = balances[tokenIndexOut] - _out;\n    const bptTotalSupplyAfter = MathSol.sub(bptTotalSupply, amountIn);\n    const ans = _poolDerivativesBPT(\n        amp,\n        balances,\n        bptTotalSupplyAfter,\n        tokenIndexOut,\n        true,\n        false,\n        false\n    );\n    return ans;\n}\n\n// PairType = 'BPT->token'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapBPTInForExactTokenOut(\n    amp: bigint,\n    balances: bigint[],\n    tokenIndexOut: number,\n    bptTotalSupply: bigint,\n    amountOut: bigint\n): bigint {\n    balances[tokenIndexOut] = MathSol.sub(balances[tokenIndexOut], amountOut);\n    const amountsOut = balances.map((_value, index) =>\n        index == tokenIndexOut ? amountOut : BigInt(0)\n    );\n    const bptTotalSupplyAfter =\n        bptTotalSupply -\n        _calcBptInGivenExactTokensOut(\n            amp,\n            balances,\n            amountsOut,\n            bptTotalSupply,\n            BigInt(0)\n        );\n    const ans = _poolDerivativesBPT(\n        amp,\n        balances,\n        bptTotalSupplyAfter,\n        tokenIndexOut,\n        true,\n        false,\n        true\n    );\n    return ans;\n}\n\nexport function _poolDerivatives(\n    amp: bigint,\n    balances: bigint[],\n    tokenIndexIn: number,\n    tokenIndexOut: number,\n    is_first_derivative: boolean,\n    wrt_out: boolean\n): bigint {\n    const totalCoins = balances.length;\n    const D = _calculateInvariant(amp, balances);\n    let S = BigInt(0);\n    for (let i = 0; i < totalCoins; i++) {\n        if (i != tokenIndexIn && i != tokenIndexOut) {\n            S += balances[i];\n        }\n    }\n    const x = balances[tokenIndexIn];\n    const y = balances[tokenIndexOut];\n    const a = amp * BigInt(totalCoins);\n    const b = a * (S - D) + D * AMP_PRECISION;\n    const twoaxy = BigInt(2) * a * x * y;\n    const partial_x = twoaxy + a * y * y + b * y;\n    const partial_y = twoaxy + a * x * x + b * x;\n    let ans: bigint;\n    if (is_first_derivative) {\n        ans = MathSol.divUpFixed(partial_x, partial_y);\n    } else {\n        // Untested case:\n        const partial_xx = BigInt(2) * a * y;\n        const partial_yy = BigInt(2) * a * x;\n        const partial_xy = partial_xx + partial_yy + b; // AMP_PRECISION missing\n        const numerator =\n            BigInt(2) * partial_x * partial_y * partial_xy -\n            partial_xx * partial_y * partial_y +\n            partial_yy * partial_x * partial_x;\n        const denominator = partial_x * partial_x * partial_y;\n        ans = MathSol.divUpFixed(numerator, denominator); // change the order to directly use integer operations\n        if (wrt_out) {\n            ans = MathSol.mulUpFixed(\n                MathSol.mulUpFixed(ans, partial_y),\n                partial_x\n            );\n        }\n    }\n    return ans;\n}\n\nexport function _poolDerivativesBPT(\n    amp: bigint,\n    balances: bigint[],\n    bptSupply: bigint,\n    tokenIndexIn: number,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    is_first_derivative: boolean,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    is_BPT_out: boolean,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    wrt_out: boolean\n): bigint {\n    const totalCoins = balances.length;\n    const D = _calculateInvariant(amp, balances);\n    let S = BigInt(0);\n    let D_P = D / BigInt(totalCoins);\n    for (let i = 0; i < totalCoins; i++) {\n        if (i != tokenIndexIn) {\n            S = S + balances[i];\n            D_P = (D_P * D) / (BigInt(totalCoins) * balances[i]);\n        }\n    }\n    const x = balances[tokenIndexIn];\n    const alpha = amp * BigInt(totalCoins);\n    const beta = alpha * S; // units = 10 ** 21\n    const gamma = BigInt(AMP_PRECISION) - alpha;\n    const partial_x = BigInt(2) * alpha * x + beta + gamma * D;\n    const minus_partial_D =\n        D_P * BigInt(totalCoins + 1) * AMP_PRECISION - gamma * x;\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const partial_D = -minus_partial_D;\n    const ans = MathSol.divUpFixed(\n        (partial_x * bptSupply) / minus_partial_D,\n        D\n    );\n    /*\n    if (is_first_derivative) {\n        ans = MathSol.divUpFixed((partial_x * bptSupply) / minus_partial_D, D);\n    } else {\n        let partial_xx = bnum(2).times(alpha);\n        let partial_xD = gamma;\n        let n_times_nplusone = totalCoins * (totalCoins + 1);\n        let partial_DD = bnum(0).minus( D_P.times(n_times_nplusone).div(D) );\n        if (is_BPT_out) {\n            let term1 = partial_xx.times(partial_D).div( partial_x.pow(2) );\n            let term2 = bnum(2).times(partial_xD).div(partial_x);\n            let term3 = partial_DD.div(partial_D);\n            ans = (term1.minus(term2).plus(term3)).times(D).div(bptSupply)\n            if (wrt_out) {\n                let D_prime = bnum(0).minus( partial_x.div(partial_D) );\n                ans = ans.div( D_prime ).times(D).div(bptSupply);\n            }\n        } else {\n            ans = bnum(2).times(partial_xD).div(partial_D).minus(\n                partial_DD.times(partial_x).div(partial_D.pow(2)) ).minus(\n                partial_xx.div(partial_x) );\n            if (wrt_out) {\n                ans = ans.times(partial_x).div(minus_partial_D).times(bptSupply).div(D);\n            }\n        }\n    }\n*/\n    return ans;\n}\n","import { getAddress } from '@ethersproject/address';\nimport { BigNumber, formatFixed, parseFixed } from '@ethersproject/bignumber';\nimport { WeiPerEther as ONE, Zero } from '@ethersproject/constants';\nimport {\n    BigNumber as OldBigNumber,\n    bnum,\n    scale,\n    ZERO,\n} from '../../utils/bignumber';\nimport {\n    isSameAddress,\n    normaliseBalance,\n    normaliseAmount,\n    denormaliseAmount,\n} from '../../utils';\nimport {\n    PoolBase,\n    PoolTypes,\n    PoolPairBase,\n    SwapTypes,\n    SubgraphPoolBase,\n    SubgraphToken,\n} from '../../types';\nimport {\n    _spotPriceAfterSwapExactTokenInForTokenOut,\n    _spotPriceAfterSwapTokenInForExactTokenOut,\n    _derivativeSpotPriceAfterSwapExactTokenInForTokenOut,\n    _derivativeSpotPriceAfterSwapTokenInForExactTokenOut,\n} from './stableMath';\nimport {\n    _calcOutGivenIn,\n    _calcInGivenOut,\n    _calcBptOutGivenExactTokensIn,\n    _calcTokensOutGivenExactBptIn,\n} from './stableMathBigInt';\nimport { universalNormalizedLiquidity } from '../liquidity';\n\ntype StablePoolToken = Pick<SubgraphToken, 'address' | 'balance' | 'decimals'>;\n\nexport type StablePoolPairData = PoolPairBase & {\n    allBalances: OldBigNumber[];\n    allBalancesScaled: BigNumber[]; // EVM Maths uses everything in 1e18 upscaled format and this avoids repeated scaling\n    amp: BigNumber;\n    tokenIndexIn: number;\n    tokenIndexOut: number;\n};\n\nexport class StablePool implements PoolBase<StablePoolPairData> {\n    poolType: PoolTypes = PoolTypes.Stable;\n    id: string;\n    address: string;\n    amp: BigNumber;\n    swapFee: BigNumber;\n    totalShares: BigNumber;\n    tokens: StablePoolToken[];\n    tokensList: string[];\n    MAX_IN_RATIO = parseFixed('0.3', 18);\n    MAX_OUT_RATIO = parseFixed('0.3', 18);\n\n    static AMP_DECIMALS = 3;\n\n    static fromPool(pool: SubgraphPoolBase): StablePool {\n        if (!pool.amp) throw new Error('StablePool missing amp factor');\n        return new StablePool(\n            pool.id,\n            pool.address,\n            pool.amp,\n            pool.swapFee,\n            pool.totalShares,\n            pool.tokens,\n            pool.tokensList\n        );\n    }\n\n    constructor(\n        id: string,\n        address: string,\n        amp: string,\n        swapFee: string,\n        totalShares: string,\n        tokens: StablePoolToken[],\n        tokensList: string[]\n    ) {\n        this.id = id;\n        this.address = address;\n        this.amp = parseFixed(amp, StablePool.AMP_DECIMALS);\n        this.swapFee = parseFixed(swapFee, 18);\n        this.totalShares = parseFixed(totalShares, 18);\n        this.tokens = tokens;\n        this.tokensList = tokensList;\n    }\n\n    parsePoolPairData(tokenIn: string, tokenOut: string): StablePoolPairData {\n        const tokenIndexIn = this.tokens.findIndex(\n            (t) => getAddress(t.address) === getAddress(tokenIn)\n        );\n        if (tokenIndexIn < 0) throw 'Pool does not contain tokenIn';\n        const tI = this.tokens[tokenIndexIn];\n        const balanceIn = tI.balance;\n        const decimalsIn = tI.decimals;\n\n        const tokenIndexOut = this.tokens.findIndex(\n            (t) => getAddress(t.address) === getAddress(tokenOut)\n        );\n        if (tokenIndexOut < 0) throw 'Pool does not contain tokenOut';\n        const tO = this.tokens[tokenIndexOut];\n        const balanceOut = tO.balance;\n        const decimalsOut = tO.decimals;\n\n        // Get all token balances\n        const allBalances = this.tokens.map(({ balance }) => bnum(balance));\n        const allBalancesScaled = this.tokens.map(({ balance }) =>\n            parseFixed(balance, 18)\n        );\n\n        const poolPairData: StablePoolPairData = {\n            id: this.id,\n            address: this.address,\n            poolType: this.poolType,\n            tokenIn: tokenIn,\n            tokenOut: tokenOut,\n            balanceIn: parseFixed(balanceIn, decimalsIn),\n            balanceOut: parseFixed(balanceOut, decimalsOut),\n            swapFee: this.swapFee,\n            allBalances,\n            allBalancesScaled, // TO DO - Change to BigInt??\n            amp: this.amp,\n            tokenIndexIn: tokenIndexIn,\n            tokenIndexOut: tokenIndexOut,\n            decimalsIn: Number(decimalsIn),\n            decimalsOut: Number(decimalsOut),\n        };\n\n        return poolPairData;\n    }\n\n    getNormalizedLiquidity(poolPairData: StablePoolPairData): OldBigNumber {\n        return universalNormalizedLiquidity(\n            this._derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n                poolPairData,\n                ZERO\n            )\n        );\n    }\n\n    getLimitAmountSwap(\n        poolPairData: PoolPairBase,\n        swapType: SwapTypes\n    ): OldBigNumber {\n        // We multiply ratios by 10**-18 because we are in normalized space\n        // so 0.5 should be 0.5 and not 500000000000000000\n        // TODO: update bmath to use everything normalized\n        if (swapType === SwapTypes.SwapExactIn) {\n            return bnum(\n                formatFixed(\n                    poolPairData.balanceIn.mul(this.MAX_IN_RATIO).div(ONE),\n                    poolPairData.decimalsIn\n                )\n            );\n        } else {\n            return bnum(\n                formatFixed(\n                    poolPairData.balanceOut.mul(this.MAX_OUT_RATIO).div(ONE),\n                    poolPairData.decimalsOut\n                )\n            );\n        }\n    }\n\n    // Updates the balance of a given token for the pool\n    updateTokenBalanceForPool(token: string, newBalance: BigNumber): void {\n        // token is BPT\n        if (isSameAddress(this.address, token)) {\n            this.updateTotalShares(newBalance);\n        } else {\n            // token is underlying in the pool\n            const T = this.tokens.find((t) => isSameAddress(t.address, token));\n            if (!T) throw Error('Pool does not contain this token');\n            T.balance = formatFixed(newBalance, T.decimals);\n        }\n    }\n\n    updateTotalShares(newTotalShares: BigNumber): void {\n        this.totalShares = newTotalShares;\n    }\n\n    _exactTokenInForTokenOut(\n        poolPairData: StablePoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            if (amount.isZero()) return ZERO;\n\n            const amtWithFeeEvm = this.subtractSwapFeeAmount(\n                parseFixed(\n                    amount.dp(poolPairData.decimalsIn).toString(),\n                    poolPairData.decimalsIn\n                ),\n                poolPairData.swapFee\n            );\n\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            const amtScaled = amtWithFeeEvm.mul(\n                10 ** (18 - poolPairData.decimalsIn)\n            );\n\n            const amt = _calcOutGivenIn(\n                this.amp.toBigInt(),\n                poolPairData.allBalancesScaled.map((balance) =>\n                    balance.toBigInt()\n                ),\n                poolPairData.tokenIndexIn,\n                poolPairData.tokenIndexOut,\n                amtScaled.toBigInt(),\n                BigInt(0)\n            );\n\n            // return normalised amount\n            // Using BigNumber.js decimalPlaces (dp), allows us to consider token decimal accuracy correctly,\n            // i.e. when using token with 2decimals 0.002 should be returned as 0\n            // Uses ROUND_DOWN mode (1)\n            return scale(bnum(amt.toString()), -18).dp(\n                poolPairData.decimalsOut,\n                1\n            );\n        } catch (err) {\n            // console.error(`_evmoutGivenIn: ${err.message}`);\n            return ZERO;\n        }\n    }\n\n    _tokenInForExactTokenOut(\n        poolPairData: StablePoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            if (amount.isZero()) return ZERO;\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            const amtScaled = parseFixed(amount.dp(18).toString(), 18);\n\n            let amt = _calcInGivenOut(\n                this.amp.toBigInt(),\n                poolPairData.allBalancesScaled.map((balance) =>\n                    balance.toBigInt()\n                ),\n                poolPairData.tokenIndexIn,\n                poolPairData.tokenIndexOut,\n                amtScaled.toBigInt(),\n                BigInt(0)\n            );\n\n            // this is downscaleUp\n            const scaleFactor = BigInt(10 ** (18 - poolPairData.decimalsIn));\n            amt = (amt + scaleFactor - BigInt(1)) / scaleFactor;\n\n            const amtWithFee = this.addSwapFeeAmount(\n                BigNumber.from(amt),\n                poolPairData.swapFee\n            );\n            return bnum(amtWithFee.toString()).div(\n                10 ** poolPairData.decimalsIn\n            );\n        } catch (err) {\n            console.error(`_evminGivenOut: ${err.message}`);\n            return ZERO;\n        }\n    }\n\n    /**\n     * _calcTokensOutGivenExactBptIn\n     * @param bptAmountIn EVM scale.\n     * @returns EVM scale.\n     */\n    _calcTokensOutGivenExactBptIn(bptAmountIn: BigNumber): BigNumber[] {\n        // balances and amounts must be normalized to 1e18 fixed point - e.g. 1USDC => 1e18 not 1e6\n        // takes price rate into account\n        const balancesNormalised = this.tokens\n            .filter((t) => !isSameAddress(t.address, this.address))\n            .map((t) => normaliseBalance(t));\n        try {\n            const amountsOutNormalised = _calcTokensOutGivenExactBptIn(\n                balancesNormalised,\n                bptAmountIn.toBigInt(),\n                this.totalShares.toBigInt()\n            );\n            // We want to return denormalised amounts. e.g. 1USDC => 1e6 not 1e18\n            const amountsOut = amountsOutNormalised.map((a, i) =>\n                denormaliseAmount(a, this.tokens[i])\n            );\n            return amountsOut.map((a) => BigNumber.from(a));\n        } catch (err) {\n            return new Array(balancesNormalised.length).fill(ZERO);\n        }\n    }\n\n    /**\n     * _calcBptOutGivenExactTokensIn\n     * @param amountsIn EVM Scale\n     * @returns EVM Scale\n     */\n    _calcBptOutGivenExactTokensIn(amountsIn: BigNumber[]): BigNumber {\n        try {\n            // balances and amounts must be normalized to 1e18 fixed point - e.g. 1USDC => 1e18 not 1e6\n            // takes price rate into account\n            const amountsInNormalised = new Array(amountsIn.length).fill(\n                BigInt(0)\n            );\n            const balancesNormalised = new Array(amountsIn.length).fill(\n                BigInt(0)\n            );\n            this.tokens\n                .filter((t) => !isSameAddress(t.address, this.address))\n                .forEach((token, i) => {\n                    amountsInNormalised[i] = normaliseAmount(\n                        BigInt(amountsIn[i].toString()),\n                        token\n                    );\n                    balancesNormalised[i] = normaliseBalance(token);\n                });\n            const bptAmountOut = _calcBptOutGivenExactTokensIn(\n                this.amp.toBigInt(),\n                balancesNormalised,\n                amountsInNormalised,\n                this.totalShares.toBigInt(),\n                this.swapFee.toBigInt()\n            );\n            return BigNumber.from(bptAmountOut.toString());\n        } catch (err) {\n            return Zero;\n        }\n    }\n\n    _spotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: StablePoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        return _spotPriceAfterSwapExactTokenInForTokenOut(amount, poolPairData);\n    }\n\n    _spotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: StablePoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        return _spotPriceAfterSwapTokenInForExactTokenOut(amount, poolPairData);\n    }\n\n    _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: StablePoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        return _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n            amount,\n            poolPairData\n        );\n    }\n\n    _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: StablePoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        return _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n            amount,\n            poolPairData\n        );\n    }\n\n    subtractSwapFeeAmount(amount: BigNumber, swapFee: BigNumber): BigNumber {\n        // https://github.com/balancer-labs/balancer-v2-monorepo/blob/c18ff2686c61a8cbad72cdcfc65e9b11476fdbc3/pkg/pool-utils/contracts/BasePool.sol#L466\n        const feeAmount = amount.mul(swapFee).add(ONE.sub(1)).div(ONE);\n        return amount.sub(feeAmount);\n    }\n\n    addSwapFeeAmount(amount: BigNumber, swapFee: BigNumber): BigNumber {\n        // https://github.com/balancer-labs/balancer-v2-monorepo/blob/c18ff2686c61a8cbad72cdcfc65e9b11476fdbc3/pkg/pool-utils/contracts/BasePool.sol#L458\n        const feeAmount = ONE.sub(swapFee);\n        return amount.mul(ONE).add(feeAmount.sub(1)).div(feeAmount);\n    }\n}\n","import { BigNumber, formatFixed, parseFixed } from '@ethersproject/bignumber';\nimport { WeiPerEther as ONE, Zero } from '@ethersproject/constants';\nimport {\n    isSameAddress,\n    normaliseBalance,\n    normaliseAmount,\n    denormaliseAmount,\n} from '../../utils';\nimport { BigNumber as OldBigNumber, bnum, ZERO } from '../../utils/bignumber';\nimport {\n    PoolBase,\n    PoolTypes,\n    SwapTypes,\n    SubgraphPoolBase,\n    SubgraphToken,\n} from '../../types';\nimport { getAddress } from '@ethersproject/address';\nimport {\n    _spotPriceAfterSwapExactTokenInForTokenOut,\n    _spotPriceAfterSwapTokenInForExactTokenOut,\n    _derivativeSpotPriceAfterSwapExactTokenInForTokenOut,\n    _derivativeSpotPriceAfterSwapTokenInForExactTokenOut,\n} from '../stablePool/stableMath';\nimport {\n    _calcOutGivenIn,\n    _calcInGivenOut,\n    _calcBptOutGivenExactTokensIn,\n    _calcTokensOutGivenExactBptIn,\n} from '../stablePool/stableMathBigInt';\nimport { StablePoolPairData } from '../stablePool/stablePool';\nimport { universalNormalizedLiquidity } from '../liquidity';\n\ntype MetaStablePoolToken = Pick<\n    SubgraphToken,\n    'address' | 'balance' | 'decimals' | 'priceRate'\n>;\n\nexport type MetaStablePoolPairData = StablePoolPairData & {\n    tokenInPriceRate: BigNumber;\n    tokenOutPriceRate: BigNumber;\n};\n\nexport class MetaStablePool implements PoolBase<MetaStablePoolPairData> {\n    poolType: PoolTypes = PoolTypes.MetaStable;\n    id: string;\n    address: string;\n    amp: BigNumber;\n    swapFee: BigNumber;\n    totalShares: BigNumber;\n    tokens: MetaStablePoolToken[];\n    tokensList: string[];\n    MAX_IN_RATIO = parseFixed('0.3', 18);\n    MAX_OUT_RATIO = parseFixed('0.3', 18);\n\n    static AMP_DECIMALS = 3;\n\n    static fromPool(pool: SubgraphPoolBase): MetaStablePool {\n        if (!pool.amp) throw new Error('MetaStablePool missing amp factor');\n        return new MetaStablePool(\n            pool.id,\n            pool.address,\n            pool.amp,\n            pool.swapFee,\n            pool.totalShares,\n            pool.tokens,\n            pool.tokensList\n        );\n    }\n\n    constructor(\n        id: string,\n        address: string,\n        amp: string,\n        swapFee: string,\n        totalShares: string,\n        tokens: MetaStablePoolToken[],\n        tokensList: string[]\n    ) {\n        this.id = id;\n        this.address = address;\n        this.amp = parseFixed(amp, MetaStablePool.AMP_DECIMALS);\n        this.swapFee = parseFixed(swapFee, 18);\n        this.totalShares = parseFixed(totalShares, 18);\n        this.tokens = tokens;\n        this.tokensList = tokensList;\n    }\n\n    parsePoolPairData(\n        tokenIn: string,\n        tokenOut: string\n    ): MetaStablePoolPairData {\n        const tokenIndexIn = this.tokens.findIndex(\n            (t) => getAddress(t.address) === getAddress(tokenIn)\n        );\n        if (tokenIndexIn < 0) throw 'Pool does not contain tokenIn';\n        const tI = this.tokens[tokenIndexIn];\n\n        const decimalsIn = tI.decimals;\n        const tokenInPriceRate = parseFixed(tI.priceRate, 18);\n        const balanceIn = formatFixed(\n            parseFixed(tI.balance, decimalsIn).mul(tokenInPriceRate).div(ONE),\n            decimalsIn\n        );\n\n        const tokenIndexOut = this.tokens.findIndex(\n            (t) => getAddress(t.address) === getAddress(tokenOut)\n        );\n        if (tokenIndexOut < 0) throw 'Pool does not contain tokenOut';\n        const tO = this.tokens[tokenIndexOut];\n\n        const decimalsOut = tO.decimals;\n        const tokenOutPriceRate = parseFixed(tO.priceRate, 18);\n        const balanceOut = formatFixed(\n            parseFixed(tO.balance, decimalsOut).mul(tokenOutPriceRate).div(ONE),\n            decimalsOut\n        );\n\n        // Get all token balances\n        const allBalances = this.tokens.map(({ balance, priceRate }) =>\n            bnum(balance).times(bnum(priceRate))\n        );\n        const allBalancesScaled = this.tokens.map(({ balance, priceRate }) =>\n            parseFixed(balance, 18).mul(parseFixed(priceRate, 18)).div(ONE)\n        );\n\n        const poolPairData: MetaStablePoolPairData = {\n            id: this.id,\n            address: this.address,\n            poolType: this.poolType,\n            tokenIn: tokenIn,\n            tokenOut: tokenOut,\n            balanceIn: parseFixed(balanceIn, decimalsIn),\n            balanceOut: parseFixed(balanceOut, decimalsOut),\n            swapFee: this.swapFee,\n            allBalances,\n            allBalancesScaled,\n            amp: this.amp,\n            tokenIndexIn: tokenIndexIn,\n            tokenIndexOut: tokenIndexOut,\n            decimalsIn: Number(decimalsIn),\n            decimalsOut: Number(decimalsOut),\n            tokenInPriceRate,\n            tokenOutPriceRate,\n        };\n\n        return poolPairData;\n    }\n\n    getNormalizedLiquidity(poolPairData: MetaStablePoolPairData): OldBigNumber {\n        return universalNormalizedLiquidity(\n            this._derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n                poolPairData,\n                ZERO\n            )\n        );\n    }\n\n    getLimitAmountSwap(\n        poolPairData: MetaStablePoolPairData,\n        swapType: SwapTypes\n    ): OldBigNumber {\n        // We multiply ratios by 10**-18 because we are in normalized space\n        // so 0.5 should be 0.5 and not 500000000000000000\n        // TODO: update bmath to use everything normalized\n        // PoolPairData is using balances that have already been exchanged so need to convert back\n        if (swapType === SwapTypes.SwapExactIn) {\n            return bnum(\n                formatFixed(\n                    poolPairData.balanceIn\n                        .mul(this.MAX_IN_RATIO)\n                        .div(poolPairData.tokenInPriceRate),\n                    poolPairData.decimalsIn\n                )\n            );\n        } else {\n            return bnum(\n                formatFixed(\n                    poolPairData.balanceOut\n                        .mul(this.MAX_OUT_RATIO)\n                        .div(poolPairData.tokenOutPriceRate),\n                    poolPairData.decimalsOut\n                )\n            );\n        }\n    }\n\n    // Updates the balance of a given token for the pool\n    updateTokenBalanceForPool(token: string, newBalance: BigNumber): void {\n        // token is BPT\n        if (isSameAddress(this.address, token)) {\n            this.updateTotalShares(newBalance);\n        } else {\n            // token is underlying in the pool\n            const T = this.tokens.find((t) => isSameAddress(t.address, token));\n            if (!T) throw Error('Pool does not contain this token');\n            T.balance = formatFixed(newBalance, T.decimals);\n        }\n    }\n\n    updateTotalShares(newTotalShares: BigNumber): void {\n        this.totalShares = newTotalShares;\n    }\n\n    _exactTokenInForTokenOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            if (amount.isZero()) return ZERO;\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n\n            const amtWithFee = this.subtractSwapFeeAmount(\n                parseFixed(\n                    amount.dp(poolPairData.decimalsIn).toString(),\n                    poolPairData.decimalsIn\n                ),\n                poolPairData.swapFee\n            );\n\n            const amountConverted = amtWithFee\n                .mul(poolPairData.tokenInPriceRate)\n                .div(ONE);\n\n            const returnAmt = _calcOutGivenIn(\n                this.amp.toBigInt(),\n                poolPairData.allBalancesScaled.map((balance) =>\n                    balance.toBigInt()\n                ),\n                poolPairData.tokenIndexIn,\n                poolPairData.tokenIndexOut,\n                amountConverted.toBigInt(),\n                BigInt(0)\n            );\n\n            const returnEvmWithRate = BigNumber.from(returnAmt)\n                .mul(ONE)\n                .div(poolPairData.tokenOutPriceRate);\n\n            return bnum(formatFixed(returnEvmWithRate, 18));\n        } catch (err) {\n            // console.error(`_evmoutGivenIn: ${err.message}`);\n            return ZERO;\n        }\n    }\n\n    _tokenInForExactTokenOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            if (amount.isZero()) return ZERO;\n            const decimalsIn = poolPairData.decimalsIn;\n            const decimalsOut = poolPairData.decimalsOut;\n\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            const scalingFactorIn =\n                poolPairData.tokenInPriceRate.toBigInt() *\n                BigInt(10 ** (18 - decimalsIn));\n\n            const scalingFactorOut =\n                poolPairData.tokenOutPriceRate.toBigInt() *\n                BigInt(10 ** (18 - decimalsOut));\n\n            // eslint-disable-next-line prettier/prettier\n            const amountBigInt = BigInt(\n                amount\n                    .times(10 ** decimalsOut)\n                    .dp(0)\n                    .toString()\n            );\n            const amountConverted =\n                (amountBigInt * scalingFactorOut) / BigInt(10 ** 18);\n\n            const returnAmount = _calcInGivenOut(\n                this.amp.toBigInt(),\n                poolPairData.allBalancesScaled.map((balance) =>\n                    balance.toBigInt()\n                ),\n                poolPairData.tokenIndexIn,\n                poolPairData.tokenIndexOut,\n                amountConverted,\n                BigInt(0)\n            );\n\n            const returnAmountConverted =\n                (returnAmount * BigInt(10 ** 18)) / scalingFactorIn;\n\n            const returnAmtWithFee = this.addSwapFeeAmount(\n                BigNumber.from(returnAmountConverted),\n                poolPairData.swapFee\n            );\n            return bnum(returnAmtWithFee.toString()).div(\n                10 ** poolPairData.decimalsIn\n            );\n        } catch (err) {\n            console.error(`_evminGivenOut: ${err.message}`);\n            return ZERO;\n        }\n    }\n\n    /**\n     * _calcTokensOutGivenExactBptIn\n     * @param bptAmountIn EVM scale.\n     * @returns EVM scale.\n     */\n    _calcTokensOutGivenExactBptIn(bptAmountIn: BigNumber): BigNumber[] {\n        // balances and amounts must be normalized as if it had 18 decimals for maths\n        // takes price rate into account\n        const balancesNormalised = this.tokens\n            .filter((t) => !isSameAddress(t.address, this.address))\n            .map((t) => normaliseBalance(t));\n        try {\n            const amountsOutNormalised = _calcTokensOutGivenExactBptIn(\n                balancesNormalised,\n                bptAmountIn.toBigInt(),\n                this.totalShares.toBigInt()\n            );\n            const amountsOut = amountsOutNormalised.map((a, i) =>\n                BigNumber.from(denormaliseAmount(a, this.tokens[i]).toString())\n            );\n            return amountsOut;\n        } catch (err) {\n            return new Array(balancesNormalised.length).fill(ZERO);\n        }\n    }\n\n    /**\n     * _calcBptOutGivenExactTokensIn\n     * @param amountsIn EVM Scale\n     * @returns EVM Scale\n     */\n    _calcBptOutGivenExactTokensIn(amountsIn: BigNumber[]): BigNumber {\n        try {\n            // balances and amounts must be normalized as if it had 18 decimals for maths\n            // takes price rate into account\n            const amountsInNormalised = new Array(amountsIn.length).fill(\n                BigInt(0)\n            );\n            const balancesNormalised = new Array(amountsIn.length).fill(\n                BigInt(0)\n            );\n            this.tokens\n                .filter((t) => !isSameAddress(t.address, this.address))\n                .forEach((token, i) => {\n                    amountsInNormalised[i] = normaliseAmount(\n                        BigInt(amountsIn[i].toString()),\n                        token\n                    );\n                    balancesNormalised[i] = normaliseBalance(token);\n                });\n            const bptAmountOut = _calcBptOutGivenExactTokensIn(\n                this.amp.toBigInt(),\n                balancesNormalised,\n                amountsInNormalised,\n                this.totalShares.toBigInt(),\n                this.swapFee.toBigInt()\n            );\n            return BigNumber.from(bptAmountOut.toString());\n        } catch (err) {\n            return Zero;\n        }\n    }\n\n    _spotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        const priceRateIn = bnum(\n            formatFixed(poolPairData.tokenInPriceRate, 18)\n        );\n        const priceRateOut = bnum(\n            formatFixed(poolPairData.tokenOutPriceRate, 18)\n        );\n        const amountConverted = amount.times(\n            formatFixed(poolPairData.tokenInPriceRate, 18)\n        );\n        const result = _spotPriceAfterSwapExactTokenInForTokenOut(\n            amountConverted,\n            poolPairData\n        );\n        return result.div(priceRateIn).times(priceRateOut);\n    }\n\n    _spotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        const priceRateIn = bnum(\n            formatFixed(poolPairData.tokenInPriceRate, 18)\n        );\n        const priceRateOut = bnum(\n            formatFixed(poolPairData.tokenOutPriceRate, 18)\n        );\n        const amountConverted = amount.times(\n            formatFixed(poolPairData.tokenOutPriceRate, 18)\n        );\n        const result = _spotPriceAfterSwapTokenInForExactTokenOut(\n            amountConverted,\n            poolPairData\n        );\n        return result.div(priceRateIn).times(priceRateOut);\n    }\n\n    _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        const priceRateOut = bnum(\n            formatFixed(poolPairData.tokenOutPriceRate, 18)\n        );\n        return _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n            amount,\n            poolPairData\n        ).times(priceRateOut);\n    }\n\n    _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: MetaStablePoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        const priceRateIn = bnum(\n            formatFixed(poolPairData.tokenInPriceRate, 18)\n        );\n        const priceRateOut = bnum(\n            formatFixed(poolPairData.tokenOutPriceRate, 18)\n        );\n        return _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n            amount,\n            poolPairData\n        )\n            .div(priceRateIn)\n            .times(priceRateOut)\n            .times(priceRateOut);\n    }\n\n    subtractSwapFeeAmount(amount: BigNumber, swapFee: BigNumber): BigNumber {\n        // https://github.com/balancer-labs/balancer-v2-monorepo/blob/c18ff2686c61a8cbad72cdcfc65e9b11476fdbc3/pkg/pool-utils/contracts/BasePool.sol#L466\n        const feeAmount = amount.mul(swapFee).add(ONE.sub(1)).div(ONE);\n        return amount.sub(feeAmount);\n    }\n\n    addSwapFeeAmount(amount: BigNumber, swapFee: BigNumber): BigNumber {\n        // https://github.com/balancer-labs/balancer-v2-monorepo/blob/c18ff2686c61a8cbad72cdcfc65e9b11476fdbc3/pkg/pool-utils/contracts/BasePool.sol#L458\n        const feeAmount = ONE.sub(swapFee);\n        return amount.mul(ONE).add(feeAmount.sub(1)).div(feeAmount);\n    }\n}\n","import { MathSol, BZERO } from '../../utils/basicOperations';\n\ntype Params = {\n    fee: bigint;\n    rate: bigint;\n    lowerTarget: bigint;\n    upperTarget: bigint;\n};\n\nexport function _calcBptOutPerMainIn(\n    mainIn: bigint,\n    mainBalance: bigint,\n    wrappedBalance: bigint,\n    bptSupply: bigint,\n    params: Params\n): bigint {\n    // Amount out, so we round down overall.\n\n    if (bptSupply == BigInt(0)) {\n        return _toNominal(mainIn, params);\n    }\n\n    const previousNominalMain = _toNominal(mainBalance, params);\n    const afterNominalMain = _toNominal(mainBalance + mainIn, params);\n    const deltaNominalMain = afterNominalMain - previousNominalMain;\n    const invariant = _calcInvariantUp(\n        previousNominalMain,\n        wrappedBalance,\n        params\n    );\n    return MathSol.divDown(MathSol.mul(bptSupply, deltaNominalMain), invariant);\n}\n\nexport function _calcBptInPerMainOut(\n    mainOut: bigint,\n    mainBalance: bigint,\n    wrappedBalance: bigint,\n    bptSupply: bigint,\n    params: Params\n): bigint {\n    // Amount in, so we round up overall.\n    const previousNominalMain = _toNominal(mainBalance, params);\n    const afterNominalMain = _toNominal(mainBalance - mainOut, params);\n    const deltaNominalMain = previousNominalMain - afterNominalMain;\n    const invariant = _calcInvariantDown(\n        previousNominalMain,\n        wrappedBalance,\n        params\n    );\n    return MathSol.divUp(MathSol.mul(bptSupply, deltaNominalMain), invariant);\n}\n\nexport function _calcBptInPerWrappedOut(\n    wrappedOut: bigint,\n    mainBalance: bigint,\n    wrappedBalance: bigint,\n    bptSupply: bigint,\n    params: Params\n): bigint {\n    // Amount in, so we round up overall.\n    const nominalMain = _toNominal(mainBalance, params);\n    const previousInvariant = _calcInvariantUp(\n        nominalMain,\n        wrappedBalance,\n        params\n    );\n    const newWrappedBalance = wrappedBalance - wrappedOut;\n    const newInvariant = _calcInvariantDown(\n        nominalMain,\n        newWrappedBalance,\n        params\n    );\n    const newBptBalance = MathSol.divDown(\n        MathSol.mul(bptSupply, newInvariant),\n        previousInvariant\n    );\n    return bptSupply - newBptBalance;\n}\n\nexport function _calcWrappedOutPerMainIn(\n    mainIn: bigint,\n    mainBalance: bigint,\n    wrappedBalance: bigint,\n    bptSupply: bigint,\n    params: Params\n): bigint {\n    // Amount out, so we round down overall.\n    const previousNominalMain = _toNominal(mainBalance, params);\n    const afterNominalMain = _toNominal(mainBalance + mainIn, params);\n    const deltaNominalMain = afterNominalMain - previousNominalMain;\n    return MathSol.divDownFixed(deltaNominalMain, params.rate);\n}\n\nexport function _calcWrappedInPerMainOut(\n    mainOut: bigint,\n    mainBalance: bigint,\n    wrappedBalance: bigint,\n    bptSupply: bigint,\n    params: Params\n): bigint {\n    // Amount in, so we round up overall.\n    const previousNominalMain = _toNominal(mainBalance, params);\n    const afterNominalMain = _toNominal(mainBalance - mainOut, params);\n    const deltaNominalMain = previousNominalMain - afterNominalMain;\n    return MathSol.divUpFixed(deltaNominalMain, params.rate);\n}\n\nexport function _calcMainInPerBptOut(\n    bptOut: bigint,\n    mainBalance: bigint,\n    wrappedBalance: bigint,\n    bptSupply: bigint,\n    params: Params\n): bigint {\n    // Amount in, so we round up overall.\n    if (bptSupply == BigInt(0)) {\n        return _fromNominal(bptOut, params);\n    }\n    const previousNominalMain = _toNominal(mainBalance, params);\n    const invariant = _calcInvariantUp(\n        previousNominalMain,\n        wrappedBalance,\n        params\n    );\n    const deltaNominalMain = MathSol.divUp(\n        MathSol.mul(invariant, bptOut),\n        bptSupply\n    );\n    const afterNominalMain = previousNominalMain + deltaNominalMain;\n    const newMainBalance = _fromNominal(afterNominalMain, params);\n    return newMainBalance - mainBalance;\n}\n\nexport function _calcMainOutPerBptIn(\n    bptIn: bigint,\n    mainBalance: bigint,\n    wrappedBalance: bigint,\n    bptSupply: bigint,\n    params: Params\n): bigint {\n    // Amount out, so we round down overall.\n    const previousNominalMain = _toNominal(mainBalance, params);\n    const invariant = _calcInvariantDown(\n        previousNominalMain,\n        wrappedBalance,\n        params\n    );\n    const deltaNominalMain = MathSol.divDown(\n        MathSol.mul(invariant, bptIn),\n        bptSupply\n    );\n    const afterNominalMain = previousNominalMain - deltaNominalMain;\n    const newMainBalance = _fromNominal(afterNominalMain, params);\n    return mainBalance - newMainBalance;\n}\n\nexport function _calcMainOutPerWrappedIn(\n    wrappedIn: bigint,\n    mainBalance: bigint,\n    wrappedBalance: bigint,\n    bptSupply: bigint,\n    params: Params\n): bigint {\n    // Amount out, so we round down overall.\n    const previousNominalMain = _toNominal(mainBalance, params);\n    const deltaNominalMain = MathSol.mulDownFixed(wrappedIn, params.rate);\n    const afterNominalMain = previousNominalMain - deltaNominalMain;\n    const newMainBalance = _fromNominal(afterNominalMain, params);\n    return mainBalance - newMainBalance;\n}\n\nexport function _calcMainInPerWrappedOut(\n    wrappedOut: bigint,\n    mainBalance: bigint,\n    wrappedBalance: bigint,\n    bptSupply: bigint,\n    params: Params\n): bigint {\n    // Amount in, so we round up overall.\n    const previousNominalMain = _toNominal(mainBalance, params);\n    const deltaNominalMain = MathSol.mulUpFixed(wrappedOut, params.rate);\n    const afterNominalMain = previousNominalMain + deltaNominalMain;\n    const newMainBalance = _fromNominal(afterNominalMain, params);\n    return newMainBalance - mainBalance;\n}\n\nexport function _calcBptOutPerWrappedIn(\n    wrappedIn: bigint,\n    mainBalance: bigint,\n    wrappedBalance: bigint,\n    bptSupply: bigint,\n    params: Params\n): bigint {\n    // Amount out, so we round down overall.\n    if (bptSupply == BigInt(0)) {\n        // Return nominal DAI\n        return MathSol.mulDownFixed(wrappedIn, params.rate);\n    }\n\n    const nominalMain = _toNominal(mainBalance, params);\n    const previousInvariant = _calcInvariantUp(\n        nominalMain,\n        wrappedBalance,\n        params\n    );\n    const newWrappedBalance = wrappedBalance + wrappedIn;\n    const newInvariant = _calcInvariantDown(\n        nominalMain,\n        newWrappedBalance,\n        params\n    );\n    const newBptBalance = MathSol.divDown(\n        MathSol.mul(bptSupply, newInvariant),\n        previousInvariant\n    );\n    return newBptBalance - bptSupply;\n}\n\nexport function _calcWrappedInPerBptOut(\n    bptOut: bigint,\n    mainBalance: bigint,\n    wrappedBalance: bigint,\n    bptSupply: bigint,\n    params: Params\n): bigint {\n    // Amount in, so we round up overall.\n    if (bptSupply == BigInt(0)) {\n        // Return nominal DAI\n        return MathSol.divUpFixed(bptOut, params.rate);\n    }\n\n    const nominalMain = _toNominal(mainBalance, params);\n    const previousInvariant = _calcInvariantUp(\n        nominalMain,\n        wrappedBalance,\n        params\n    );\n    const newBptBalance = bptSupply + bptOut;\n    const newWrappedBalance = MathSol.divUpFixed(\n        MathSol.divUp(\n            MathSol.mul(newBptBalance, previousInvariant),\n            bptSupply\n        ) - nominalMain,\n        params.rate\n    );\n\n    return newWrappedBalance - wrappedBalance;\n}\n\nexport function _calcWrappedOutPerBptIn(\n    bptIn: bigint,\n    mainBalance: bigint,\n    wrappedBalance: bigint,\n    bptSupply: bigint,\n    params: Params\n): bigint {\n    // Amount out, so we round down overall.\n    const nominalMain = _toNominal(mainBalance, params);\n    const previousInvariant = _calcInvariantUp(\n        nominalMain,\n        wrappedBalance,\n        params\n    );\n    const newBptBalance = bptSupply - bptIn;\n    const newWrappedBalance = MathSol.divUpFixed(\n        MathSol.divUp(\n            MathSol.mul(newBptBalance, previousInvariant),\n            bptSupply\n        ) - nominalMain,\n        params.rate\n    );\n\n    return wrappedBalance - newWrappedBalance;\n}\n\nfunction _calcInvariantUp(\n    nominalMainBalance: bigint,\n    wrappedBalance: bigint,\n    params: Params\n): bigint {\n    return nominalMainBalance + MathSol.mulUpFixed(wrappedBalance, params.rate);\n}\n\nfunction _calcInvariantDown(\n    nominalMainBalance: bigint,\n    wrappedBalance: bigint,\n    params: Params\n): bigint {\n    return (\n        nominalMainBalance + MathSol.mulDownFixed(wrappedBalance, params.rate)\n    );\n}\n\nfunction _toNominal(real: bigint, params: Params): bigint {\n    // Fees are always rounded down: either direction would work but we need to be consistent, and rounding down\n    // uses less gas.\n    if (real < params.lowerTarget) {\n        const fees = MathSol.mulDownFixed(\n            params.lowerTarget - real,\n            params.fee\n        );\n        return MathSol.sub(real, fees);\n    } else if (real <= params.upperTarget) {\n        return real;\n    } else {\n        const fees = MathSol.mulDownFixed(\n            real - params.upperTarget,\n            params.fee\n        );\n        return MathSol.sub(real, fees);\n    }\n}\n\nfunction _fromNominal(nominal: bigint, params: Params): bigint {\n    // Since real = nominal + fees, rounding down fees is equivalent to rounding down real.\n    if (nominal < params.lowerTarget) {\n        return MathSol.divDownFixed(\n            nominal + MathSol.mulDownFixed(params.fee, params.lowerTarget),\n            MathSol.ONE + params.fee\n        );\n    } else if (nominal <= params.upperTarget) {\n        return nominal;\n    } else {\n        return MathSol.divDownFixed(\n            nominal - MathSol.mulDownFixed(params.fee, params.upperTarget),\n            MathSol.ONE - params.fee\n        );\n    }\n}\n\nfunction leftDerivativeToNominal(amount: bigint, params: Params): bigint {\n    const oneMinusFee = MathSol.complementFixed(params.fee);\n    const onePlusFee = MathSol.ONE + params.fee;\n    if (amount <= params.lowerTarget) {\n        return onePlusFee;\n    } else if (amount <= params.upperTarget) {\n        return MathSol.ONE;\n    } else {\n        return oneMinusFee;\n    }\n}\n\nfunction rightDerivativeToNominal(amount: bigint, params: Params): bigint {\n    const oneMinusFee = MathSol.complementFixed(params.fee);\n    const onePlusFee = MathSol.ONE + params.fee;\n    if (amount < params.lowerTarget) {\n        return onePlusFee;\n    } else if (amount < params.upperTarget) {\n        return MathSol.ONE;\n    } else {\n        return oneMinusFee;\n    }\n}\n\nfunction leftDerivativeFromNominal(amount: bigint, params: Params): bigint {\n    const oneMinusFee = MathSol.complementFixed(params.fee);\n    const onePlusFee = MathSol.ONE + params.fee;\n    if (amount <= params.lowerTarget) {\n        return MathSol.divUpFixed(MathSol.ONE, onePlusFee);\n    } else if (amount <= params.upperTarget) {\n        return MathSol.ONE;\n    } else {\n        return MathSol.divUpFixed(MathSol.ONE, oneMinusFee);\n    }\n}\n\nfunction rightDerivativeFromNominal(amount: bigint, params: Params): bigint {\n    const oneMinusFee = MathSol.complementFixed(params.fee);\n    const onePlusFee = MathSol.ONE + params.fee;\n    if (amount < params.lowerTarget) {\n        return MathSol.divUpFixed(MathSol.ONE, onePlusFee);\n    } else if (amount < params.upperTarget) {\n        return MathSol.ONE;\n    } else {\n        return MathSol.divUpFixed(MathSol.ONE, oneMinusFee);\n    }\n}\n\nexport function _calcTokensOutGivenExactBptIn(\n    balances: bigint[],\n    bptAmountIn: bigint,\n    bptTotalSupply: bigint,\n    bptIndex: number\n): bigint[] {\n    /**********************************************************************************************\n    // exactBPTInForTokensOut                                                                    //\n    // (per token)                                                                               //\n    // aO = tokenAmountOut             /        bptIn         \\                                  //\n    // b = tokenBalance      a0 = b * | ---------------------  |                                 //\n    // bptIn = bptAmountIn             \\     bptTotalSupply    /                                 //\n    // bpt = bptTotalSupply                                                                      //\n    **********************************************************************************************/\n\n    // Since we're computing an amount out, we round down overall. This means rounding down on both the\n    // multiplication and division.\n\n    const bptRatio = MathSol.divDownFixed(bptAmountIn, bptTotalSupply);\n    const amountsOut: bigint[] = new Array(balances.length).fill(BZERO);\n    for (let i = 0; i < balances.length; i++) {\n        // BPT is skipped as those tokens are not the LPs, but rather the preminted and undistributed amount.\n        if (i != bptIndex) {\n            amountsOut[i] = MathSol.mulDownFixed(balances[i], bptRatio);\n        }\n    }\n    return amountsOut;\n}\n\n/////////\n/// SpotPriceAfterSwap\n/////////\n\n// PairType = 'main->BPT'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapBptOutPerMainIn(\n    mainIn: bigint,\n    mainBalance: bigint,\n    wrappedBalance: bigint,\n    bptSupply: bigint,\n    params: Params\n): bigint {\n    const finalMainBalance = mainIn + mainBalance;\n    const previousNominalMain = _toNominal(mainBalance, params);\n    const invariant = _calcInvariantDown(\n        previousNominalMain,\n        wrappedBalance,\n        params\n    );\n    let poolFactor = MathSol.ONE;\n    if (bptSupply != BigInt(0)) {\n        poolFactor = MathSol.divUpFixed(invariant, bptSupply);\n    }\n    return MathSol.divUpFixed(\n        poolFactor,\n        rightDerivativeToNominal(finalMainBalance, params)\n    );\n}\n\n// PairType = 'main->BPT'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapMainInPerBptOut(\n    bptOut: bigint,\n    mainBalance: bigint,\n    wrappedBalance: bigint,\n    bptSupply: bigint,\n    params: Params\n): bigint {\n    const previousNominalMain = _toNominal(mainBalance, params);\n    const invariant = _calcInvariantDown(\n        previousNominalMain,\n        wrappedBalance,\n        params\n    );\n    let poolFactor = MathSol.ONE;\n    if (bptSupply != BigInt(0)) {\n        poolFactor = MathSol.divUpFixed(invariant, bptSupply);\n    }\n    const deltaNominalMain = MathSol.mulUpFixed(bptOut, poolFactor);\n    const afterNominalMain = previousNominalMain + deltaNominalMain;\n    return MathSol.mulUpFixed(\n        poolFactor,\n        rightDerivativeFromNominal(afterNominalMain, params)\n    );\n}\n\n// PairType = 'BPT->main'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapMainOutPerBptIn(\n    bptIn: bigint,\n    mainBalance: bigint,\n    wrappedBalance: bigint,\n    bptSupply: bigint,\n    params: Params\n): bigint {\n    const previousNominalMain = _toNominal(mainBalance, params);\n    const invariant = _calcInvariantDown(\n        previousNominalMain,\n        wrappedBalance,\n        params\n    );\n    const poolFactor = MathSol.divDownFixed(invariant, bptSupply);\n    const deltaNominalMain = MathSol.mulDownFixed(bptIn, poolFactor);\n    const afterNominalMain = MathSol.sub(previousNominalMain, deltaNominalMain);\n    return MathSol.divUpFixed(\n        MathSol.ONE,\n        MathSol.mulUpFixed(\n            poolFactor,\n            leftDerivativeFromNominal(afterNominalMain, params)\n        )\n    );\n}\n\n// PairType = 'BPT->main'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapBptInPerMainOut(\n    mainOut: bigint,\n    mainBalance: bigint,\n    wrappedBalance: bigint,\n    bptSupply: bigint,\n    params: Params\n): bigint {\n    const finalMainBalance = MathSol.sub(mainBalance, mainOut);\n    const previousNominalMain = _toNominal(mainBalance, params);\n    const invariant = _calcInvariantDown(\n        previousNominalMain,\n        wrappedBalance,\n        params\n    );\n    const poolFactor = MathSol.divUpFixed(invariant, bptSupply);\n    return MathSol.divUpFixed(\n        leftDerivativeToNominal(finalMainBalance, params),\n        poolFactor\n    );\n}\n\n// PairType = 'main->wrapped'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapMainInPerWrappedOut(\n    wrappedOut: bigint,\n    mainBalance: bigint,\n    wrappedBalance: bigint,\n    bptSupply: bigint,\n    params: Params\n): bigint {\n    const previousNominalMain = _toNominal(mainBalance, params);\n    const deltaNominalMain = MathSol.mulUpFixed(wrappedOut, params.rate);\n    const afterNominalMain = previousNominalMain + deltaNominalMain;\n    return MathSol.mulUpFixed(\n        rightDerivativeFromNominal(afterNominalMain, params),\n        params.rate\n    );\n}\n\n// PairType = 'wrapped->main'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapWrappedInPerMainOut(\n    mainOut: bigint,\n    mainBalance: bigint,\n    wrappedBalance: bigint,\n    bptSupply: bigint,\n    params: Params\n): bigint {\n    const afterMain = mainBalance - mainOut;\n    return MathSol.divUpFixed(\n        leftDerivativeToNominal(afterMain, params),\n        params.rate\n    );\n}\n\n// PairType = 'main->wrapped'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapWrappedOutPerMainIn(\n    mainIn: bigint,\n    mainBalance: bigint,\n    wrappedBalance: bigint,\n    bptSupply: bigint,\n    params: Params\n): bigint {\n    return MathSol.divDownFixed(\n        params.rate,\n        rightDerivativeToNominal(mainBalance + mainIn, params)\n    );\n}\n\n// PairType = 'wrapped->main'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapMainOutPerWrappedIn(\n    wrappedIn: bigint,\n    mainBalance: bigint,\n    wrappedBalance: bigint,\n    bptSupply: bigint,\n    params: Params\n): bigint {\n    const previousNominalMain = _toNominal(mainBalance, params);\n    const deltaNominalMain = MathSol.mulDownFixed(wrappedIn, params.rate);\n    const afterNominalMain = previousNominalMain - deltaNominalMain;\n    const inversePrice = MathSol.mulUpFixed(\n        leftDerivativeFromNominal(afterNominalMain, params),\n        params.rate\n    );\n    return MathSol.divUpFixed(MathSol.ONE, inversePrice);\n}\n\n// PairType = 'wrapped->BPT'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapBptOutPerWrappedIn(\n    wrappedIn: bigint,\n    mainBalance: bigint,\n    wrappedBalance: bigint,\n    bptSupply: bigint,\n    params: Params\n): bigint {\n    if (bptSupply == BigInt(0)) {\n        return params.rate;\n    }\n    const nominalMain = _toNominal(mainBalance, params);\n    const previousInvariant = _calcInvariantUp(\n        nominalMain,\n        wrappedBalance,\n        params\n    );\n    return MathSol.divUpFixed(\n        previousInvariant,\n        MathSol.mulUpFixed(bptSupply, params.rate)\n    );\n}\n\n// PairType = 'BPT->wrapped'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapWrappedOutPerBptIn(\n    bptIn: bigint,\n    mainBalance: bigint,\n    wrappedBalance: bigint,\n    bptSupply: bigint,\n    params: Params\n): bigint {\n    const nominalMain = _toNominal(mainBalance, params);\n    const previousInvariant = _calcInvariantUp(\n        nominalMain,\n        wrappedBalance,\n        params\n    );\n    return MathSol.divUp(\n        MathSol.mul(bptSupply, params.rate),\n        previousInvariant\n    );\n}\n\n// PairType = 'wrapped->BPT'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapWrappedInPerBptOut(\n    bptOut: bigint,\n    mainBalance: bigint,\n    wrappedBalance: bigint,\n    bptSupply: bigint,\n    params: Params\n): bigint {\n    if (bptSupply == BigInt(0)) {\n        return MathSol.divUpFixed(MathSol.ONE, params.rate);\n    }\n\n    const nominalMain = _toNominal(mainBalance, params);\n    const previousInvariant = _calcInvariantUp(\n        nominalMain,\n        wrappedBalance,\n        params\n    );\n    return MathSol.divUpFixed(\n        previousInvariant,\n        MathSol.mulUpFixed(bptSupply, params.rate)\n    );\n}\n\n// PairType = 'BPT->wrapped'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapBptInPerWrappedOut(\n    wrappedOut: bigint,\n    mainBalance: bigint,\n    wrappedBalance: bigint,\n    bptSupply: bigint,\n    params: Params\n): bigint {\n    const nominalMain = _toNominal(mainBalance, params);\n    const previousInvariant = _calcInvariantUp(\n        nominalMain,\n        wrappedBalance,\n        params\n    );\n    return MathSol.divDown(\n        MathSol.mul(bptSupply, params.rate),\n        previousInvariant\n    );\n}\n\n/////////\n///  Derivatives of spotPriceAfterSwap\n/////////\n\n// Derivative of spot price is always zero, except at the target break points,\n// where it is infinity in some sense. But we ignore this pathology, return zero\n// and expect good behaviour at the optimization algorithm.\n","import { BigNumber, parseFixed, formatFixed } from '@ethersproject/bignumber';\nimport { bnum, INFINITY, scale, ZERO } from '../../utils/bignumber';\nimport { BigNumber as OldBigNumber } from '../../utils/bignumber';\nimport { WeiPerEther as ONE, Zero } from '@ethersproject/constants';\nimport { isSameAddress } from '../../utils';\nimport {\n    PoolBase,\n    PoolTypes,\n    PoolPairBase,\n    SwapTypes,\n    SubgraphPoolBase,\n    SubgraphToken,\n} from '../../types';\nimport {\n    _calcBptOutPerMainIn,\n    _calcBptInPerWrappedOut,\n    _calcBptInPerMainOut,\n    _calcWrappedOutPerMainIn,\n    _calcWrappedInPerMainOut,\n    _calcMainInPerBptOut,\n    _calcMainOutPerBptIn,\n    _calcMainOutPerWrappedIn,\n    _calcMainInPerWrappedOut,\n    _calcBptOutPerWrappedIn,\n    _calcWrappedInPerBptOut,\n    _calcWrappedOutPerBptIn,\n    _spotPriceAfterSwapBptOutPerMainIn,\n    _spotPriceAfterSwapMainOutPerBptIn,\n    _spotPriceAfterSwapBptOutPerWrappedIn,\n    _spotPriceAfterSwapWrappedOutPerBptIn,\n    _spotPriceAfterSwapWrappedOutPerMainIn,\n    _spotPriceAfterSwapMainOutPerWrappedIn,\n    _spotPriceAfterSwapMainInPerBptOut,\n    _spotPriceAfterSwapBptInPerMainOut,\n    _spotPriceAfterSwapWrappedInPerBptOut,\n    _spotPriceAfterSwapBptInPerWrappedOut,\n    _spotPriceAfterSwapMainInPerWrappedOut,\n    _spotPriceAfterSwapWrappedInPerMainOut,\n} from './linearMath';\n\nexport enum PairTypes {\n    BptToMainToken,\n    MainTokenToBpt,\n    MainTokenToWrappedToken,\n    WrappedTokenToMainToken,\n    BptToWrappedToken,\n    WrappedTokenToBpt,\n}\n\ntype LinearPoolToken = Pick<\n    SubgraphToken,\n    'address' | 'balance' | 'decimals' | 'priceRate'\n>;\n\nexport type LinearPoolPairData = PoolPairBase & {\n    pairType: PairTypes;\n    wrappedBalance: OldBigNumber; // If main token is USDC then wrapped token is aUSDC (or a wrapped version of it)\n    wrappedBalanceScaled: BigNumber; // If main token is USDC then wrapped token is aUSDC (or a wrapped version of it)\n    wrappedDecimals: number;\n    rate: BigNumber; // PriceRate of wrapped token\n    lowerTarget: BigNumber; // Target determine the range where there are positive, zero or negative fees\n    upperTarget: BigNumber; // when the \"main token\" has a balance below lowerTarget, there are negative fees when adding main token\n    mainBalanceScaled: BigNumber; // Scaled are used for EVM/SDK maths\n    bptBalanceScaled: BigNumber;\n    virtualBptSupply: BigNumber;\n};\n\nexport class LinearPool implements PoolBase<LinearPoolPairData> {\n    poolType: PoolTypes = PoolTypes.Linear;\n    id: string;\n    address: string;\n    swapFee: BigNumber;\n    totalShares: BigNumber;\n    tokens: LinearPoolToken[];\n    tokensList: string[];\n\n    wrappedIndex: number;\n    wrappedDecimals: number;\n    mainIndex: number;\n    bptIndex: number;\n    lowerTarget: BigNumber;\n    upperTarget: BigNumber;\n    MAX_RATIO = parseFixed('10', 18); // Specific for Linear pool types\n    ALMOST_ONE = parseFixed('0.99', 18);\n    // Used for VirutalBpt and can be removed if SG is updated with VirtualBpt value\n    MAX_TOKEN_BALANCE = BigNumber.from('2').pow('112').sub('1');\n\n    static fromPool(pool: SubgraphPoolBase): LinearPool {\n        if (pool.mainIndex === undefined)\n            throw new Error('LinearPool missing mainIndex');\n        if (pool.wrappedIndex === undefined)\n            throw new Error('LinearPool missing wrappedIndex');\n        if (!pool.lowerTarget)\n            throw new Error('LinearPool missing lowerTarget');\n        if (!pool.upperTarget)\n            throw new Error('LinearPool missing upperTarget');\n        return new LinearPool(\n            pool.id,\n            pool.address,\n            pool.swapFee,\n            pool.totalShares,\n            pool.tokens,\n            pool.tokensList,\n            pool.mainIndex,\n            pool.wrappedIndex,\n            pool.lowerTarget,\n            pool.upperTarget\n        );\n    }\n\n    constructor(\n        id: string,\n        address: string,\n        swapFee: string,\n        totalShares: string,\n        tokens: LinearPoolToken[],\n        tokensList: string[],\n        mainIndex: number,\n        wrappedIndex: number,\n        lowerTarget: string,\n        upperTarget: string\n    ) {\n        this.id = id;\n        this.address = address;\n        this.swapFee = parseFixed(swapFee, 18);\n        this.totalShares = parseFixed(totalShares, 18);\n        this.tokens = tokens;\n        this.tokensList = tokensList;\n        this.mainIndex = mainIndex;\n        this.bptIndex = this.tokensList.indexOf(this.address);\n        this.wrappedIndex = wrappedIndex;\n        this.wrappedDecimals = this.tokens[this.wrappedIndex].decimals;\n        this.lowerTarget = parseFixed(lowerTarget, 18); // Wrapped token will have same decimals as underlying\n        this.upperTarget = parseFixed(upperTarget, 18);\n    }\n\n    parsePoolPairData(tokenIn: string, tokenOut: string): LinearPoolPairData {\n        let pairType: PairTypes;\n\n        const tI = this.tokens.find((t) => isSameAddress(t.address, tokenIn));\n        if (!tI) throw Error(`Pool does not contain token in ${tokenIn}`);\n        const decimalsIn = tI.decimals;\n        const balanceIn = parseFixed(tI.balance, decimalsIn);\n\n        const tO = this.tokens.find((t) => isSameAddress(t.address, tokenOut));\n        if (!tO) throw Error(`Pool does not contain token out ${tokenOut}`);\n        const decimalsOut = tO.decimals;\n        const balanceOut = parseFixed(tO.balance, decimalsOut);\n\n        // Linear pools allow trading between token and pool BPT (phantom BPT)\n        if (isSameAddress(tokenIn, this.address)) {\n            if (isSameAddress(tokenOut, this.tokens[this.wrappedIndex].address))\n                pairType = PairTypes.BptToWrappedToken;\n            else pairType = PairTypes.BptToMainToken;\n        } else if (isSameAddress(tokenOut, this.address)) {\n            if (isSameAddress(tokenIn, this.tokens[this.wrappedIndex].address))\n                pairType = PairTypes.WrappedTokenToBpt;\n            else pairType = PairTypes.MainTokenToBpt;\n        } else {\n            if (isSameAddress(tokenIn, this.tokens[this.wrappedIndex].address))\n                pairType = PairTypes.WrappedTokenToMainToken;\n            else pairType = PairTypes.MainTokenToWrappedToken;\n        }\n\n        // Get all token balances scaled to 18\n        const allBalancesScaled = this.tokens.map(({ balance }) =>\n            parseFixed(balance, 18)\n        );\n        // https://github.com/balancer-labs/balancer-v2-monorepo/blob/88a14eb623f6a22ef3f1afc5a8c49ebfa7eeceed/pkg/pool-linear/contracts/LinearPool.sol#L247\n        // VirtualBPTSupply must be used for the maths\n        // TO DO - SG should be updated to so that totalShares should return VirtualSupply\n        const bptBalanceScaled = allBalancesScaled[this.bptIndex];\n        const virtualBptSupply = this.MAX_TOKEN_BALANCE.sub(bptBalanceScaled);\n\n        const poolPairData: LinearPoolPairData = {\n            id: this.id,\n            address: this.address,\n            poolType: this.poolType,\n            pairType: pairType,\n            tokenIn: tokenIn,\n            tokenOut: tokenOut,\n            decimalsIn: Number(decimalsIn),\n            decimalsOut: Number(decimalsOut),\n            balanceIn: balanceIn,\n            balanceOut: balanceOut,\n            swapFee: this.swapFee,\n            wrappedBalance: scale(\n                bnum(this.tokens[this.wrappedIndex].balance),\n                this.wrappedDecimals\n            ),\n            wrappedBalanceScaled: allBalancesScaled[this.wrappedIndex], // Note this is not multiplied by rate\n            wrappedDecimals: this.wrappedDecimals,\n            rate: parseFixed(this.tokens[this.wrappedIndex].priceRate, 18),\n            lowerTarget: this.lowerTarget,\n            upperTarget: this.upperTarget,\n            mainBalanceScaled: allBalancesScaled[this.mainIndex],\n            bptBalanceScaled,\n            virtualBptSupply,\n        };\n\n        return poolPairData;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    getNormalizedLiquidity(poolPairData: LinearPoolPairData): OldBigNumber {\n        return INFINITY; // It is the inverse of zero\n        // This is correct since linear pools have no price impact,\n        // except for the swap fee that is expected to be small.\n    }\n\n    getLimitAmountSwap(\n        poolPairData: LinearPoolPairData,\n        swapType: SwapTypes\n    ): OldBigNumber {\n        // Needs to return human scaled numbers\n        const linearPoolPairData = poolPairData as LinearPoolPairData;\n        const balanceOutHuman = scale(\n            bnum(poolPairData.balanceOut.toString()),\n            -poolPairData.decimalsOut\n        );\n\n        if (swapType === SwapTypes.SwapExactIn) {\n            if (linearPoolPairData.pairType === PairTypes.MainTokenToBpt) {\n                return this._mainTokenInForExactBPTOut(\n                    poolPairData,\n                    balanceOutHuman\n                        .times(this.ALMOST_ONE.toString())\n                        .div(ONE.toString())\n                );\n            } else if (\n                linearPoolPairData.pairType === PairTypes.WrappedTokenToBpt\n            ) {\n                // Swapping to BPT allows for a very large amount so using pre-minted amount as estimation\n                return scale(bnum(this.MAX_TOKEN_BALANCE.toString()), -18);\n            } else if (\n                linearPoolPairData.pairType === PairTypes.BptToMainToken\n            ) {\n                // Limit is amount of BPT in for pool balance of tokenOut\n                // Amount must be in human scale\n                return this._BPTInForExactMainTokenOut(\n                    linearPoolPairData,\n                    balanceOutHuman\n                        .times(this.ALMOST_ONE.toString())\n                        .div(ONE.toString())\n                );\n            } else if (\n                linearPoolPairData.pairType === PairTypes.BptToWrappedToken\n            ) {\n                const limit = this._BPTInForExactWrappedTokenOut(\n                    poolPairData,\n                    balanceOutHuman\n                        .times(this.ALMOST_ONE.toString())\n                        .div(ONE.toString())\n                );\n                // Returning Human scale\n                return limit;\n            } else if (\n                linearPoolPairData.pairType ===\n                    PairTypes.MainTokenToWrappedToken ||\n                linearPoolPairData.pairType ===\n                    PairTypes.WrappedTokenToMainToken\n            ) {\n                const limit = bnum(\n                    poolPairData.balanceOut\n                        .mul(this.ALMOST_ONE)\n                        .div(ONE)\n                        .toString()\n                );\n                return scale(limit, -poolPairData.decimalsOut);\n            } else return bnum(0);\n        } else {\n            if (\n                linearPoolPairData.pairType === PairTypes.MainTokenToBpt ||\n                linearPoolPairData.pairType === PairTypes.WrappedTokenToBpt\n            ) {\n                const limit = bnum(\n                    poolPairData.balanceOut\n                        .mul(this.MAX_RATIO)\n                        .div(ONE)\n                        .toString()\n                );\n                return scale(limit, -poolPairData.decimalsOut);\n            } else if (\n                linearPoolPairData.pairType === PairTypes.BptToMainToken ||\n                linearPoolPairData.pairType === PairTypes.BptToWrappedToken ||\n                linearPoolPairData.pairType ===\n                    PairTypes.MainTokenToWrappedToken ||\n                linearPoolPairData.pairType ===\n                    PairTypes.WrappedTokenToMainToken\n            ) {\n                const limit = bnum(\n                    poolPairData.balanceOut\n                        .mul(this.ALMOST_ONE)\n                        .div(ONE)\n                        .toString()\n                );\n                return scale(limit, -poolPairData.decimalsOut);\n            } else return bnum(0);\n        }\n    }\n\n    // Updates the balance of a given token for the pool\n    updateTokenBalanceForPool(token: string, newBalance: BigNumber): void {\n        // token is underlying in the pool\n        const T = this.tokens.find((t) => isSameAddress(t.address, token));\n        if (!T) throw Error('Pool does not contain this token');\n\n        // update total shares with BPT balance diff\n        if (isSameAddress(this.address, token)) {\n            const parsedTokenBalance = parseFixed(T.balance, T.decimals);\n            const diff = parsedTokenBalance.sub(newBalance);\n            const newTotalShares = this.totalShares.add(diff);\n            this.updateTotalShares(newTotalShares);\n        }\n        // update token balance with new balance\n        T.balance = formatFixed(newBalance, T.decimals);\n    }\n\n    updateTotalShares(newTotalShares: BigNumber): void {\n        this.totalShares = newTotalShares;\n    }\n\n    _exactTokenInForTokenOut(\n        poolPairData: LinearPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        if (poolPairData.pairType === PairTypes.MainTokenToBpt) {\n            return this._exactMainTokenInForBPTOut(poolPairData, amount);\n        } else if (poolPairData.pairType === PairTypes.BptToMainToken) {\n            return this._exactBPTInForMainTokenOut(poolPairData, amount);\n        } else if (poolPairData.pairType === PairTypes.WrappedTokenToBpt) {\n            return this._exactWrappedTokenInForBPTOut(poolPairData, amount);\n        } else if (poolPairData.pairType === PairTypes.BptToWrappedToken) {\n            return this._exactBPTInForWrappedTokenOut(poolPairData, amount);\n        } else if (\n            poolPairData.pairType === PairTypes.MainTokenToWrappedToken\n        ) {\n            return this._exactMainTokenInForWrappedOut(poolPairData, amount);\n        } else if (\n            poolPairData.pairType === PairTypes.WrappedTokenToMainToken\n        ) {\n            return this._exactWrappedTokenInForMainOut(poolPairData, amount);\n        } else return bnum(0);\n    }\n\n    _exactWrappedTokenInForMainOut(\n        poolPairData: LinearPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            const amtScaled = parseFixed(amount.toString(), 18);\n\n            const amt = _calcMainOutPerWrappedIn(\n                amtScaled.toBigInt(),\n                poolPairData.mainBalanceScaled.toBigInt(),\n                poolPairData.wrappedBalanceScaled.toBigInt(),\n                poolPairData.virtualBptSupply.toBigInt(),\n                {\n                    fee: poolPairData.swapFee.toBigInt(),\n                    lowerTarget: poolPairData.lowerTarget.toBigInt(),\n                    upperTarget: poolPairData.upperTarget.toBigInt(),\n                    rate: poolPairData.rate.toBigInt(),\n                }\n            );\n            // return human readable number\n            // Using BigNumber.js decimalPlaces (dp), allows us to consider token decimal accuracy correctly,\n            // i.e. when using token with 2decimals 0.002 should be returned as 0\n            // Uses ROUND_DOWN mode (1)\n            return scale(bnum(amt.toString()), -18).dp(\n                poolPairData.decimalsOut,\n                1\n            );\n        } catch (err) {\n            return ZERO;\n        }\n    }\n\n    _exactMainTokenInForWrappedOut(\n        poolPairData: LinearPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            const amtScaled = parseFixed(amount.toString(), 18);\n\n            const amt = _calcWrappedOutPerMainIn(\n                amtScaled.toBigInt(),\n                poolPairData.mainBalanceScaled.toBigInt(),\n                poolPairData.wrappedBalanceScaled.toBigInt(),\n                poolPairData.virtualBptSupply.toBigInt(),\n                {\n                    fee: poolPairData.swapFee.toBigInt(),\n                    lowerTarget: poolPairData.lowerTarget.toBigInt(),\n                    upperTarget: poolPairData.upperTarget.toBigInt(),\n                    rate: poolPairData.rate.toBigInt(),\n                }\n            );\n            // return human readable number\n            // Using BigNumber.js decimalPlaces (dp), allows us to consider token decimal accuracy correctly,\n            // i.e. when using token with 2decimals 0.002 should be returned as 0\n            // Uses ROUND_DOWN mode (1)\n            return scale(bnum(amt.toString()), -18).dp(\n                poolPairData.decimalsOut,\n                1\n            );\n        } catch (err) {\n            return ZERO;\n        }\n    }\n\n    _exactMainTokenInForBPTOut(\n        poolPairData: LinearPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            const amtScaled = parseFixed(amount.toString(), 18);\n\n            const amt = _calcBptOutPerMainIn(\n                amtScaled.toBigInt(),\n                poolPairData.mainBalanceScaled.toBigInt(),\n                poolPairData.wrappedBalanceScaled.toBigInt(),\n                poolPairData.virtualBptSupply.toBigInt(),\n                {\n                    fee: poolPairData.swapFee.toBigInt(),\n                    lowerTarget: poolPairData.lowerTarget.toBigInt(),\n                    upperTarget: poolPairData.upperTarget.toBigInt(),\n                    rate: poolPairData.rate.toBigInt(),\n                }\n            );\n            // return human readable number\n            // Using BigNumber.js decimalPlaces (dp), allows us to consider token decimal accuracy correctly,\n            // i.e. when using token with 2decimals 0.002 should be returned as 0\n            // Uses ROUND_DOWN mode (1)\n            return scale(bnum(amt.toString()), -18).dp(\n                poolPairData.decimalsOut,\n                1\n            );\n        } catch (err) {\n            return ZERO;\n        }\n    }\n\n    _exactBPTInForMainTokenOut(\n        poolPairData: LinearPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            const amtScaled = parseFixed(amount.toString(), 18);\n\n            const amt = _calcMainOutPerBptIn(\n                amtScaled.toBigInt(),\n                poolPairData.mainBalanceScaled.toBigInt(),\n                poolPairData.wrappedBalanceScaled.toBigInt(),\n                poolPairData.virtualBptSupply.toBigInt(),\n                {\n                    fee: poolPairData.swapFee.toBigInt(),\n                    lowerTarget: poolPairData.lowerTarget.toBigInt(),\n                    upperTarget: poolPairData.upperTarget.toBigInt(),\n                    rate: poolPairData.rate.toBigInt(),\n                }\n            );\n            // return human readable number\n            // Using BigNumber.js decimalPlaces (dp), allows us to consider token decimal accuracy correctly,\n            // i.e. when using token with 2decimals 0.002 should be returned as 0\n            // Uses ROUND_DOWN mode (1)\n            return scale(bnum(amt.toString()), -18).dp(\n                poolPairData.decimalsOut,\n                1\n            );\n        } catch (err) {\n            return ZERO;\n        }\n    }\n\n    _exactWrappedTokenInForBPTOut(\n        poolPairData: LinearPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            const amt = _calcBptOutPerWrappedIn(\n                parseFixed(amount.toString(), 18).toBigInt(),\n                poolPairData.mainBalanceScaled.toBigInt(),\n                poolPairData.wrappedBalanceScaled.toBigInt(),\n                poolPairData.virtualBptSupply.toBigInt(),\n                {\n                    fee: poolPairData.swapFee.toBigInt(),\n                    lowerTarget: poolPairData.lowerTarget.toBigInt(),\n                    upperTarget: poolPairData.upperTarget.toBigInt(),\n                    rate: poolPairData.rate.toBigInt(),\n                }\n            );\n            // Using BigNumber.js decimalPlaces (dp), allows us to consider token decimal accuracy correctly,\n            // i.e. when using token with 2decimals 0.002 should be returned as 0\n            // Uses ROUND_DOWN mode (1)\n            return scale(bnum(amt.toString()), -18).dp(\n                poolPairData.decimalsOut,\n                1\n            );\n        } catch (err) {\n            return ZERO;\n        }\n    }\n\n    _exactBPTInForWrappedTokenOut(\n        poolPairData: LinearPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            const amtScaled = parseFixed(amount.toString(), 18);\n\n            const amt = _calcWrappedOutPerBptIn(\n                amtScaled.toBigInt(),\n                poolPairData.mainBalanceScaled.toBigInt(),\n                poolPairData.wrappedBalanceScaled.toBigInt(),\n                poolPairData.virtualBptSupply.toBigInt(),\n                {\n                    fee: poolPairData.swapFee.toBigInt(),\n                    lowerTarget: poolPairData.lowerTarget.toBigInt(),\n                    upperTarget: poolPairData.upperTarget.toBigInt(),\n                    rate: poolPairData.rate.toBigInt(),\n                }\n            );\n            // return human readable number\n            // Using BigNumber.js decimalPlaces (dp), allows us to consider token decimal accuracy correctly,\n            // i.e. when using token with 2decimals 0.002 should be returned as 0\n            // Uses ROUND_DOWN mode (1)\n            return scale(bnum(amt.toString()), -18).dp(\n                poolPairData.decimalsOut,\n                1\n            );\n        } catch (err) {\n            return ZERO;\n        }\n    }\n\n    _tokenInForExactTokenOut(\n        poolPairData: LinearPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        if (poolPairData.pairType === PairTypes.MainTokenToBpt) {\n            return this._mainTokenInForExactBPTOut(poolPairData, amount);\n        } else if (poolPairData.pairType === PairTypes.BptToMainToken) {\n            return this._BPTInForExactMainTokenOut(poolPairData, amount);\n        } else if (poolPairData.pairType === PairTypes.WrappedTokenToBpt) {\n            return this._wrappedTokenInForExactBPTOut(poolPairData, amount);\n        } else if (poolPairData.pairType === PairTypes.BptToWrappedToken) {\n            return this._BPTInForExactWrappedTokenOut(poolPairData, amount);\n        } else if (\n            poolPairData.pairType === PairTypes.MainTokenToWrappedToken\n        ) {\n            return this._mainTokenInForExactWrappedOut(poolPairData, amount);\n        } else if (\n            poolPairData.pairType === PairTypes.WrappedTokenToMainToken\n        ) {\n            return this._wrappedTokenInForExactMainOut(poolPairData, amount);\n        } else return bnum(0); // LinearPool does not support TokenToToken\n    }\n\n    _wrappedTokenInForExactMainOut(\n        poolPairData: LinearPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            const amtScaled = parseFixed(amount.toString(), 18);\n\n            const amt = _calcWrappedInPerMainOut(\n                amtScaled.toBigInt(),\n                poolPairData.mainBalanceScaled.toBigInt(),\n                poolPairData.wrappedBalanceScaled.toBigInt(),\n                poolPairData.virtualBptSupply.toBigInt(),\n                {\n                    fee: poolPairData.swapFee.toBigInt(),\n                    lowerTarget: poolPairData.lowerTarget.toBigInt(),\n                    upperTarget: poolPairData.upperTarget.toBigInt(),\n                    rate: poolPairData.rate.toBigInt(),\n                }\n            );\n            // return human readable number\n            // Using BigNumber.js decimalPlaces (dp), allows us to consider token decimal accuracy correctly,\n            // i.e. when using token with 2decimals 0.002 should be returned as 0\n            // Uses ROUND_DOWN mode (1)\n            return scale(bnum(amt.toString()), -18).dp(\n                poolPairData.decimalsOut,\n                1\n            );\n        } catch (err) {\n            return ZERO;\n        }\n    }\n\n    _mainTokenInForExactWrappedOut(\n        poolPairData: LinearPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            const amtScaled = parseFixed(amount.toString(), 18);\n\n            const amt = _calcMainInPerWrappedOut(\n                amtScaled.toBigInt(),\n                poolPairData.mainBalanceScaled.toBigInt(),\n                poolPairData.wrappedBalanceScaled.toBigInt(),\n                poolPairData.virtualBptSupply.toBigInt(),\n                {\n                    fee: poolPairData.swapFee.toBigInt(),\n                    lowerTarget: poolPairData.lowerTarget.toBigInt(),\n                    upperTarget: poolPairData.upperTarget.toBigInt(),\n                    rate: poolPairData.rate.toBigInt(),\n                }\n            );\n            // return human readable number\n            // Using BigNumber.js decimalPlaces (dp), allows us to consider token decimal accuracy correctly,\n            // i.e. when using token with 2decimals 0.002 should be returned as 0\n            // Uses ROUND_DOWN mode (1)\n            return scale(bnum(amt.toString()), -18).dp(\n                poolPairData.decimalsOut,\n                1\n            );\n        } catch (err) {\n            return ZERO;\n        }\n    }\n\n    _mainTokenInForExactBPTOut(\n        poolPairData: LinearPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            const amtScaled = parseFixed(amount.toString(), 18);\n            // in = main\n            // out = BPT\n            const amt = _calcMainInPerBptOut(\n                amtScaled.toBigInt(),\n                poolPairData.mainBalanceScaled.toBigInt(),\n                poolPairData.wrappedBalanceScaled.toBigInt(),\n                poolPairData.virtualBptSupply.toBigInt(),\n                {\n                    fee: poolPairData.swapFee.toBigInt(),\n                    lowerTarget: poolPairData.lowerTarget.toBigInt(),\n                    upperTarget: poolPairData.upperTarget.toBigInt(),\n                    rate: poolPairData.rate.toBigInt(),\n                }\n            );\n            // return human readable number\n            // Using BigNumber.js decimalPlaces (dp), allows us to consider token decimal accuracy correctly,\n            // i.e. when using token with 2decimals 0.002 should be returned as 0\n            // Uses ROUND_UP mode (0)\n            return scale(bnum(amt.toString()), -18).dp(\n                poolPairData.decimalsIn,\n                0\n            );\n        } catch (err) {\n            return ZERO;\n        }\n    }\n\n    _BPTInForExactMainTokenOut(\n        poolPairData: LinearPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            const amtScaled = parseFixed(amount.toString(), 18);\n\n            const amt = _calcBptInPerMainOut(\n                amtScaled.toBigInt(),\n                poolPairData.mainBalanceScaled.toBigInt(),\n                poolPairData.wrappedBalanceScaled.toBigInt(),\n                poolPairData.virtualBptSupply.toBigInt(),\n                {\n                    fee: poolPairData.swapFee.toBigInt(),\n                    lowerTarget: poolPairData.lowerTarget.toBigInt(),\n                    upperTarget: poolPairData.upperTarget.toBigInt(),\n                    rate: poolPairData.rate.toBigInt(),\n                }\n            );\n            // return human readable number\n            // Using BigNumber.js decimalPlaces (dp), allows us to consider token decimal accuracy correctly,\n            // i.e. when using token with 2decimals 0.002 should be returned as 0\n            // Uses ROUND_UP mode (0)\n            return scale(bnum(amt.toString()), -18).dp(\n                poolPairData.decimalsIn,\n                0\n            );\n        } catch (err) {\n            return ZERO;\n        }\n    }\n\n    _wrappedTokenInForExactBPTOut(\n        poolPairData: LinearPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            const amtScaled = parseFixed(amount.toString(), 18);\n\n            const amt = _calcWrappedInPerBptOut(\n                amtScaled.toBigInt(),\n                poolPairData.mainBalanceScaled.toBigInt(),\n                poolPairData.wrappedBalanceScaled.toBigInt(),\n                poolPairData.virtualBptSupply.toBigInt(),\n                {\n                    fee: poolPairData.swapFee.toBigInt(),\n                    lowerTarget: poolPairData.lowerTarget.toBigInt(),\n                    upperTarget: poolPairData.upperTarget.toBigInt(),\n                    rate: poolPairData.rate.toBigInt(),\n                }\n            );\n            // return human readable number\n            // Using BigNumber.js decimalPlaces (dp), allows us to consider token decimal accuracy correctly,\n            // i.e. when using token with 2decimals 0.002 should be returned as 0\n            // Uses ROUND_UP mode (0)\n            return scale(bnum(amt.toString()), -18).dp(\n                poolPairData.decimalsIn,\n                0\n            );\n        } catch (err) {\n            return ZERO;\n        }\n    }\n\n    _BPTInForExactWrappedTokenOut(\n        poolPairData: LinearPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            const amt = _calcBptInPerWrappedOut(\n                // amtNoRate.toBigInt(),\n                parseFixed(amount.toString(), 18).toBigInt(),\n                poolPairData.mainBalanceScaled.toBigInt(),\n                poolPairData.wrappedBalanceScaled.toBigInt(),\n                poolPairData.virtualBptSupply.toBigInt(),\n                {\n                    fee: poolPairData.swapFee.toBigInt(),\n                    lowerTarget: poolPairData.lowerTarget.toBigInt(),\n                    upperTarget: poolPairData.upperTarget.toBigInt(),\n                    rate: poolPairData.rate.toBigInt(),\n                }\n            );\n            // return human readable number\n            // Using BigNumber.js decimalPlaces (dp), allows us to consider token decimal accuracy correctly,\n            // i.e. when using token with 2decimals 0.002 should be returned as 0\n            // Uses ROUND_UP mode (0)\n            return scale(bnum(amt.toString()), -18).dp(\n                poolPairData.decimalsIn,\n                0\n            );\n        } catch (err) {\n            return ZERO;\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _calcTokensOutGivenExactBptIn(bptAmountIn: BigNumber): BigNumber[] {\n        // Linear Pool doesn't have Exit Pool implementation\n        return new Array(this.tokens.length).fill(Zero);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _calcBptOutGivenExactTokensIn(amountsIn: BigNumber[]): BigNumber {\n        // Linear Pool doesn't have Join Pool implementation\n        return Zero;\n    }\n\n    // SPOT PRICES AFTER SWAP\n\n    _spotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: LinearPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            const bigintAmount = parseFixed(\n                amount.dp(18).toString(),\n                18\n            ).toBigInt();\n            const mainBalance = poolPairData.mainBalanceScaled.toBigInt();\n            const wrappedBalance = poolPairData.wrappedBalanceScaled.toBigInt();\n            const bptSupply = poolPairData.virtualBptSupply.toBigInt();\n            const params = {\n                fee: poolPairData.swapFee.toBigInt(),\n                lowerTarget: poolPairData.lowerTarget.toBigInt(),\n                upperTarget: poolPairData.upperTarget.toBigInt(),\n                rate: poolPairData.rate.toBigInt(),\n            };\n            let result: bigint;\n            if (poolPairData.pairType === PairTypes.MainTokenToBpt) {\n                result = _spotPriceAfterSwapBptOutPerMainIn(\n                    bigintAmount,\n                    mainBalance,\n                    wrappedBalance,\n                    bptSupply,\n                    params\n                );\n            } else if (poolPairData.pairType === PairTypes.BptToMainToken) {\n                result = _spotPriceAfterSwapMainOutPerBptIn(\n                    bigintAmount,\n                    mainBalance,\n                    wrappedBalance,\n                    bptSupply,\n                    params\n                );\n            } else if (poolPairData.pairType === PairTypes.WrappedTokenToBpt) {\n                result = _spotPriceAfterSwapBptOutPerWrappedIn(\n                    bigintAmount,\n                    mainBalance,\n                    wrappedBalance,\n                    bptSupply,\n                    params\n                );\n            } else if (poolPairData.pairType === PairTypes.BptToWrappedToken) {\n                result = _spotPriceAfterSwapWrappedOutPerBptIn(\n                    bigintAmount,\n                    mainBalance,\n                    wrappedBalance,\n                    bptSupply,\n                    params\n                );\n            } else if (\n                poolPairData.pairType === PairTypes.MainTokenToWrappedToken\n            ) {\n                result = _spotPriceAfterSwapWrappedOutPerMainIn(\n                    bigintAmount,\n                    mainBalance,\n                    wrappedBalance,\n                    bptSupply,\n                    params\n                );\n            } else if (\n                poolPairData.pairType === PairTypes.WrappedTokenToMainToken\n            ) {\n                result = _spotPriceAfterSwapMainOutPerWrappedIn(\n                    bigintAmount,\n                    mainBalance,\n                    wrappedBalance,\n                    bptSupply,\n                    params\n                );\n            } else return bnum(0);\n            return scale(bnum(result.toString()), -18).dp(\n                poolPairData.decimalsOut,\n                0\n            );\n        } catch (err) {\n            return bnum(0);\n        }\n    }\n\n    _spotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: LinearPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            const bigintAmount = parseFixed(\n                amount.dp(18).toString(),\n                18\n            ).toBigInt();\n            const mainBalance = poolPairData.mainBalanceScaled.toBigInt();\n            const wrappedBalance = poolPairData.wrappedBalanceScaled.toBigInt();\n            const bptSupply = poolPairData.virtualBptSupply.toBigInt();\n            const params = {\n                fee: poolPairData.swapFee.toBigInt(),\n                lowerTarget: poolPairData.lowerTarget.toBigInt(),\n                upperTarget: poolPairData.upperTarget.toBigInt(),\n                rate: poolPairData.rate.toBigInt(),\n            };\n            let result: bigint;\n            if (poolPairData.pairType === PairTypes.MainTokenToBpt) {\n                result = _spotPriceAfterSwapMainInPerBptOut(\n                    bigintAmount,\n                    mainBalance,\n                    wrappedBalance,\n                    bptSupply,\n                    params\n                );\n            } else if (poolPairData.pairType === PairTypes.BptToMainToken) {\n                result = _spotPriceAfterSwapBptInPerMainOut(\n                    bigintAmount,\n                    mainBalance,\n                    wrappedBalance,\n                    bptSupply,\n                    params\n                );\n            } else if (poolPairData.pairType === PairTypes.WrappedTokenToBpt) {\n                result = _spotPriceAfterSwapWrappedInPerBptOut(\n                    bigintAmount,\n                    mainBalance,\n                    wrappedBalance,\n                    bptSupply,\n                    params\n                );\n            } else if (poolPairData.pairType === PairTypes.BptToWrappedToken) {\n                result = _spotPriceAfterSwapBptInPerWrappedOut(\n                    bigintAmount,\n                    mainBalance,\n                    wrappedBalance,\n                    bptSupply,\n                    params\n                );\n            } else if (\n                poolPairData.pairType === PairTypes.MainTokenToWrappedToken\n            ) {\n                result = _spotPriceAfterSwapMainInPerWrappedOut(\n                    bigintAmount,\n                    mainBalance,\n                    wrappedBalance,\n                    bptSupply,\n                    params\n                );\n            } else if (\n                poolPairData.pairType === PairTypes.WrappedTokenToMainToken\n            ) {\n                result = _spotPriceAfterSwapWrappedInPerMainOut(\n                    bigintAmount,\n                    mainBalance,\n                    wrappedBalance,\n                    bptSupply,\n                    params\n                );\n            } else return bnum(0);\n            return scale(bnum(result.toString()), -18).dp(\n                poolPairData.decimalsOut,\n                0\n            );\n        } catch (err) {\n            return bnum(0);\n        }\n    }\n\n    _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        poolPairData: LinearPoolPairData,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        amount: OldBigNumber\n    ): OldBigNumber {\n        return bnum(0);\n    }\n\n    _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        poolPairData: LinearPoolPairData,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        amount: OldBigNumber\n    ): OldBigNumber {\n        return bnum(0);\n    }\n}\n","import { formatFixed } from '@ethersproject/bignumber';\nimport { BigNumber as OldBigNumber, bnum } from '../../utils/bignumber';\nimport { ElementPoolPairData } from './elementPool';\n\n// calc_out_given_in (swap)\nexport function _exactTokenInForTokenOut(\n    amount: OldBigNumber,\n    poolPairData: ElementPoolPairData\n): OldBigNumber {\n    // The formula below returns some dust (due to rounding errors) but when\n    // we input zero the output should be zero\n    if (amount.isZero()) return amount;\n    const f = parseFloat(formatFixed(poolPairData.swapFee, 18));\n    const Bi = parseFloat(\n        formatFixed(poolPairData.balanceIn, poolPairData.decimalsIn)\n    );\n    const Bo = parseFloat(\n        formatFixed(poolPairData.balanceOut, poolPairData.decimalsOut)\n    );\n    const t = getTimeTillExpiry(\n        poolPairData.expiryTime,\n        poolPairData.currentBlockTimestamp,\n        poolPairData.unitSeconds\n    );\n    const Ai = amount.toNumber();\n    return bnum(\n        Bo -\n            (Bi ** (1 - t) - (Ai + Bi) ** (1 - t) + Bo ** (1 - t)) **\n                (1 / (1 - t)) -\n            Math.abs(\n                Ai -\n                    Bo +\n                    (Bi ** (1 - t) - (Ai + Bi) ** (1 - t) + Bo ** (1 - t)) **\n                        (1 / (1 - t))\n            ) *\n                f\n    );\n}\n\n// calc_in_given_out (swap)\nexport function _tokenInForExactTokenOut(\n    amount: OldBigNumber,\n    poolPairData: ElementPoolPairData\n): OldBigNumber {\n    // The formula below returns some dust (due to rounding errors) but when\n    // we input zero the output should be zero\n    if (amount.isZero()) return amount;\n    const f = parseFloat(formatFixed(poolPairData.swapFee, 18));\n    const Bi = parseFloat(\n        formatFixed(poolPairData.balanceIn, poolPairData.decimalsIn)\n    );\n    const Bo = parseFloat(\n        formatFixed(poolPairData.balanceOut, poolPairData.decimalsOut)\n    );\n    const t = getTimeTillExpiry(\n        poolPairData.expiryTime,\n        poolPairData.currentBlockTimestamp,\n        poolPairData.unitSeconds\n    );\n    const Ao = amount.toNumber();\n    return bnum(\n        -Bi +\n            (Bi ** (1 - t) + Bo ** (1 - t) - (-Ao + Bo) ** (1 - t)) **\n                (1 / (1 - t)) +\n            Math.abs(\n                -Ao -\n                    Bi +\n                    (Bi ** (1 - t) + Bo ** (1 - t) - (-Ao + Bo) ** (1 - t)) **\n                        (1 / (1 - t))\n            ) *\n                f\n    );\n}\n\n/////////\n/// SpotPriceAfterSwap\n/////////\n\n// PairType = 'token->token'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapExactTokenInForTokenOut(\n    amount: OldBigNumber,\n    poolPairData: ElementPoolPairData\n): OldBigNumber {\n    const f = parseFloat(formatFixed(poolPairData.swapFee, 18));\n    const Bi = parseFloat(\n        formatFixed(poolPairData.balanceIn, poolPairData.decimalsIn)\n    );\n    const Bo = parseFloat(\n        formatFixed(poolPairData.balanceOut, poolPairData.decimalsOut)\n    );\n    const t = getTimeTillExpiry(\n        poolPairData.expiryTime,\n        poolPairData.currentBlockTimestamp,\n        poolPairData.unitSeconds\n    );\n    const Ai = amount.toNumber();\n    return bnum(\n        1 /\n            ((Bi ** (1 - t) - (Ai + Bi) ** (1 - t) + Bo ** (1 - t)) **\n                (-1 + 1 / (1 - t)) /\n                (Ai + Bi) ** t -\n                Math.abs(\n                    1 -\n                        (Bi ** (1 - t) -\n                            (Ai + Bi) ** (1 - t) +\n                            Bo ** (1 - t)) **\n                            (-1 + 1 / (1 - t)) /\n                            (Ai + Bi) ** t\n                ) *\n                    f)\n    );\n}\n\n// PairType = 'token->token'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapTokenInForExactTokenOut(\n    amount: OldBigNumber,\n    poolPairData: ElementPoolPairData\n): OldBigNumber {\n    const f = parseFloat(formatFixed(poolPairData.swapFee, 18));\n    const Bi = parseFloat(\n        formatFixed(poolPairData.balanceIn, poolPairData.decimalsIn)\n    );\n    const Bo = parseFloat(\n        formatFixed(poolPairData.balanceOut, poolPairData.decimalsOut)\n    );\n    const t = getTimeTillExpiry(\n        poolPairData.expiryTime,\n        poolPairData.currentBlockTimestamp,\n        poolPairData.unitSeconds\n    );\n    const Ao = amount.toNumber();\n    return bnum(\n        (Bi ** (1 - t) + Bo ** (1 - t) - (-Ao + Bo) ** (1 - t)) **\n            (-1 + 1 / (1 - t)) /\n            (-Ao + Bo) ** t +\n            Math.abs(\n                -1 +\n                    (Bi ** (1 - t) + Bo ** (1 - t) - (-Ao + Bo) ** (1 - t)) **\n                        (-1 + 1 / (1 - t)) /\n                        (-Ao + Bo) ** t\n            ) *\n                f\n    );\n}\n\n/////////\n///  Derivatives of spotPriceAfterSwap\n/////////\n\n// PairType = 'token->token'\n// SwapType = 'swapExactIn'\nexport function _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n    amount: OldBigNumber,\n    poolPairData: ElementPoolPairData\n): OldBigNumber {\n    const f = parseFloat(formatFixed(poolPairData.swapFee, 18));\n    const Bi = parseFloat(\n        formatFixed(poolPairData.balanceIn, poolPairData.decimalsIn)\n    );\n    const Bo = parseFloat(\n        formatFixed(poolPairData.balanceOut, poolPairData.decimalsOut)\n    );\n    const t = getTimeTillExpiry(\n        poolPairData.expiryTime,\n        poolPairData.currentBlockTimestamp,\n        poolPairData.unitSeconds\n    );\n    const Ai = amount.toNumber();\n    return bnum(\n        -(\n            (-(\n                ((Bi ** (1 - t) - (Ai + Bi) ** (1 - t) + Bo ** (1 - t)) **\n                    (-2 + 1 / (1 - t)) *\n                    (-1 + 1 / (1 - t)) *\n                    (1 - t)) /\n                (Ai + Bi) ** (2 * t)\n            ) -\n                (Ai + Bi) ** (-1 - t) *\n                    (Bi ** (1 - t) - (Ai + Bi) ** (1 - t) + Bo ** (1 - t)) **\n                        (-1 + 1 / (1 - t)) *\n                    t -\n                f *\n                    Math.abs(\n                        ((Bi ** (1 - t) -\n                            (Ai + Bi) ** (1 - t) +\n                            Bo ** (1 - t)) **\n                            (-2 + 1 / (1 - t)) *\n                            (-1 + 1 / (1 - t)) *\n                            (1 - t)) /\n                            (Ai + Bi) ** (2 * t) +\n                            (Ai + Bi) ** (-1 - t) *\n                                (Bi ** (1 - t) -\n                                    (Ai + Bi) ** (1 - t) +\n                                    Bo ** (1 - t)) **\n                                    (-1 + 1 / (1 - t)) *\n                                t\n                    )) /\n            ((Bi ** (1 - t) - (Ai + Bi) ** (1 - t) + Bo ** (1 - t)) **\n                (-1 + 1 / (1 - t)) /\n                (Ai + Bi) ** t -\n                Math.abs(\n                    1 -\n                        (Bi ** (1 - t) -\n                            (Ai + Bi) ** (1 - t) +\n                            Bo ** (1 - t)) **\n                            (-1 + 1 / (1 - t)) /\n                            (Ai + Bi) ** t\n                ) *\n                    f) **\n                2\n        )\n    );\n}\n\n// PairType = 'token->token'\n// SwapType = 'swapExactOut'\nexport function _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n    amount: OldBigNumber,\n    poolPairData: ElementPoolPairData\n): OldBigNumber {\n    const f = parseFloat(formatFixed(poolPairData.swapFee, 18));\n    const Bi = parseFloat(\n        formatFixed(poolPairData.balanceIn, poolPairData.decimalsIn)\n    );\n    const Bo = parseFloat(\n        formatFixed(poolPairData.balanceOut, poolPairData.decimalsOut)\n    );\n    const t = getTimeTillExpiry(\n        poolPairData.expiryTime,\n        poolPairData.currentBlockTimestamp,\n        poolPairData.unitSeconds\n    );\n    const Ao = amount.toNumber();\n    return bnum(\n        ((Bi ** (1 - t) + Bo ** (1 - t) - (-Ao + Bo) ** (1 - t)) **\n            (-2 + 1 / (1 - t)) *\n            (-1 + 1 / (1 - t)) *\n            (1 - t)) /\n            (-Ao + Bo) ** (2 * t) +\n            (-Ao + Bo) ** (-1 - t) *\n                (Bi ** (1 - t) + Bo ** (1 - t) - (-Ao + Bo) ** (1 - t)) **\n                    (-1 + 1 / (1 - t)) *\n                t +\n            f *\n                Math.abs(\n                    ((Bi ** (1 - t) + Bo ** (1 - t) - (-Ao + Bo) ** (1 - t)) **\n                        (-2 + 1 / (1 - t)) *\n                        (-1 + 1 / (1 - t)) *\n                        (1 - t)) /\n                        (-Ao + Bo) ** (2 * t) +\n                        (-Ao + Bo) ** (-1 - t) *\n                            (Bi ** (1 - t) +\n                                Bo ** (1 - t) -\n                                (-Ao + Bo) ** (1 - t)) **\n                                (-1 + 1 / (1 - t)) *\n                            t\n                )\n    );\n}\n\nexport function getTimeTillExpiry(\n    expiryTime: number,\n    currentBlockTimestamp: number,\n    unitSeconds: number\n): number {\n    let t =\n        currentBlockTimestamp < expiryTime\n            ? expiryTime - currentBlockTimestamp\n            : 0;\n    t = t / unitSeconds;\n    return t;\n}\n","import { BigNumber, formatFixed, parseFixed } from '@ethersproject/bignumber';\nimport { WeiPerEther as ONE, Zero } from '@ethersproject/constants';\nimport { isSameAddress } from '../../utils';\nimport { BigNumber as OldBigNumber, bnum, ZERO } from '../../utils/bignumber';\nimport {\n    PoolBase,\n    PoolTypes,\n    PoolPairBase,\n    SwapTypes,\n    SubgraphPoolBase,\n    SubgraphToken,\n} from '../../types';\nimport { getAddress } from '@ethersproject/address';\nimport {\n    _exactTokenInForTokenOut,\n    _tokenInForExactTokenOut,\n    _spotPriceAfterSwapExactTokenInForTokenOut,\n    _spotPriceAfterSwapTokenInForExactTokenOut,\n    _derivativeSpotPriceAfterSwapExactTokenInForTokenOut,\n    _derivativeSpotPriceAfterSwapTokenInForExactTokenOut,\n    getTimeTillExpiry,\n} from './elementMath';\nimport { universalNormalizedLiquidity } from '../liquidity';\n\ntype ElementPoolToken = Pick<SubgraphToken, 'address' | 'balance' | 'decimals'>;\n\nexport type ElementPoolPairData = PoolPairBase & {\n    totalShares: BigNumber;\n    expiryTime: number;\n    unitSeconds: number;\n    principalToken: string;\n    baseToken: string;\n    currentBlockTimestamp: number;\n};\n\nexport class ElementPool implements PoolBase<ElementPoolPairData> {\n    poolType: PoolTypes = PoolTypes.Element;\n    id: string;\n    address: string;\n    swapFee: BigNumber;\n    totalShares: BigNumber;\n    tokens: ElementPoolToken[];\n    tokensList: string[];\n    // Element specific\n    expiryTime: number;\n    unitSeconds: number;\n    principalToken: string;\n    baseToken: string;\n    currentBlockTimestamp: number;\n\n    static fromPool(pool: SubgraphPoolBase): ElementPool {\n        if (!pool.expiryTime) throw new Error('ElementPool missing expiryTime');\n        if (!pool.unitSeconds)\n            throw new Error('ElementPool missing unitSeconds');\n        if (!pool.principalToken)\n            throw new Error('ElementPool missing principalToken');\n\n        if (!pool.baseToken) throw new Error('ElementPool missing baseToken');\n\n        return new ElementPool(\n            pool.id,\n            pool.address,\n            pool.swapFee,\n            pool.totalShares,\n            pool.tokens,\n            pool.tokensList,\n            pool.expiryTime,\n            pool.unitSeconds,\n            pool.principalToken,\n            pool.baseToken\n        );\n    }\n\n    constructor(\n        id: string,\n        address: string,\n        swapFee: string,\n        totalShares: string,\n        tokens: ElementPoolToken[],\n        tokensList: string[],\n        expiryTime: number,\n        unitSeconds: number,\n        principalToken: string,\n        baseToken: string\n    ) {\n        this.id = id;\n        this.address = address;\n        this.swapFee = parseFixed(swapFee, 18);\n        this.totalShares = parseFixed(totalShares, 18);\n        this.tokens = tokens;\n        this.tokensList = tokensList;\n        this.expiryTime = expiryTime;\n        this.unitSeconds = unitSeconds;\n        this.principalToken = principalToken;\n        this.baseToken = baseToken;\n        this.currentBlockTimestamp = 0;\n    }\n\n    setCurrentBlockTimestamp(timestamp: number): void {\n        this.currentBlockTimestamp = timestamp;\n    }\n\n    parsePoolPairData(tokenIn: string, tokenOut: string): ElementPoolPairData {\n        const tokenIndexIn = this.tokens.findIndex(\n            (t) => getAddress(t.address) === getAddress(tokenIn)\n        );\n        if (tokenIndexIn < 0) throw 'Pool does not contain tokenIn';\n        const tI = this.tokens[tokenIndexIn];\n        const decimalsIn = tI.decimals;\n\n        const tokenIndexOut = this.tokens.findIndex(\n            (t) => getAddress(t.address) === getAddress(tokenOut)\n        );\n        if (tokenIndexOut < 0) throw 'Pool does not contain tokenOut';\n        const tO = this.tokens[tokenIndexOut];\n        const decimalsOut = tO.decimals;\n\n        // We already add the virtual LP shares to the right balance\n        const realBalanceIn = parseFixed(tI.balance, decimalsIn);\n        const realBalanceOut = parseFixed(tO.balance, decimalsOut);\n        let balanceIn = realBalanceIn;\n        let balanceOut = realBalanceOut;\n        if (tokenIn == this.principalToken) {\n            balanceIn = realBalanceIn.add(this.totalShares);\n        } else if (tokenOut == this.principalToken) {\n            balanceOut = realBalanceOut.add(this.totalShares);\n        }\n\n        const poolPairData: ElementPoolPairData = {\n            id: this.id,\n            address: this.address,\n            poolType: this.poolType,\n            tokenIn: tokenIn,\n            tokenOut: tokenOut,\n            principalToken: this.principalToken,\n            baseToken: this.baseToken,\n            decimalsIn: Number(decimalsIn),\n            decimalsOut: Number(decimalsOut),\n            balanceIn,\n            balanceOut,\n            swapFee: this.swapFee,\n            totalShares: this.totalShares,\n            expiryTime: this.expiryTime,\n            unitSeconds: this.unitSeconds,\n            currentBlockTimestamp: this.currentBlockTimestamp,\n        };\n\n        return poolPairData;\n    }\n\n    getNormalizedLiquidity(poolPairData: ElementPoolPairData): OldBigNumber {\n        return universalNormalizedLiquidity(\n            this._derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n                poolPairData,\n                ZERO\n            )\n        );\n    }\n\n    getLimitAmountSwap(\n        poolPairData: ElementPoolPairData,\n        swapType: SwapTypes\n    ): OldBigNumber {\n        const MAX_OUT_RATIO = parseFixed('0.3', 18);\n        if (swapType === SwapTypes.SwapExactIn) {\n            // \"Ai < (Bi**(1-t)+Bo**(1-t))**(1/(1-t))-Bi\" must hold in order for\n            // base of root to be non-negative\n            const Bi = parseFloat(\n                formatFixed(poolPairData.balanceIn, poolPairData.decimalsIn)\n            );\n            const Bo = parseFloat(\n                formatFixed(poolPairData.balanceOut, poolPairData.decimalsOut)\n            );\n            const t = getTimeTillExpiry(\n                this.expiryTime,\n                this.currentBlockTimestamp,\n                this.unitSeconds\n            );\n            return bnum((Bi ** (1 - t) + Bo ** (1 - t)) ** (1 / (1 - t)) - Bi);\n        } else {\n            return bnum(\n                formatFixed(\n                    poolPairData.balanceOut.mul(MAX_OUT_RATIO).div(ONE),\n                    poolPairData.decimalsOut\n                )\n            );\n        }\n    }\n\n    // Updates the balance of a given token for the pool\n    updateTokenBalanceForPool(token: string, newBalance: BigNumber): void {\n        // token is BPT\n        if (isSameAddress(this.address, token)) {\n            this.updateTotalShares(newBalance);\n        } else {\n            // token is underlying in the pool\n            const T = this.tokens.find((t) => isSameAddress(t.address, token));\n            if (!T) throw Error('Pool does not contain this token');\n            T.balance = formatFixed(newBalance, T.decimals);\n        }\n    }\n\n    updateTotalShares(newTotalShares: BigNumber): void {\n        this.totalShares = newTotalShares;\n    }\n\n    _exactTokenInForTokenOut(\n        poolPairData: ElementPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        poolPairData.currentBlockTimestamp = this.currentBlockTimestamp;\n        return _exactTokenInForTokenOut(amount, poolPairData);\n    }\n\n    _tokenInForExactTokenOut(\n        poolPairData: ElementPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        poolPairData.currentBlockTimestamp = this.currentBlockTimestamp;\n        return _tokenInForExactTokenOut(amount, poolPairData);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _calcTokensOutGivenExactBptIn(bptAmountIn: BigNumber): BigNumber[] {\n        // Missing maths for this\n        return new Array(this.tokens.length).fill(Zero);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _calcBptOutGivenExactTokensIn(amountsIn: BigNumber[]): BigNumber {\n        // Missing maths for this\n        return Zero;\n    }\n\n    _spotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: ElementPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        poolPairData.currentBlockTimestamp = this.currentBlockTimestamp;\n        return _spotPriceAfterSwapExactTokenInForTokenOut(amount, poolPairData);\n    }\n\n    _spotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: ElementPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        poolPairData.currentBlockTimestamp = this.currentBlockTimestamp;\n        return _spotPriceAfterSwapTokenInForExactTokenOut(amount, poolPairData);\n    }\n\n    _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: ElementPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        poolPairData.currentBlockTimestamp = this.currentBlockTimestamp;\n        return _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n            amount,\n            poolPairData\n        );\n    }\n\n    _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: ElementPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        poolPairData.currentBlockTimestamp = this.currentBlockTimestamp;\n        return _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n            amount,\n            poolPairData\n        );\n    }\n}\n","import { BigNumber, formatFixed } from '@ethersproject/bignumber';\nimport { WeiPerEther as EONE } from '@ethersproject/constants';\nimport {\n    BigNumber as OldBigNumber,\n    bnum,\n    ZERO,\n    ONE,\n} from '../../utils/bignumber';\nimport { PhantomStablePoolPairData } from './phantomStablePool';\n\n// All functions are adapted from the solidity ones to be found on:\n// https://github.com/balancer-labs/balancer-core-v2/blob/master/contracts/pools/stable/StableMath.sol\n\n// TODO: implement all up and down rounding variations\n\n/**********************************************************************************************\n    // invariant                                                                                 //\n    // D = invariant to compute                                                                  //\n    // A = amplifier                n * D^2 + A * n^n * S * (n^n * P / D^(n−1))                  //\n    // S = sum of balances         ____________________________________________                  //\n    // P = product of balances    (n+1) * D + ( A * n^n − 1)* (n^n * P / D^(n−1))                //\n    // n = number of tokens                                                                      //\n    **********************************************************************************************/\n\nconst AMP_PRECISION_BNUM = bnum(1000);\n\nexport function _invariant(\n    A: BigNumber,\n    balances: OldBigNumber[] // balances\n): OldBigNumber {\n    let sum = ZERO;\n    const totalCoins = balances.length;\n    for (let i = 0; i < totalCoins; i++) {\n        sum = sum.plus(balances[i]);\n    }\n    if (sum.isZero()) {\n        return ZERO;\n    }\n    let prevInv = ZERO;\n    let inv = sum;\n    // A is passed as an ethers bignumber while maths uses bignumber.js\n    const AAdjusted = bnum(formatFixed(A, 3));\n    const ATimesNpowN = AAdjusted.times(totalCoins ** totalCoins); // A*n^n\n\n    for (let i = 0; i < 255; i++) {\n        let P_D = bnum(totalCoins).times(balances[0]);\n        for (let j = 1; j < totalCoins; j++) {\n            //P_D is rounded up\n            P_D = P_D.times(balances[j]).times(totalCoins).div(inv);\n        }\n        prevInv = inv;\n        //inv is rounded up\n        inv = bnum(totalCoins)\n            .times(inv)\n            .times(inv)\n            .plus(ATimesNpowN.times(sum).times(P_D))\n            .div(\n                bnum(totalCoins + 1)\n                    .times(inv)\n                    .plus(ATimesNpowN.minus(1).times(P_D))\n            );\n        // Equality with the precision of 1\n        if (inv.gt(prevInv)) {\n            if (inv.minus(prevInv).lt(bnum(10 ** -18))) {\n                break;\n            }\n        } else if (prevInv.minus(inv).lt(bnum(10 ** -18))) {\n            break;\n        }\n    }\n    //Result is rounded up\n    return inv;\n}\n\n// Adapted from StableMath.sol, _outGivenIn()\n// * Added swap fee at very first line\n/**********************************************************************************************\n    // outGivenIn token x for y - polynomial equation to solve                                   //\n    // ay = amount out to calculate                                                              //\n    // by = balance token out                                                                    //\n    // y = by - ay                                                                               //\n    // D = invariant                               D                     D^(n+1)                 //\n    // A = amplifier               y^2 + ( S - ----------  - 1) * y -  ------------- = 0         //\n    // n = number of tokens                    (A * n^n)               A * n^2n * P              //\n    // S = sum of final balances but y                                                           //\n    // P = product of final balances but y                                                       //\n    **********************************************************************************************/\nexport function _exactTokenInForTokenOut(\n    amount: OldBigNumber,\n    poolPairData: PhantomStablePoolPairData\n): OldBigNumber {\n    // The formula below returns some dust (due to rounding errors) but when\n    // we input zero the output should be zero\n    if (amount.isZero()) return amount;\n    const { amp, allBalances, tokenIndexIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const n = balances.length;\n    const A = amp.div(n ** (n - 1));\n\n    let tokenAmountIn = amount;\n    tokenAmountIn = tokenAmountIn\n        .times(EONE.sub(swapFee).toString())\n        .div(EONE.toString());\n\n    //Invariant is rounded up\n    const inv = _invariant(A, balances);\n    let p = inv;\n    let sum = ZERO;\n    const totalCoins = bnum(balances.length);\n    let n_pow_n = ONE;\n    let x = ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        n_pow_n = n_pow_n.times(totalCoins);\n\n        if (i == tokenIndexIn) {\n            x = balances[i].plus(tokenAmountIn);\n        } else if (i != tokenIndexOut) {\n            x = balances[i];\n        } else {\n            continue;\n        }\n        sum = sum.plus(x);\n        //Round up p\n        p = p.times(inv).div(x);\n    }\n\n    //Calculate out balance\n    const y = _solveAnalyticalBalance(sum, inv, A, n_pow_n, p);\n\n    //Result is rounded down\n    // return balances[tokenIndexOut] > y ? balances[tokenIndexOut].minus(y) : 0;\n    return balances[tokenIndexOut].minus(y);\n}\n\n// Adapted from StableMath.sol, _inGivenOut()\n// * Added swap fee at very last line\n/**********************************************************************************************\n    // inGivenOut token x for y - polynomial equation to solve                                   //\n    // ax = amount in to calculate                                                               //\n    // bx = balance token in                                                                     //\n    // x = bx + ax                                                                               //\n    // D = invariant                               D                     D^(n+1)                 //\n    // A = amplifier               x^2 + ( S - ----------  - 1) * x -  ------------- = 0         //\n    // n = number of tokens                    (A * n^n)               A * n^2n * P              //\n    // S = sum of final balances but x                                                           //\n    // P = product of final balances but x                                                       //\n    **********************************************************************************************/\nexport function _tokenInForExactTokenOut(\n    amount: OldBigNumber,\n    poolPairData: PhantomStablePoolPairData\n): OldBigNumber {\n    // The formula below returns some dust (due to rounding errors) but when\n    // we input zero the output should be zero\n    if (amount.isZero()) return amount;\n    const { amp, allBalances, tokenIndexIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const n = balances.length;\n    const A = amp.div(n ** (n - 1));\n    const tokenAmountOut = amount;\n    //Invariant is rounded up\n    const inv = _invariant(A, balances);\n    let p = inv;\n    let sum = ZERO;\n    const totalCoins = bnum(balances.length);\n    let n_pow_n = ONE;\n    let x = ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        n_pow_n = n_pow_n.times(totalCoins);\n\n        if (i == tokenIndexOut) {\n            x = balances[i].minus(tokenAmountOut);\n        } else if (i != tokenIndexIn) {\n            x = balances[i];\n        } else {\n            continue;\n        }\n        sum = sum.plus(x);\n        //Round up p\n        p = p.times(inv).div(x);\n    }\n\n    //Calculate in balance\n    const y = _solveAnalyticalBalance(sum, inv, A, n_pow_n, p);\n\n    //Result is rounded up\n    return y\n        .minus(balances[tokenIndexIn])\n        .multipliedBy(EONE.toString())\n        .div(EONE.sub(swapFee).toString());\n}\n\n/*\nFlow of calculations:\namountBPTOut -> newInvariant -> (amountInProportional, amountInAfterFee) ->\namountInPercentageExcess -> amountIn\n*/\nexport function _tokenInForExactBPTOut(\n    amount: OldBigNumber,\n    poolPairData: PhantomStablePoolPairData\n): OldBigNumber {\n    // The formula below returns some dust (due to rounding errors) but when\n    // we input zero the output should be zero\n    if (amount.isZero()) return amount;\n    const {\n        amp,\n        allBalances,\n        virtualBptSupply,\n        decimalsOut,\n        tokenIndexIn,\n        swapFee,\n    } = poolPairData;\n    const balances = [...allBalances];\n    const n = balances.length;\n    const A = amp.div(n ** (n - 1));\n    const bptAmountOut = amount;\n\n    // Get current invariant\n    const currentInvariant = _invariant(A, balances);\n    // Calculate new invariant\n    const bnumBalanceOut = bnum(formatFixed(virtualBptSupply, decimalsOut));\n    const newInvariant = bnumBalanceOut\n        .plus(bptAmountOut)\n        .div(bnumBalanceOut)\n        .times(currentInvariant);\n\n    // First calculate the sum of all token balances which will be used to calculate\n    // the current weight of token\n    let sumBalances = bnum(0);\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = sumBalances.plus(balances[i]);\n    }\n\n    // get amountInAfterFee\n    const newBalanceTokenIndex =\n        _getTokenBalanceGivenInvariantAndAllOtherBalances(\n            A,\n            balances,\n            newInvariant,\n            tokenIndexIn\n        );\n    const amountInAfterFee = newBalanceTokenIndex.minus(balances[tokenIndexIn]);\n\n    // Get tokenBalancePercentageExcess\n    const currentWeight = balances[tokenIndexIn].div(sumBalances);\n    const tokenBalancePercentageExcess = bnum(1).minus(currentWeight);\n\n    // return amountIn\n    const bnumSwapFee = bnum(formatFixed(swapFee, 18));\n    return amountInAfterFee.div(\n        bnum(1).minus(tokenBalancePercentageExcess.times(bnumSwapFee))\n    );\n}\n\nexport function _BPTInForExactTokenOut(\n    amount: OldBigNumber,\n    poolPairData: PhantomStablePoolPairData\n): OldBigNumber {\n    // The formula below returns some dust (due to rounding errors) but when\n    // we input zero the output should be zero\n    if (amount.isZero()) return amount;\n    const {\n        amp,\n        allBalances,\n        virtualBptSupply,\n        decimalsIn,\n        tokenIndexOut,\n        swapFee,\n    } = poolPairData;\n    const balances = [...allBalances];\n    const n = balances.length;\n    const A = amp.div(n ** (n - 1));\n    const tokenAmountOut = amount;\n\n    // Get current invariant\n    const currentInvariant = _invariant(A, balances);\n\n    // First calculate the sum of all token balances which will be used to calculate\n    // the current weights of each token relative to the sum of all balances\n    let sumBalances = bnum(0);\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = sumBalances.plus(balances[i]);\n    }\n\n    // Calculate the weighted balance ratio without considering fees\n    const currentWeight = balances[tokenIndexOut].div(sumBalances);\n    const tokenBalanceRatioWithoutFee = balances[tokenIndexOut]\n        .minus(tokenAmountOut)\n        .div(balances[tokenIndexOut]);\n    const weightedBalanceRatio = bnum(1).minus(\n        bnum(1).minus(tokenBalanceRatioWithoutFee).times(currentWeight)\n    );\n\n    // calculate new amounts in taking into account the fee on the % excess\n    const tokenBalancePercentageExcess = weightedBalanceRatio\n        .minus(tokenBalanceRatioWithoutFee)\n        .div(bnum(1).minus(tokenBalanceRatioWithoutFee));\n\n    const bnumSwapFee = bnum(formatFixed(swapFee, 18));\n    const amountOutBeforeFee = tokenAmountOut.div(\n        bnum(1).minus(bnumSwapFee.times(tokenBalancePercentageExcess))\n    );\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(amountOutBeforeFee);\n\n    // get new invariant taking into account swap fees\n    const newInvariant = _invariant(A, balances);\n\n    // return amountBPTIn\n    const bnumBalanceIn = bnum(formatFixed(virtualBptSupply, decimalsIn));\n    return bnumBalanceIn.times(\n        bnum(1).minus(newInvariant.div(currentInvariant))\n    );\n}\n\n//This function calculates the balance of a given token (tokenIndex)\n// given all the other balances and the invariant\nfunction _getTokenBalanceGivenInvariantAndAllOtherBalances(\n    A: BigNumber,\n    balances: OldBigNumber[],\n    inv: OldBigNumber,\n    tokenIndex: number\n): OldBigNumber {\n    let p = inv;\n    let sum = ZERO;\n    const totalCoins = balances.length;\n    let nPowN = ONE;\n    let x = ZERO;\n    for (let i = 0; i < totalCoins; i++) {\n        nPowN = nPowN.times(totalCoins);\n        if (i != tokenIndex) {\n            x = balances[i];\n        } else {\n            continue;\n        }\n        sum = sum.plus(x);\n        //Round up p\n        p = p.times(inv).div(x);\n    }\n\n    // Calculate token balance\n    return _solveAnalyticalBalance(sum, inv, A, nPowN, p);\n}\n\n//This function calcuates the analytical solution to find the balance required\nexport function _solveAnalyticalBalance(\n    sum: OldBigNumber,\n    inv: OldBigNumber,\n    A: BigNumber,\n    n_pow_n: OldBigNumber,\n    p: OldBigNumber\n): OldBigNumber {\n    // A is passed as an ethers bignumber while maths uses bignumber.js\n    const oldBN_A = bnum(formatFixed(A, 3));\n    //Round up p\n    p = p.times(inv).div(oldBN_A.times(n_pow_n).times(n_pow_n));\n    //Round down b\n    const b = sum.plus(inv.div(oldBN_A.times(n_pow_n)));\n    //Round up c\n    // let c = inv >= b\n    //     ? inv.minus(b).plus(Math.sqrtUp(inv.minus(b).times(inv.minus(b)).plus(p.times(4))))\n    //     : Math.sqrtUp(b.minus(inv).times(b.minus(inv)).plus(p.times(4))).minus(b.minus(inv));\n    let c;\n    if (inv.gte(b)) {\n        c = inv\n            .minus(b)\n            .plus(inv.minus(b).times(inv.minus(b)).plus(p.times(4)).sqrt());\n    } else {\n        c = b\n            .minus(inv)\n            .times(b.minus(inv))\n            .plus(p.times(4))\n            .sqrt()\n            .minus(b.minus(inv));\n    }\n    //Round up y\n    return c.div(2);\n}\n\n//////////////////////\n////  These functions have been added exclusively for the SORv2\n//////////////////////\n\nexport function _exactTokenInForBPTOut(\n    amount: OldBigNumber,\n    poolPairData: PhantomStablePoolPairData\n): OldBigNumber {\n    // The formula below returns some dust (due to rounding errors) but when\n    // we input zero the output should be zero\n    if (amount.isZero()) return amount;\n    const {\n        amp,\n        allBalances,\n        virtualBptSupply,\n        tokenIndexIn,\n        swapFee,\n        decimalsOut,\n    } = poolPairData;\n    const balances = [...allBalances];\n    const n = balances.length;\n    const A = amp.div(n ** (n - 1));\n\n    const tokenAmountIn = amount;\n    // Get current invariant\n    const currentInvariant = _invariant(A, balances);\n\n    // First calculate the sum of all token balances which will be used to calculate\n    // the current weights of each token relative to the sum of all balances\n    let sumBalances = bnum(0);\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = sumBalances.plus(balances[i]);\n    }\n\n    // Calculate the weighted balance ratio without considering fees\n    const currentWeight = balances[tokenIndexIn].div(sumBalances);\n    const tokenBalanceRatioWithoutFee = balances[tokenIndexIn]\n        .plus(tokenAmountIn)\n        .div(balances[tokenIndexIn]);\n    const weightedBalanceRatio = bnum(1).plus(\n        tokenBalanceRatioWithoutFee.minus(bnum(1)).times(currentWeight)\n    );\n\n    // calculate new amountIn taking into account the fee on the % excess\n    // Percentage of the amount supplied that will be implicitly swapped for other tokens in the pool\n    const tokenBalancePercentageExcess = tokenBalanceRatioWithoutFee\n        .minus(weightedBalanceRatio)\n        .div(tokenBalanceRatioWithoutFee.minus(bnum(1)));\n\n    const bnumSwapFee = bnum(formatFixed(swapFee, 18));\n    const amountInAfterFee = tokenAmountIn.times(\n        bnum(1).minus(bnumSwapFee.times(tokenBalancePercentageExcess))\n    );\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(amountInAfterFee);\n\n    // get new invariant taking into account swap fees\n    const newInvariant = _invariant(A, balances);\n\n    const bnumBalanceOut = bnum(formatFixed(virtualBptSupply, decimalsOut));\n\n    return bnumBalanceOut.times(\n        newInvariant.div(currentInvariant).minus(bnum(1))\n    );\n}\n\n/* \nFlow of calculations:\namountBPTin -> newInvariant -> (amountOutProportional, amountOutBeforeFee) ->\namountOutPercentageExcess -> amountOut\n*/\nexport function _exactBPTInForTokenOut(\n    amount: OldBigNumber,\n    poolPairData: PhantomStablePoolPairData\n): OldBigNumber {\n    // The formula below returns some dust (due to rounding errors) but when\n    // we input zero the output should be zero\n    if (amount.isZero()) return amount;\n\n    const { amp, allBalances, tokenIndexOut, swapFee } = poolPairData;\n    const balances = [...allBalances];\n    const n = balances.length;\n    const A = amp.div(n ** (n - 1));\n    const bptAmountIn = amount;\n\n    /**********************************************************************************************\n    // TODO description                            //\n    **********************************************************************************************/\n\n    // Get current invariant\n    const currentInvariant = _invariant(A, balances);\n    // Calculate new invariant\n    const bnumBalanceIn = bnum(formatFixed(poolPairData.virtualBptSupply, 18));\n    const newInvariant = bnumBalanceIn\n        .minus(bptAmountIn)\n        .div(bnumBalanceIn)\n        .times(currentInvariant);\n\n    // First calculate the sum of all token balances which will be used to calculate\n    // the current weight of token\n    let sumBalances = bnum(0);\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = sumBalances.plus(balances[i]);\n    }\n\n    const newBalanceTokenIndex =\n        _getTokenBalanceGivenInvariantAndAllOtherBalances(\n            A,\n            balances,\n            newInvariant,\n            tokenIndexOut\n        );\n    const amountOutBeforeFee =\n        balances[tokenIndexOut].minus(newBalanceTokenIndex);\n\n    // Calculate tokenBalancePercentageExcess\n    const currentWeight = balances[tokenIndexOut].div(sumBalances);\n    const tokenBalancePercentageExcess = bnum(1).minus(currentWeight);\n    const ans = amountOutBeforeFee.times(\n        ONE.minus(\n            tokenBalancePercentageExcess\n                .times(swapFee.toString())\n                .div(EONE.toString())\n        )\n    );\n    return ans;\n}\n\nexport function _poolDerivatives(\n    A: BigNumber,\n    balances: OldBigNumber[],\n    tokenIndexIn: number,\n    tokenIndexOut: number,\n    is_first_derivative: boolean,\n    wrt_out: boolean\n): OldBigNumber {\n    const totalCoins = balances.length;\n    const D = _invariant(A, balances);\n    let S = ZERO;\n    for (let i = 0; i < totalCoins; i++) {\n        if (i != tokenIndexIn && i != tokenIndexOut) {\n            S = S.plus(balances[i]);\n        }\n    }\n    const x = balances[tokenIndexIn];\n    const y = balances[tokenIndexOut];\n    // A is passed as an ethers bignumber while maths uses bignumber.js\n    const AAdjusted = bnum(formatFixed(A, 3));\n    const a = AAdjusted.times(totalCoins ** totalCoins); // = ATimesNpowN\n    const b = S.minus(D).times(a).plus(D);\n    const twoaxy = bnum(2).times(a).times(x).times(y);\n    const partial_x = twoaxy.plus(a.times(y).times(y)).plus(b.times(y));\n    const partial_y = twoaxy.plus(a.times(x).times(x)).plus(b.times(x));\n    let ans;\n    if (is_first_derivative) {\n        ans = partial_x.div(partial_y);\n    } else {\n        const partial_xx = bnum(2).times(a).times(y);\n        const partial_yy = bnum(2).times(a).times(x);\n        const partial_xy = partial_xx.plus(partial_yy).plus(b);\n        const numerator = bnum(2)\n            .times(partial_x)\n            .times(partial_y)\n            .times(partial_xy)\n            .minus(partial_xx.times(partial_y.pow(2)))\n            .minus(partial_yy.times(partial_x.pow(2)));\n        const denominator = partial_x.pow(2).times(partial_y);\n        ans = numerator.div(denominator);\n        if (wrt_out) {\n            ans = ans.times(partial_y).div(partial_x);\n        }\n    }\n    return ans;\n}\n\n/////////\n/// SpotPriceAfterSwap\n/////////\n\nexport function _poolDerivativesBPT(\n    A: BigNumber,\n    balances: OldBigNumber[],\n    bptSupply: OldBigNumber,\n    tokenIndexIn: number,\n    is_first_derivative: boolean,\n    is_BPT_out: boolean,\n    wrt_out: boolean\n): OldBigNumber {\n    const totalCoins = balances.length;\n    const D = _invariant(A, balances);\n    let S = ZERO;\n    let D_P = D.div(totalCoins);\n    for (let i = 0; i < totalCoins; i++) {\n        if (i != tokenIndexIn) {\n            S = S.plus(balances[i]);\n            D_P = D_P.times(D).div(balances[i].times(totalCoins));\n        }\n    }\n    const x = balances[tokenIndexIn];\n    const alpha = bnum(A.toString()).times(totalCoins ** totalCoins); // = ATimesNpowN\n    const beta = alpha.times(S);\n    const gamma = AMP_PRECISION_BNUM.minus(alpha);\n    const partial_x = bnum(2)\n        .times(alpha)\n        .times(x)\n        .plus(beta)\n        .plus(gamma.times(D));\n    const minus_partial_D = D_P.times(totalCoins + 1)\n        .times(AMP_PRECISION_BNUM)\n        .minus(gamma.times(x));\n    const partial_D = ZERO.minus(minus_partial_D);\n    let ans: OldBigNumber;\n    if (is_first_derivative) {\n        ans = partial_x.div(minus_partial_D).times(bptSupply).div(D);\n    } else {\n        const partial_xx = bnum(2).times(alpha);\n        const partial_xD = gamma;\n        const n_times_nplusone = totalCoins * (totalCoins + 1);\n        const partial_DD = ZERO.minus(D_P.times(n_times_nplusone).div(D));\n        if (is_BPT_out) {\n            const term1 = partial_xx.times(partial_D).div(partial_x.pow(2));\n            const term2 = bnum(2).times(partial_xD).div(partial_x);\n            const term3 = partial_DD.div(partial_D);\n            ans = term1.minus(term2).plus(term3).times(D).div(bptSupply);\n            if (wrt_out) {\n                const D_prime = ZERO.minus(partial_x.div(partial_D));\n                ans = ans.div(D_prime).times(D).div(bptSupply);\n            }\n        } else {\n            ans = bnum(2)\n                .times(partial_xD)\n                .div(partial_D)\n                .minus(partial_DD.times(partial_x).div(partial_D.pow(2)))\n                .minus(partial_xx.div(partial_x));\n            if (wrt_out) {\n                ans = ans\n                    .times(partial_x)\n                    .div(minus_partial_D)\n                    .times(bptSupply)\n                    .div(D);\n            }\n        }\n    }\n    return ans;\n}\n\n// PairType = 'token->token'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapExactTokenInForTokenOut(\n    amount: OldBigNumber,\n    poolPairData: PhantomStablePoolPairData\n): OldBigNumber {\n    const { amp, allBalances, tokenIndexIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const n = balances.length;\n    const A = amp.div(n ** (n - 1));\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(\n        amount.times(EONE.sub(swapFee).toString()).div(EONE.toString())\n    );\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(\n        _exactTokenInForTokenOut(amount, poolPairData)\n    );\n    let ans = _poolDerivatives(\n        A,\n        balances,\n        tokenIndexIn,\n        tokenIndexOut,\n        true,\n        false\n    );\n    ans = ONE.div(ans.times(EONE.sub(swapFee).toString()).div(EONE.toString()));\n    return ans;\n}\n\n// PairType = 'token->token'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapTokenInForExactTokenOut(\n    amount: OldBigNumber,\n    poolPairData: PhantomStablePoolPairData\n): OldBigNumber {\n    const { amp, allBalances, tokenIndexIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const n = balances.length;\n    const A = amp.div(n ** (n - 1));\n    const _in = _tokenInForExactTokenOut(amount, poolPairData)\n        .times(EONE.sub(swapFee).toString())\n        .div(EONE.toString());\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(_in);\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(amount);\n    let ans = _poolDerivatives(\n        A,\n        balances,\n        tokenIndexIn,\n        tokenIndexOut,\n        true,\n        true\n    );\n    ans = ONE.div(ans.times(EONE.sub(swapFee).toString()).div(EONE.toString()));\n    return ans;\n}\n\nfunction _feeFactor(\n    balances: OldBigNumber[],\n    tokenIndex: number,\n    swapFee: BigNumber\n): OldBigNumber {\n    let sumBalances = ZERO;\n    for (let i = 0; i < balances.length; i++) {\n        sumBalances = sumBalances.plus(balances[i]);\n    }\n    const currentWeight = balances[tokenIndex].div(sumBalances);\n    const tokenBalancePercentageExcess = ONE.minus(currentWeight);\n    return ONE.minus(\n        tokenBalancePercentageExcess\n            .times(swapFee.toString())\n            .div(EONE.toString())\n    );\n}\n\n// PairType = 'token->BPT'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapExactTokenInForBPTOut(\n    amount: OldBigNumber,\n    poolPairData: PhantomStablePoolPairData\n): OldBigNumber {\n    const {\n        amp,\n        allBalances,\n        virtualBptSupply,\n        decimalsOut,\n        tokenIndexIn,\n        swapFee,\n    } = poolPairData;\n    const balances = [...allBalances];\n    const n = balances.length;\n    const A = amp.div(n ** (n - 1));\n    const feeFactor = _feeFactor(balances, tokenIndexIn, swapFee);\n    let bnumBalanceOut = bnum(formatFixed(virtualBptSupply, decimalsOut));\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(\n        amount.times(feeFactor)\n    );\n    bnumBalanceOut = bnumBalanceOut.plus(\n        _exactTokenInForBPTOut(amount, poolPairData)\n    );\n    let ans = _poolDerivativesBPT(\n        A,\n        balances,\n        bnumBalanceOut,\n        tokenIndexIn,\n        true,\n        true,\n        false\n    );\n    ans = bnum(1).div(ans.times(feeFactor));\n    return ans;\n}\n\n// PairType = 'token->BPT'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapTokenInForExactBPTOut(\n    amount: OldBigNumber,\n    poolPairData: PhantomStablePoolPairData\n): OldBigNumber {\n    const {\n        amp,\n        allBalances,\n        virtualBptSupply,\n        tokenIndexIn,\n        decimalsOut,\n        swapFee,\n    } = poolPairData;\n    const balances = [...allBalances];\n    const n = balances.length;\n    const A = amp.div(n ** (n - 1));\n    const _in = _tokenInForExactBPTOut(amount, poolPairData);\n    const feeFactor = _feeFactor(balances, tokenIndexIn, swapFee);\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(_in.times(feeFactor));\n    let bnumBalanceOut = bnum(formatFixed(virtualBptSupply, decimalsOut));\n    bnumBalanceOut = bnumBalanceOut.plus(amount);\n    let ans = _poolDerivativesBPT(\n        A,\n        balances,\n        bnumBalanceOut,\n        tokenIndexIn,\n        true,\n        true,\n        true\n    );\n    ans = ONE.div(ans.times(feeFactor));\n    return ans;\n}\n\n// PairType = 'BPT->token'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapExactBPTInForTokenOut(\n    amount: OldBigNumber,\n    poolPairData: PhantomStablePoolPairData\n): OldBigNumber {\n    const {\n        amp,\n        allBalances,\n        virtualBptSupply,\n        tokenIndexOut,\n        swapFee,\n        decimalsIn,\n    } = poolPairData;\n    const balances = [...allBalances];\n    const n = balances.length;\n    const A = amp.div(n ** (n - 1));\n\n    const _out = _exactBPTInForTokenOut(amount, poolPairData);\n    const feeFactor = _feeFactor(balances, tokenIndexOut, swapFee);\n    let bnumBalanceIn = bnum(formatFixed(virtualBptSupply, decimalsIn));\n\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(\n        _out.div(feeFactor)\n    );\n    bnumBalanceIn = bnumBalanceIn.minus(amount);\n\n    const ans = _poolDerivativesBPT(\n        A,\n        balances,\n        bnumBalanceIn,\n        tokenIndexOut,\n        true,\n        false,\n        false\n    ).div(feeFactor);\n    return ans;\n}\n\n// PairType = 'BPT->token'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapBPTInForExactTokenOut(\n    amount: OldBigNumber,\n    poolPairData: PhantomStablePoolPairData\n): OldBigNumber {\n    const {\n        amp,\n        allBalances,\n        virtualBptSupply,\n        decimalsIn,\n        tokenIndexOut,\n        swapFee,\n    } = poolPairData;\n    const balances = [...allBalances];\n    const n = balances.length;\n    const A = amp.div(n ** (n - 1));\n\n    const feeFactor = _feeFactor(balances, tokenIndexOut, swapFee);\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(\n        amount.div(feeFactor)\n    );\n    let bnumBalanceIn = bnum(formatFixed(virtualBptSupply, decimalsIn));\n    bnumBalanceIn = bnumBalanceIn.minus(\n        _BPTInForExactTokenOut(amount, poolPairData)\n    );\n    const ans = _poolDerivativesBPT(\n        A,\n        balances,\n        bnumBalanceIn,\n        tokenIndexOut,\n        true,\n        false,\n        true\n    ).div(feeFactor);\n    return ans;\n}\n\n/////////\n///  Derivatives of spotPriceAfterSwap\n/////////\n\n// PairType = 'token->token'\n// SwapType = 'swapExactIn'\nexport function _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n    amount: OldBigNumber,\n    poolPairData: PhantomStablePoolPairData\n): OldBigNumber {\n    const { amp, allBalances, tokenIndexIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const n = balances.length;\n    const A = amp.div(n ** (n - 1));\n\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(\n        amount.times(EONE.sub(swapFee).toString()).div(EONE.toString())\n    );\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(\n        _exactTokenInForTokenOut(amount, poolPairData)\n    );\n    return _poolDerivatives(\n        A,\n        balances,\n        tokenIndexIn,\n        tokenIndexOut,\n        false,\n        false\n    );\n}\n\n// PairType = 'token->token'\n// SwapType = 'swapExactOut'\nexport function _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n    amount: OldBigNumber,\n    poolPairData: PhantomStablePoolPairData\n): OldBigNumber {\n    const { amp, allBalances, tokenIndexIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const n = balances.length;\n    const A = amp.div(n ** (n - 1));\n\n    const bnumSwapFee = bnum(formatFixed(swapFee, 18));\n    const _in = _tokenInForExactTokenOut(amount, poolPairData).times(\n        bnum(1).minus(bnumSwapFee)\n    );\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(_in);\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(amount);\n    const feeFactor = bnum(1).minus(bnumSwapFee);\n    return _poolDerivatives(\n        A,\n        balances,\n        tokenIndexIn,\n        tokenIndexOut,\n        false,\n        true\n    ).div(feeFactor);\n}\n\n// PairType = 'token->BPT'\n// SwapType = 'swapExactIn'\nexport function _derivativeSpotPriceAfterSwapExactTokenInForBPTOut(\n    amount: OldBigNumber,\n    poolPairData: PhantomStablePoolPairData\n): OldBigNumber {\n    const { amp, allBalances, balanceOut, decimalsOut, tokenIndexIn, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const n = balances.length;\n    const A = amp.div(n ** (n - 1));\n\n    const feeFactor = _feeFactor(balances, tokenIndexIn, swapFee);\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(\n        amount.times(feeFactor)\n    );\n    let bnumBalanceOut = bnum(formatFixed(balanceOut, decimalsOut));\n    bnumBalanceOut = bnumBalanceOut.plus(\n        _exactTokenInForBPTOut(amount, poolPairData)\n    );\n    const ans = _poolDerivativesBPT(\n        A,\n        balances,\n        bnumBalanceOut,\n        tokenIndexIn,\n        false,\n        true,\n        false\n    );\n    return ans;\n}\n\n// PairType = 'token->BPT'\n// SwapType = 'swapExactOut'\nexport function _derivativeSpotPriceAfterSwapTokenInForExactBPTOut(\n    amount: OldBigNumber,\n    poolPairData: PhantomStablePoolPairData\n): OldBigNumber {\n    const { amp, allBalances, balanceOut, decimalsOut, tokenIndexIn, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const n = balances.length;\n    const A = amp.div(n ** (n - 1));\n\n    const _in = _tokenInForExactBPTOut(amount, poolPairData);\n    const feeFactor = _feeFactor(balances, tokenIndexIn, swapFee);\n    balances[tokenIndexIn] = balances[tokenIndexIn].plus(_in.times(feeFactor));\n    let bnumBalanceOut = bnum(formatFixed(balanceOut, decimalsOut));\n    bnumBalanceOut = bnumBalanceOut.plus(amount);\n    return _poolDerivativesBPT(\n        A,\n        balances,\n        bnumBalanceOut,\n        tokenIndexIn,\n        false,\n        true,\n        true\n    ).div(feeFactor);\n}\n\n// PairType = 'BPT->token'\n// SwapType = 'swapExactOut'\nexport function _derivativeSpotPriceAfterSwapBPTInForExactTokenOut(\n    amount: OldBigNumber,\n    poolPairData: PhantomStablePoolPairData\n): OldBigNumber {\n    const { amp, allBalances, balanceIn, decimalsIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const n = balances.length;\n    const A = amp.div(n ** (n - 1));\n\n    const _in = _BPTInForExactTokenOut(amount, poolPairData);\n    const feeFactor = _feeFactor(balances, tokenIndexOut, swapFee);\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(\n        amount.div(feeFactor)\n    );\n    let bnumBalanceIn = bnum(formatFixed(balanceIn, decimalsIn));\n    bnumBalanceIn = bnumBalanceIn.minus(_in);\n    const ans = _poolDerivativesBPT(\n        A,\n        balances,\n        bnumBalanceIn,\n        tokenIndexOut,\n        false,\n        false,\n        true\n    );\n    return ans.div(feeFactor.pow(2));\n}\n\n// PairType = 'BPT->token'\n// SwapType = 'swapExactIn'\nexport function _derivativeSpotPriceAfterSwapExactBPTInForTokenOut(\n    amount: OldBigNumber,\n    poolPairData: PhantomStablePoolPairData\n): OldBigNumber {\n    const { amp, allBalances, balanceIn, decimalsIn, tokenIndexOut, swapFee } =\n        poolPairData;\n    const balances = [...allBalances];\n    const n = balances.length;\n    const A = amp.div(n ** (n - 1));\n\n    const _out = _exactBPTInForTokenOut(amount, poolPairData);\n    const feeFactor = _feeFactor(balances, tokenIndexOut, swapFee);\n    balances[tokenIndexOut] = balances[tokenIndexOut].minus(\n        _out.div(feeFactor)\n    );\n    let bnumBalanceIn = bnum(formatFixed(balanceIn, decimalsIn));\n    bnumBalanceIn = bnumBalanceIn.minus(amount);\n    const ans = _poolDerivativesBPT(\n        A,\n        balances,\n        bnumBalanceIn,\n        tokenIndexOut,\n        false,\n        false,\n        false\n    );\n    return ans.div(feeFactor);\n}\n","import { BigNumber, formatFixed, parseFixed } from '@ethersproject/bignumber';\nimport { WeiPerEther as ONE } from '@ethersproject/constants';\nimport { isSameAddress } from '../../utils';\nimport { BigNumber as OldBigNumber, bnum, ZERO } from '../../utils/bignumber';\nimport {\n    PoolBase,\n    PoolTypes,\n    SwapTypes,\n    SubgraphPoolBase,\n    SubgraphToken,\n} from '../../types';\nimport { getAddress } from '@ethersproject/address';\nimport {\n    _calcBptOutGivenExactTokensIn,\n    _calcTokenOutGivenExactBptIn,\n    _calcOutGivenIn,\n    _calcTokenInGivenExactBptOut,\n    _calcBptInGivenExactTokensOut,\n    _calcInGivenOut,\n} from '../stablePool/stableMathBigInt';\nimport * as phantomStableMath from '../phantomStablePool/phantomStableMath';\nimport { MetaStablePoolPairData } from '../metaStablePool/metaStablePool';\nimport cloneDeep from 'lodash.clonedeep';\nimport { universalNormalizedLiquidity } from '../liquidity';\n\nexport enum PairTypes {\n    BptToToken,\n    TokenToBpt,\n    TokenToToken,\n}\n\nexport type PhantomStablePoolToken = Pick<\n    SubgraphToken,\n    'address' | 'balance' | 'decimals' | 'priceRate'\n>;\n\nexport type PhantomStablePoolPairData = MetaStablePoolPairData & {\n    pairType: PairTypes;\n    bptIndex: number;\n    virtualBptSupply: BigNumber;\n};\n\nexport class PhantomStablePool implements PoolBase<PhantomStablePoolPairData> {\n    poolType: PoolTypes = PoolTypes.MetaStable;\n    id: string;\n    address: string;\n    amp: BigNumber;\n    swapFee: BigNumber;\n    totalShares: BigNumber;\n    tokens: PhantomStablePoolToken[];\n    tokensList: string[];\n    ALMOST_ONE = parseFixed('0.99', 18);\n\n    static AMP_DECIMALS = 3;\n\n    static fromPool(pool: SubgraphPoolBase): PhantomStablePool {\n        if (!pool.amp) throw new Error('PhantomStablePool missing amp factor');\n        return new PhantomStablePool(\n            pool.id,\n            pool.address,\n            pool.amp,\n            pool.swapFee,\n            pool.totalShares,\n            pool.tokens,\n            pool.tokensList\n        );\n    }\n\n    // Remove BPT from Balances and update indices\n    static removeBPT(\n        poolPairData: PhantomStablePoolPairData\n    ): PhantomStablePoolPairData {\n        const poolPairDataNoBpt = cloneDeep(poolPairData);\n        const bptIndex = poolPairData.bptIndex;\n        if (bptIndex != -1) {\n            poolPairDataNoBpt.allBalances.splice(bptIndex, 1);\n            poolPairDataNoBpt.allBalancesScaled.splice(bptIndex, 1);\n            if (bptIndex < poolPairData.tokenIndexIn)\n                poolPairDataNoBpt.tokenIndexIn -= 1;\n            if (bptIndex < poolPairData.tokenIndexOut)\n                poolPairDataNoBpt.tokenIndexOut -= 1;\n        }\n        return poolPairDataNoBpt;\n    }\n\n    constructor(\n        id: string,\n        address: string,\n        amp: string,\n        swapFee: string,\n        totalShares: string,\n        tokens: PhantomStablePoolToken[],\n        tokensList: string[]\n    ) {\n        this.id = id;\n        this.address = address;\n        this.amp = parseFixed(amp, PhantomStablePool.AMP_DECIMALS);\n        this.swapFee = parseFixed(swapFee, 18);\n        this.totalShares = parseFixed(totalShares, 18);\n        this.tokens = tokens;\n        this.tokensList = tokensList;\n    }\n\n    parsePoolPairData(\n        tokenIn: string,\n        tokenOut: string\n    ): PhantomStablePoolPairData {\n        const tokenIndexIn = this.tokens.findIndex(\n            (t) => getAddress(t.address) === getAddress(tokenIn)\n        );\n        if (tokenIndexIn < 0) throw 'Pool does not contain tokenIn';\n        const tI = this.tokens[tokenIndexIn];\n        const balanceIn = bnum(tI.balance)\n            .times(bnum(tI.priceRate))\n            .dp(tI.decimals)\n            .toString();\n        const decimalsIn = tI.decimals;\n        const tokenInPriceRate = parseFixed(tI.priceRate, 18);\n\n        const tokenIndexOut = this.tokens.findIndex(\n            (t) => getAddress(t.address) === getAddress(tokenOut)\n        );\n        if (tokenIndexOut < 0) throw 'Pool does not contain tokenOut';\n        const tO = this.tokens[tokenIndexOut];\n        const balanceOut = bnum(tO.balance)\n            .times(bnum(tO.priceRate))\n            .dp(tO.decimals)\n            .toString();\n        const decimalsOut = tO.decimals;\n        const tokenOutPriceRate = parseFixed(tO.priceRate, 18);\n\n        // Get all token balances\n        const allBalances = this.tokens.map(({ balance, priceRate }) =>\n            bnum(balance).times(bnum(priceRate))\n        );\n        const allBalancesScaled = this.tokens.map(({ balance, priceRate }) =>\n            parseFixed(balance, 18).mul(parseFixed(priceRate, 18)).div(ONE)\n        );\n\n        // Phantom pools allow trading between token and pool BPT\n        let pairType: PairTypes;\n        if (isSameAddress(tokenIn, this.address)) {\n            pairType = PairTypes.BptToToken;\n        } else if (isSameAddress(tokenOut, this.address)) {\n            pairType = PairTypes.TokenToBpt;\n        } else {\n            pairType = PairTypes.TokenToToken;\n        }\n\n        const bptIndex = this.tokensList.indexOf(this.address);\n\n        // VirtualBPTSupply must be used for the maths\n        const virtualBptSupply = this.totalShares;\n\n        const poolPairData: PhantomStablePoolPairData = {\n            id: this.id,\n            address: this.address,\n            poolType: this.poolType,\n            pairType: pairType,\n            bptIndex: bptIndex,\n            tokenIn: tokenIn,\n            tokenOut: tokenOut,\n            balanceIn: parseFixed(balanceIn, decimalsIn),\n            balanceOut: parseFixed(balanceOut, decimalsOut),\n            swapFee: this.swapFee,\n            allBalances,\n            allBalancesScaled,\n            amp: this.amp,\n            tokenIndexIn: tokenIndexIn,\n            tokenIndexOut: tokenIndexOut,\n            decimalsIn: Number(decimalsIn),\n            decimalsOut: Number(decimalsOut),\n            tokenInPriceRate,\n            tokenOutPriceRate,\n            virtualBptSupply,\n        };\n\n        return PhantomStablePool.removeBPT(poolPairData);\n    }\n\n    getNormalizedLiquidity(\n        poolPairData: PhantomStablePoolPairData\n    ): OldBigNumber {\n        return universalNormalizedLiquidity(\n            this._derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n                poolPairData,\n                ZERO\n            )\n        );\n    }\n\n    getLimitAmountSwap(\n        poolPairData: PhantomStablePoolPairData,\n        swapType: SwapTypes\n    ): OldBigNumber {\n        // PoolPairData is using balances that have already been exchanged so need to convert back\n        if (swapType === SwapTypes.SwapExactIn) {\n            // Return max valid amount of tokenIn\n            // As an approx - use almost the total balance of token out as we can add any amount of tokenIn and expect some back\n            return bnum(\n                formatFixed(\n                    poolPairData.balanceOut\n                        .mul(this.ALMOST_ONE)\n                        .div(poolPairData.tokenOutPriceRate),\n                    poolPairData.decimalsOut\n                )\n            );\n        } else {\n            // Return max amount of tokenOut - approx is almost all balance\n            return bnum(\n                formatFixed(\n                    poolPairData.balanceOut\n                        .mul(this.ALMOST_ONE)\n                        .div(poolPairData.tokenOutPriceRate),\n                    poolPairData.decimalsOut\n                )\n            );\n        }\n    }\n\n    // Updates the balance of a given token for the pool\n    updateTokenBalanceForPool(token: string, newBalance: BigNumber): void {\n        // token is underlying in the pool\n        const T = this.tokens.find((t) => isSameAddress(t.address, token));\n        if (!T) throw Error('Pool does not contain this token');\n\n        // update total shares with BPT balance diff\n        if (isSameAddress(this.address, token)) {\n            const parsedTokenBalance = parseFixed(T.balance, T.decimals);\n            const diff = parsedTokenBalance.sub(newBalance);\n            const newTotalShares = this.totalShares.add(diff);\n            this.updateTotalShares(newTotalShares);\n        }\n        // update token balance with new balance\n        T.balance = formatFixed(newBalance, T.decimals);\n    }\n\n    updateTotalShares(newTotalShares: BigNumber): void {\n        this.totalShares = newTotalShares;\n    }\n\n    _exactTokenInForTokenOut(\n        poolPairData: PhantomStablePoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            // This code assumes that decimalsIn and decimalsOut is 18\n\n            if (amount.isZero()) return ZERO;\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            // In Phantom Pools every time there is a swap (token per token, bpt per token or token per bpt), we substract the fee from the amount in\n            const amtWithFeeEvm = this.subtractSwapFeeAmount(\n                parseFixed(amount.dp(18).toString(), 18),\n                poolPairData.swapFee\n            );\n            const amountConvertedEvm = amtWithFeeEvm\n                .mul(poolPairData.tokenInPriceRate)\n                .div(ONE);\n\n            let returnEvm: BigInt;\n\n            if (poolPairData.pairType === PairTypes.TokenToBpt) {\n                const amountsInBigInt = Array(\n                    poolPairData.allBalancesScaled.length\n                ).fill(BigInt(0));\n                amountsInBigInt[poolPairData.tokenIndexIn] =\n                    amountConvertedEvm.toBigInt();\n\n                returnEvm = _calcBptOutGivenExactTokensIn(\n                    this.amp.toBigInt(),\n                    poolPairData.allBalancesScaled.map((b) => b.toBigInt()),\n                    amountsInBigInt,\n                    poolPairData.virtualBptSupply.toBigInt(),\n                    BigInt(0)\n                );\n            } else if (poolPairData.pairType === PairTypes.BptToToken) {\n                returnEvm = _calcTokenOutGivenExactBptIn(\n                    this.amp.toBigInt(),\n                    poolPairData.allBalancesScaled.map((b) => b.toBigInt()),\n                    poolPairData.tokenIndexOut,\n                    amountConvertedEvm.toBigInt(),\n                    poolPairData.virtualBptSupply.toBigInt(),\n                    BigInt(0)\n                );\n            } else {\n                returnEvm = _calcOutGivenIn(\n                    this.amp.toBigInt(),\n                    poolPairData.allBalancesScaled.map((b) => b.toBigInt()),\n                    poolPairData.tokenIndexIn,\n                    poolPairData.tokenIndexOut,\n                    amountConvertedEvm.toBigInt(),\n                    BigInt(0)\n                );\n            }\n\n            const returnEvmWithRate = BigNumber.from(returnEvm)\n                .mul(ONE)\n                .div(poolPairData.tokenOutPriceRate);\n\n            // Return human scaled\n            return bnum(formatFixed(returnEvmWithRate, 18));\n        } catch (err) {\n            // console.error(`PhantomStable _evmoutGivenIn: ${err.message}`);\n            return ZERO;\n        }\n    }\n\n    _tokenInForExactTokenOut(\n        poolPairData: PhantomStablePoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            // This code assumes that decimalsIn and decimalsOut is 18\n\n            if (amount.isZero()) return ZERO;\n            // All values should use 1e18 fixed point\n            // i.e. 1USDC => 1e18 not 1e6\n            const amountConvertedEvm = parseFixed(amount.dp(18).toString(), 18)\n                .mul(poolPairData.tokenOutPriceRate)\n                .div(ONE);\n\n            let returnEvm: BigInt;\n\n            if (poolPairData.pairType === PairTypes.TokenToBpt) {\n                returnEvm = _calcTokenInGivenExactBptOut(\n                    this.amp.toBigInt(),\n                    poolPairData.allBalancesScaled.map((b) => b.toBigInt()),\n                    poolPairData.tokenIndexIn,\n                    amountConvertedEvm.toBigInt(),\n                    poolPairData.virtualBptSupply.toBigInt(),\n                    BigInt(0)\n                );\n            } else if (poolPairData.pairType === PairTypes.BptToToken) {\n                const amountsOutBigInt = Array(\n                    poolPairData.allBalancesScaled.length\n                ).fill(BigInt(0));\n                amountsOutBigInt[poolPairData.tokenIndexOut] =\n                    amountConvertedEvm.toBigInt();\n\n                returnEvm = _calcBptInGivenExactTokensOut(\n                    this.amp.toBigInt(),\n                    poolPairData.allBalancesScaled.map((b) => b.toBigInt()),\n                    amountsOutBigInt,\n                    poolPairData.virtualBptSupply.toBigInt(),\n                    BigInt(0) // Fee is handled below\n                );\n            } else {\n                returnEvm = _calcInGivenOut(\n                    this.amp.toBigInt(),\n                    poolPairData.allBalancesScaled.map((b) => b.toBigInt()),\n                    poolPairData.tokenIndexIn,\n                    poolPairData.tokenIndexOut,\n                    amountConvertedEvm.toBigInt(),\n                    BigInt(0) // Fee is handled below\n                );\n            }\n            // In Phantom Pools every time there is a swap (token per token, bpt per token or token per bpt), we substract the fee from the amount in\n            const returnEvmWithRate = BigNumber.from(returnEvm)\n                .mul(ONE)\n                .div(poolPairData.tokenInPriceRate);\n\n            const returnEvmWithFee = this.addSwapFeeAmount(\n                returnEvmWithRate,\n                poolPairData.swapFee\n            );\n\n            // return human number\n            return bnum(formatFixed(returnEvmWithFee, 18));\n        } catch (err) {\n            console.error(`PhantomStable _evminGivenOut: ${err.message}`);\n            return ZERO;\n        }\n    }\n\n    /**\n     * _calcTokensOutGivenExactBptIn\n     * @param bptAmountIn EVM scale.\n     * @returns EVM scale.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _calcTokensOutGivenExactBptIn(bptAmountIn: BigNumber): BigNumber[] {\n        // PhantomStables can only be exited by using BPT > token swaps\n        throw new Error(\n            'PhantomPool does not have exit pool (_calcTokensOutGivenExactBptIn).'\n        );\n    }\n\n    /**\n     * _calcBptOutGivenExactTokensIn\n     * @param amountsIn EVM Scale\n     * @returns EVM Scale\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _calcBptOutGivenExactTokensIn(amountsIn: BigNumber[]): BigNumber {\n        // PhantomStables can only be joined by using token > BPT swaps\n        throw new Error(\n            'PhantomPool does not have join pool (_calcBptOutGivenExactTokensIn).'\n        );\n    }\n\n    // this is the multiplicative inverse of the derivative of _exactTokenInForTokenOut\n    _spotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: PhantomStablePoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        const priceRateIn = bnum(\n            formatFixed(poolPairData.tokenInPriceRate, 18)\n        );\n        const priceRateOut = bnum(\n            formatFixed(poolPairData.tokenOutPriceRate, 18)\n        );\n        const amountConverted = amount.times(\n            bnum(formatFixed(poolPairData.tokenInPriceRate, 18))\n        );\n        let result: OldBigNumber;\n        if (poolPairData.pairType === PairTypes.TokenToBpt) {\n            result = phantomStableMath._spotPriceAfterSwapExactTokenInForBPTOut(\n                amountConverted,\n                poolPairData\n            );\n        } else if (poolPairData.pairType === PairTypes.BptToToken) {\n            result = phantomStableMath._spotPriceAfterSwapExactBPTInForTokenOut(\n                amountConverted,\n                poolPairData\n            );\n        } else {\n            result =\n                phantomStableMath._spotPriceAfterSwapExactTokenInForTokenOut(\n                    amountConverted,\n                    poolPairData\n                );\n        }\n        return result.div(priceRateIn).times(priceRateOut);\n    }\n\n    // this is the derivative of _tokenInForExactTokenOut\n    _spotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: PhantomStablePoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        const priceRateIn = bnum(\n            formatFixed(poolPairData.tokenInPriceRate, 18)\n        );\n        const priceRateOut = bnum(\n            formatFixed(poolPairData.tokenOutPriceRate, 18)\n        );\n        const amountConverted = amount.times(\n            formatFixed(poolPairData.tokenOutPriceRate, 18)\n        );\n        let result: OldBigNumber;\n        if (poolPairData.pairType === PairTypes.TokenToBpt) {\n            result = phantomStableMath._spotPriceAfterSwapTokenInForExactBPTOut(\n                amountConverted,\n                poolPairData\n            );\n        } else if (poolPairData.pairType === PairTypes.BptToToken) {\n            result = phantomStableMath._spotPriceAfterSwapBPTInForExactTokenOut(\n                amountConverted,\n                poolPairData\n            );\n        } else {\n            result =\n                phantomStableMath._spotPriceAfterSwapTokenInForExactTokenOut(\n                    amountConverted,\n                    poolPairData\n                );\n        }\n        return result.div(priceRateIn).times(priceRateOut);\n    }\n\n    _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: PhantomStablePoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        const priceRateOut = bnum(\n            formatFixed(poolPairData.tokenOutPriceRate, 18)\n        );\n        const amountConverted = amount.times(\n            formatFixed(poolPairData.tokenInPriceRate, 18)\n        );\n        let result: OldBigNumber;\n        if (poolPairData.pairType === PairTypes.TokenToBpt) {\n            result =\n                phantomStableMath._derivativeSpotPriceAfterSwapExactTokenInForBPTOut(\n                    amountConverted,\n                    poolPairData\n                );\n        } else if (poolPairData.pairType === PairTypes.BptToToken) {\n            result =\n                phantomStableMath._derivativeSpotPriceAfterSwapExactBPTInForTokenOut(\n                    amountConverted,\n                    poolPairData\n                );\n        } else {\n            result =\n                phantomStableMath._derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n                    amountConverted,\n                    poolPairData\n                );\n        }\n        return result.times(priceRateOut);\n    }\n\n    _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: PhantomStablePoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        const priceRateIn = bnum(\n            formatFixed(poolPairData.tokenInPriceRate, 18)\n        );\n        const priceRateOut = bnum(\n            formatFixed(poolPairData.tokenOutPriceRate, 18)\n        );\n        const amountConverted = amount.times(\n            formatFixed(poolPairData.tokenOutPriceRate, 18)\n        );\n        let result: OldBigNumber;\n        if (poolPairData.pairType === PairTypes.TokenToBpt) {\n            result =\n                phantomStableMath._derivativeSpotPriceAfterSwapTokenInForExactBPTOut(\n                    amountConverted,\n                    poolPairData\n                );\n        } else if (poolPairData.pairType === PairTypes.BptToToken) {\n            result =\n                phantomStableMath._derivativeSpotPriceAfterSwapBPTInForExactTokenOut(\n                    amountConverted,\n                    poolPairData\n                );\n        } else {\n            result =\n                phantomStableMath._derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n                    amountConverted,\n                    poolPairData\n                );\n        }\n        return result.div(priceRateIn).times(priceRateOut).times(priceRateOut);\n    }\n\n    subtractSwapFeeAmount(amount: BigNumber, swapFee: BigNumber): BigNumber {\n        // https://github.com/balancer-labs/balancer-v2-monorepo/blob/c18ff2686c61a8cbad72cdcfc65e9b11476fdbc3/pkg/pool-utils/contracts/BasePool.sol#L466\n        const feeAmount = amount.mul(swapFee).add(ONE.sub(1)).div(ONE);\n        return amount.sub(feeAmount);\n    }\n\n    addSwapFeeAmount(amount: BigNumber, swapFee: BigNumber): BigNumber {\n        // https://github.com/balancer-labs/balancer-v2-monorepo/blob/c18ff2686c61a8cbad72cdcfc65e9b11476fdbc3/pkg/pool-utils/contracts/BasePool.sol#L458\n        const feeAmount = ONE.sub(swapFee);\n        return amount.mul(ONE).add(feeAmount.sub(1)).div(feeAmount);\n    }\n}\n","import { BigNumber, formatFixed, parseFixed } from '@ethersproject/bignumber';\nimport { WeiPerEther as ONE, Zero } from '@ethersproject/constants';\nimport {\n    isSameAddress,\n    normaliseBalance,\n    normaliseAmount,\n    denormaliseAmount,\n} from '../../utils';\nimport { BigNumber as OldBigNumber, bnum, ZERO } from '../../utils/bignumber';\nimport { SubgraphPoolBase } from '../../types';\nimport {\n    _calcBptOutGivenExactTokensIn,\n    _calcTokenOutGivenExactBptIn,\n    _calcOutGivenIn,\n    _calcTokenInGivenExactBptOut,\n    _calcBptInGivenExactTokensOut,\n    _calcInGivenOut,\n    _calcTokensOutGivenExactBptIn,\n} from '../stablePool/stableMathBigInt';\nimport {\n    PhantomStablePool,\n    PhantomStablePoolPairData,\n    PhantomStablePoolToken,\n    PairTypes,\n} from '../phantomStablePool/phantomStablePool';\nexport class ComposableStablePool extends PhantomStablePool {\n    constructor(\n        id: string,\n        address: string,\n        amp: string,\n        swapFee: string,\n        totalShares: string,\n        tokens: PhantomStablePoolToken[],\n        tokensList: string[]\n    ) {\n        super(id, address, amp, swapFee, totalShares, tokens, tokensList);\n    }\n\n    static fromPool(pool: SubgraphPoolBase): ComposableStablePool {\n        if (!pool.amp)\n            throw new Error('ComposableStablePool missing amp factor');\n        return new ComposableStablePool(\n            pool.id,\n            pool.address,\n            pool.amp,\n            pool.swapFee,\n            pool.totalShares,\n            pool.tokens,\n            pool.tokensList\n        );\n    }\n\n    _exactTokenInForTokenOut(\n        poolPairData: PhantomStablePoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            // balances and amounts must be normalized to 1e18 fixed point - e.g. 1USDC => 1e18 not 1e6\n            // takes price rate into account\n\n            if (amount.isZero()) return ZERO;\n            const amountConvertedEvm = parseFixed(amount.dp(18).toString(), 18)\n                .mul(poolPairData.tokenInPriceRate)\n                .div(ONE);\n\n            let returnEvm: BigInt;\n\n            if (poolPairData.pairType === PairTypes.TokenToBpt) {\n                const amountsInBigInt = Array(\n                    poolPairData.allBalancesScaled.length\n                ).fill(BigInt(0));\n                amountsInBigInt[poolPairData.tokenIndexIn] =\n                    amountConvertedEvm.toBigInt();\n\n                returnEvm = _calcBptOutGivenExactTokensIn(\n                    this.amp.toBigInt(),\n                    poolPairData.allBalancesScaled.map((b) => b.toBigInt()),\n                    amountsInBigInt,\n                    poolPairData.virtualBptSupply.toBigInt(),\n                    poolPairData.swapFee.toBigInt()\n                );\n            } else if (poolPairData.pairType === PairTypes.BptToToken) {\n                returnEvm = _calcTokenOutGivenExactBptIn(\n                    this.amp.toBigInt(),\n                    poolPairData.allBalancesScaled.map((b) => b.toBigInt()),\n                    poolPairData.tokenIndexOut,\n                    amountConvertedEvm.toBigInt(),\n                    poolPairData.virtualBptSupply.toBigInt(),\n                    poolPairData.swapFee.toBigInt()\n                );\n            } else {\n                returnEvm = _calcOutGivenIn(\n                    this.amp.toBigInt(),\n                    poolPairData.allBalancesScaled.map((b) => b.toBigInt()),\n                    poolPairData.tokenIndexIn,\n                    poolPairData.tokenIndexOut,\n                    amountConvertedEvm.toBigInt(),\n                    poolPairData.swapFee.toBigInt()\n                );\n            }\n\n            const returnEvmWithRate = BigNumber.from(returnEvm)\n                .mul(ONE)\n                .div(poolPairData.tokenOutPriceRate);\n\n            // Return human scaled\n            return bnum(formatFixed(returnEvmWithRate, 18)).dp(\n                poolPairData.decimalsOut\n            );\n        } catch (err) {\n            // console.error(`PhantomStable _evmoutGivenIn: ${err.message}`);\n            return ZERO;\n        }\n    }\n\n    _tokenInForExactTokenOut(\n        poolPairData: PhantomStablePoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            if (amount.isZero()) return ZERO;\n            // balances and amounts must be normalized to 1e18 fixed point - e.g. 1USDC => 1e18 not 1e6\n            // takes price rate into account\n            const amountConvertedEvm = parseFixed(amount.dp(18).toString(), 18)\n                .mul(poolPairData.tokenOutPriceRate)\n                .div(ONE);\n\n            let returnEvm: BigInt;\n\n            if (poolPairData.pairType === PairTypes.TokenToBpt) {\n                returnEvm = _calcTokenInGivenExactBptOut(\n                    this.amp.toBigInt(),\n                    poolPairData.allBalancesScaled.map((b) => b.toBigInt()),\n                    poolPairData.tokenIndexIn,\n                    amountConvertedEvm.toBigInt(),\n                    poolPairData.virtualBptSupply.toBigInt(),\n                    poolPairData.swapFee.toBigInt()\n                );\n            } else if (poolPairData.pairType === PairTypes.BptToToken) {\n                const amountsOutBigInt = Array(\n                    poolPairData.allBalancesScaled.length\n                ).fill(BigInt(0));\n                amountsOutBigInt[poolPairData.tokenIndexOut] =\n                    amountConvertedEvm.toBigInt();\n\n                returnEvm = _calcBptInGivenExactTokensOut(\n                    this.amp.toBigInt(),\n                    poolPairData.allBalancesScaled.map((b) => b.toBigInt()),\n                    amountsOutBigInt,\n                    poolPairData.virtualBptSupply.toBigInt(),\n                    poolPairData.swapFee.toBigInt()\n                );\n            } else {\n                returnEvm = _calcInGivenOut(\n                    this.amp.toBigInt(),\n                    poolPairData.allBalancesScaled.map((b) => b.toBigInt()),\n                    poolPairData.tokenIndexIn,\n                    poolPairData.tokenIndexOut,\n                    amountConvertedEvm.toBigInt(),\n                    poolPairData.swapFee.toBigInt()\n                );\n            }\n            // In Phantom Pools every time there is a swap (token per token, bpt per token or token per bpt), we substract the fee from the amount in\n            const returnEvmWithRate = BigNumber.from(returnEvm)\n                .mul(ONE)\n                .div(poolPairData.tokenInPriceRate);\n\n            // return human number\n            return bnum(formatFixed(returnEvmWithRate, 18)).dp(\n                poolPairData.decimalsOut\n            );\n        } catch (err) {\n            console.error(`PhantomStable _evminGivenOut: ${err.message}`);\n            return ZERO;\n        }\n    }\n\n    /**\n     * _calcTokensOutGivenExactBptIn\n     * @param bptAmountIn EVM scale.\n     * @returns EVM scale.\n     */\n    _calcTokensOutGivenExactBptIn(bptAmountIn: BigNumber): BigNumber[] {\n        // balances and amounts must be normalized to 1e18 fixed point - e.g. 1USDC => 1e18 not 1e6\n        // takes price rate into account\n        const tokensWithoutBpt = this.tokens.filter(\n            (t) => !isSameAddress(t.address, this.address)\n        );\n        const balancesNormalised = tokensWithoutBpt.map((t) =>\n            normaliseBalance(t)\n        );\n        try {\n            const amountsOutNormalised = _calcTokensOutGivenExactBptIn(\n                balancesNormalised,\n                bptAmountIn.toBigInt(),\n                this.totalShares.toBigInt()\n            );\n            // We want to return denormalised amounts. e.g. 1USDC => 1e6 not 1e18\n            const amountsOut = amountsOutNormalised.map((a, i) =>\n                denormaliseAmount(a, tokensWithoutBpt[i])\n            );\n            return amountsOut.map((a) => BigNumber.from(a));\n        } catch (err) {\n            return new Array(balancesNormalised.length).fill(ZERO);\n        }\n    }\n\n    /**\n     * _calcBptOutGivenExactTokensIn\n     * @param amountsIn EVM Scale (Should not have value for BPT token)\n     * @returns EVM Scale\n     */\n    _calcBptOutGivenExactTokensIn(amountsIn: BigNumber[]): BigNumber {\n        try {\n            // balances and amounts must be normalized to 1e18 fixed point - e.g. 1USDC => 1e18 not 1e6\n            // takes price rate into account\n            const amountsInNormalised = new Array(amountsIn.length).fill(\n                BigInt(0)\n            );\n            const balancesNormalised = new Array(amountsIn.length).fill(\n                BigInt(0)\n            );\n            this.tokens\n                .filter((t) => !isSameAddress(t.address, this.address))\n                .forEach((token, i) => {\n                    amountsInNormalised[i] = normaliseAmount(\n                        BigInt(amountsIn[i].toString()),\n                        token\n                    );\n                    balancesNormalised[i] = normaliseBalance(token);\n                });\n            const bptAmountOut = _calcBptOutGivenExactTokensIn(\n                this.amp.toBigInt(),\n                balancesNormalised,\n                amountsInNormalised,\n                this.totalShares.toBigInt(),\n                this.swapFee.toBigInt()\n            );\n            return BigNumber.from(bptAmountOut.toString());\n        } catch (err) {\n            console.error(err);\n            return Zero;\n        }\n    }\n}\n","import { BigNumber } from '@ethersproject/bignumber';\n\n// SQRT constants\n\nexport const SQRT_1E_NEG_1 = BigNumber.from('316227766016837933');\nexport const SQRT_1E_NEG_3 = BigNumber.from('31622776601683793');\nexport const SQRT_1E_NEG_5 = BigNumber.from('3162277660168379');\nexport const SQRT_1E_NEG_7 = BigNumber.from('316227766016837');\nexport const SQRT_1E_NEG_9 = BigNumber.from('31622776601683');\nexport const SQRT_1E_NEG_11 = BigNumber.from('3162277660168');\nexport const SQRT_1E_NEG_13 = BigNumber.from('316227766016');\nexport const SQRT_1E_NEG_15 = BigNumber.from('31622776601');\nexport const SQRT_1E_NEG_17 = BigNumber.from('3162277660');\n\n// High precision\nexport const ONE_XP = BigNumber.from(10).pow(38); // 38 decimal places\n\n// Small number to prevent rounding errors\nexport const SMALL = BigNumber.from(10).pow(8); // 1e-10 in normal precision\n\n// Swap Limit factor\nexport const SWAP_LIMIT_FACTOR = BigNumber.from('999999000000000000');\n","import { BigNumber } from '@ethersproject/bignumber';\nimport { WeiPerEther as ONE } from '@ethersproject/constants';\nimport {\n    SQRT_1E_NEG_1,\n    SQRT_1E_NEG_3,\n    SQRT_1E_NEG_5,\n    SQRT_1E_NEG_7,\n    SQRT_1E_NEG_9,\n    SQRT_1E_NEG_11,\n    SQRT_1E_NEG_13,\n    SQRT_1E_NEG_15,\n    SQRT_1E_NEG_17,\n    ONE_XP,\n} from './constants';\n\n/////////\n/// ARITHMETIC HELPERS\n/////////\n\nexport function mulUp(a: BigNumber, b: BigNumber): BigNumber {\n    const product = a.mul(b);\n    return product.sub(1).div(ONE).add(1);\n}\n\nexport function divUp(a: BigNumber, b: BigNumber): BigNumber {\n    const aInflated = a.mul(ONE);\n    return aInflated.sub(1).div(b).add(1);\n}\n\nexport function mulDown(a: BigNumber, b: BigNumber): BigNumber {\n    const product = a.mul(b);\n    return product.div(ONE);\n}\n\nexport function divDown(a: BigNumber, b: BigNumber): BigNumber {\n    const aInflated = a.mul(ONE);\n    return aInflated.div(b);\n}\n\nexport function mulXpU(a: BigNumber, b: BigNumber): BigNumber {\n    return a.mul(b).div(ONE_XP);\n}\n\nexport function divXpU(a: BigNumber, b: BigNumber): BigNumber {\n    if (b.isZero()) throw new Error('ZERO DIVISION');\n    return a.mul(ONE_XP).div(b);\n}\n\nexport function mulDownMagU(a: BigNumber, b: BigNumber): BigNumber {\n    return a.mul(b).div(ONE);\n}\n\nexport function divDownMagU(a: BigNumber, b: BigNumber): BigNumber {\n    if (b.isZero()) throw new Error('ZERO DIVISION');\n    return a.mul(ONE).div(b);\n}\n\nexport function mulUpMagU(a: BigNumber, b: BigNumber): BigNumber {\n    const product = a.mul(b);\n    if (product.gt(0)) return product.sub(1).div(ONE).add(1);\n    else if (product.lt(0)) return product.add(1).div(ONE).sub(1);\n    else return BigNumber.from(0);\n}\n\nexport function divUpMagU(a: BigNumber, b: BigNumber): BigNumber {\n    if (b.isZero()) throw new Error('ZERO DIVISION');\n    if (b.lt(0)) {\n        b = b.mul(-1);\n        a = a.mul(-1);\n    }\n    if (a.isZero()) {\n        return BigNumber.from(0);\n    } else {\n        if (a.gt(0)) return a.mul(ONE).sub(1).div(b).add(1);\n        else return a.mul(ONE).add(1).div(b.sub(1));\n    }\n}\n\nexport function mulUpXpToNpU(a: BigNumber, b: BigNumber): BigNumber {\n    const TenPower19 = BigNumber.from(10).pow(19);\n    const b1 = b.div(TenPower19);\n    const b2 = b.isNegative()\n        ? b.mul(-1).mod(TenPower19).mul(-1)\n        : b.mod(TenPower19);\n    const prod1 = a.mul(b1);\n    const prod2 = a.mul(b2);\n    return prod1.lte(0) && prod2.lte(0)\n        ? prod1.add(prod2.div(TenPower19)).div(TenPower19)\n        : prod1.add(prod2.div(TenPower19)).sub(1).div(TenPower19).add(1);\n}\n\nexport function mulDownXpToNpU(a: BigNumber, b: BigNumber): BigNumber {\n    const TenPower19 = BigNumber.from(10).pow(19);\n    const b1 = b.div(TenPower19);\n    const b2 = b.isNegative()\n        ? b.mul(-1).mod(TenPower19).mul(-1)\n        : b.mod(TenPower19);\n    const prod1 = a.mul(b1);\n    const prod2 = a.mul(b2);\n    return prod1.gte(0) && prod2.gte(0)\n        ? prod1.add(prod2.div(TenPower19)).div(TenPower19)\n        : prod1.add(prod2.div(TenPower19)).add(1).div(TenPower19).sub(1);\n}\n\n/////////\n/// SQUARE ROOT\n/////////\n\nexport function sqrt(input: BigNumber, tolerance: BigNumber): BigNumber {\n    if (input.isZero()) {\n        return BigNumber.from(0);\n    }\n    let guess = makeInitialGuess(input);\n\n    // 7 iterations\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    for (const i of new Array(7).fill(0)) {\n        guess = guess.add(input.mul(ONE).div(guess)).div(2);\n    }\n\n    // Check square is more or less correct (in some epsilon range)\n    const guessSquared = guess.mul(guess).div(ONE);\n    if (\n        !(\n            guessSquared.lte(input.add(mulUp(guess, tolerance))) &&\n            guessSquared.gte(input.sub(mulUp(guess, tolerance)))\n        )\n    )\n        throw new Error('GyroEPool: sqrt failed');\n\n    return guess;\n}\n\nfunction makeInitialGuess(input: BigNumber) {\n    if (input.gte(ONE)) {\n        return BigNumber.from(2)\n            .pow(intLog2Halved(input.div(ONE)))\n            .mul(ONE);\n    } else {\n        if (input.lte('10')) {\n            return SQRT_1E_NEG_17;\n        }\n        if (input.lte('100')) {\n            return BigNumber.from('10000000000');\n        }\n        if (input.lte('1000')) {\n            return SQRT_1E_NEG_15;\n        }\n        if (input.lte('10000')) {\n            return BigNumber.from('100000000000');\n        }\n        if (input.lte('100000')) {\n            return SQRT_1E_NEG_13;\n        }\n        if (input.lte('1000000')) {\n            return BigNumber.from('1000000000000');\n        }\n        if (input.lte('10000000')) {\n            return SQRT_1E_NEG_11;\n        }\n        if (input.lte('100000000')) {\n            return BigNumber.from('10000000000000');\n        }\n        if (input.lte('1000000000')) {\n            return SQRT_1E_NEG_9;\n        }\n        if (input.lte('10000000000')) {\n            return BigNumber.from('100000000000000');\n        }\n        if (input.lte('100000000000')) {\n            return SQRT_1E_NEG_7;\n        }\n        if (input.lte('1000000000000')) {\n            return BigNumber.from('1000000000000000');\n        }\n        if (input.lte('10000000000000')) {\n            return SQRT_1E_NEG_5;\n        }\n        if (input.lte('100000000000000')) {\n            return BigNumber.from('10000000000000000');\n        }\n        if (input.lte('1000000000000000')) {\n            return SQRT_1E_NEG_3;\n        }\n        if (input.lte('10000000000000000')) {\n            return BigNumber.from('100000000000000000');\n        }\n        if (input.lte('100000000000000000')) {\n            return SQRT_1E_NEG_1;\n        }\n        return input;\n    }\n}\n\nfunction intLog2Halved(x: BigNumber) {\n    let n = 0;\n\n    for (let i = 128; i >= 2; i = i / 2) {\n        const factor = BigNumber.from(2).pow(i);\n        if (x.gte(factor)) {\n            x = x.div(factor);\n            n += i / 2;\n        }\n    }\n\n    return n;\n}\n","import { BigNumber } from '@ethersproject/bignumber';\nimport { WeiPerEther as ONE } from '@ethersproject/constants';\nimport {\n    sqrt,\n    mulUp,\n    divUp,\n    mulDown,\n    divDown,\n} from '../gyroHelpers/gyroSignedFixedPoint';\n\n/////////\n/// Virtual Parameter calculations\n/////////\n\nexport function _findVirtualParams(\n    invariant: BigNumber,\n    sqrtAlpha: BigNumber,\n    sqrtBeta: BigNumber\n): [BigNumber, BigNumber] {\n    return [divDown(invariant, sqrtBeta), mulDown(invariant, sqrtAlpha)];\n}\n\n/////////\n/// Invariant Calculation\n/////////\n\nexport function _calculateInvariant(\n    balances: BigNumber[], // balances\n    sqrtAlpha: BigNumber,\n    sqrtBeta: BigNumber\n): BigNumber {\n    /**********************************************************************************************\n        // Calculate with quadratic formula\n        // 0 = (1-sqrt(alpha/beta)*L^2 - (y/sqrt(beta)+x*sqrt(alpha))*L - x*y)\n        // 0 = a*L^2 + b*L + c\n        // here a > 0, b < 0, and c < 0, which is a special case that works well w/o negative numbers\n        // taking mb = -b and mc = -c:                            (1/2)\n        //                                  mb + (mb^2 + 4 * a * mc)^                   //\n        //                   L =    ------------------------------------------          //\n        //                                          2 * a                               //\n        //                                                                              //\n        **********************************************************************************************/\n    const [a, mb, bSquare, mc] = _calculateQuadraticTerms(\n        balances,\n        sqrtAlpha,\n        sqrtBeta\n    );\n\n    const invariant = _calculateQuadratic(a, mb, bSquare, mc);\n\n    return invariant;\n}\n\nexport function _calculateQuadraticTerms(\n    balances: BigNumber[],\n    sqrtAlpha: BigNumber,\n    sqrtBeta: BigNumber\n): [BigNumber, BigNumber, BigNumber, BigNumber] {\n    const a = ONE.sub(divDown(sqrtAlpha, sqrtBeta));\n    const bterm0 = divDown(balances[1], sqrtBeta);\n    const bterm1 = mulDown(balances[0], sqrtAlpha);\n    const mb = bterm0.add(bterm1);\n    const mc = mulDown(balances[0], balances[1]);\n\n    // For better fixed point precision, calculate in expanded form w/ re-ordering of multiplications\n    // b^2 = x^2 * alpha + x*y*2*sqrt(alpha/beta) + y^2 / beta\n    let bSquare = mulDown(\n        mulDown(mulDown(balances[0], balances[0]), sqrtAlpha),\n        sqrtAlpha\n    );\n    const bSq2 = divDown(\n        mulDown(\n            mulDown(mulDown(balances[0], balances[1]), ONE.mul(2)),\n            sqrtAlpha\n        ),\n        sqrtBeta\n    );\n\n    const bSq3 = divDown(\n        mulDown(balances[1], balances[1]),\n        mulUp(sqrtBeta, sqrtBeta)\n    );\n\n    bSquare = bSquare.add(bSq2).add(bSq3);\n\n    return [a, mb, bSquare, mc];\n}\n\nexport function _calculateQuadratic(\n    a: BigNumber,\n    mb: BigNumber,\n    bSquare: BigNumber,\n    mc: BigNumber\n): BigNumber {\n    const denominator = mulUp(a, ONE.mul(2));\n    // order multiplications for fixed point precision\n    const addTerm = mulDown(mulDown(mc, ONE.mul(4)), a);\n    // The minus sign in the radicand cancels out in this special case, so we add\n    const radicand = bSquare.add(addTerm);\n    const sqrResult = sqrt(radicand, BigNumber.from(5));\n    // The minus sign in the numerator cancels out in this special case\n    const numerator = mb.add(sqrResult);\n    const invariant = divDown(numerator, denominator);\n\n    return invariant;\n}\n\n/////////\n/// Swap functions\n/////////\n\n// SwapType = 'swapExactIn'\nexport function _calcOutGivenIn(\n    balanceIn: BigNumber,\n    balanceOut: BigNumber,\n    amountIn: BigNumber,\n    virtualParamIn: BigNumber,\n    virtualParamOut: BigNumber\n): BigNumber {\n    /**********************************************************************************************\n        // Described for X = `in' asset and Y = `out' asset, but equivalent for the other case       //\n        // dX = incrX  = amountIn  > 0                                                               //\n        // dY = incrY = amountOut < 0                                                                //\n        // x = balanceIn             x' = x +  virtualParamX                                         //\n        // y = balanceOut            y' = y +  virtualParamY                                         //\n        // L  = inv.Liq                   /              L^2            \\                            //\n        //                   - dy = y' - |   --------------------------  |                           //\n        //  x' = virtIn                   \\          ( x' + dX)         /                            //\n        //  y' = virtOut                                                                             //\n        // Note that -dy > 0 is what the trader receives.                                            //\n        // We exploit the fact that this formula is symmetric up to virtualParam{X,Y}.               //\n        **********************************************************************************************/\n\n    // The factors in total lead to a multiplicative \"safety margin\" between the employed virtual offsets\n    // very slightly larger than 3e-18.\n    const virtInOver = balanceIn.add(mulUp(virtualParamIn, ONE.add(2)));\n    const virtOutUnder = balanceOut.add(mulDown(virtualParamOut, ONE.sub(1)));\n\n    const amountOut = divDown(\n        mulDown(virtOutUnder, amountIn),\n        virtInOver.add(amountIn)\n    );\n\n    if (amountOut.gt(balanceOut)) throw new Error('ASSET_BOUNDS_EXCEEDED');\n\n    return amountOut;\n}\n// SwapType = 'swapExactOut'\nexport function _calcInGivenOut(\n    balanceIn: BigNumber,\n    balanceOut: BigNumber,\n    amountOut: BigNumber,\n    virtualParamIn: BigNumber,\n    virtualParamOut: BigNumber\n): BigNumber {\n    /**********************************************************************************************\n      // dX = incrX  = amountIn  > 0                                                               //\n      // dY = incrY  = amountOut < 0                                                               //\n      // x = balanceIn             x' = x +  virtualParamX                                         //\n      // y = balanceOut            y' = y +  virtualParamY                                         //\n      // x = balanceIn                                                                             //\n      // L  = inv.Liq                /              L^2             \\                              //\n      //                     dx =   |   --------------------------  |  -  x'                       //\n      // x' = virtIn                \\         ( y' + dy)           /                               //\n      // y' = virtOut                                                                              //\n      // Note that dy < 0 < dx.                                                                    //\n      **********************************************************************************************/\n\n    if (amountOut.gt(balanceOut)) throw new Error('ASSET_BOUNDS_EXCEEDED');\n\n    // The factors in total lead to a multiplicative \"safety margin\" between the employed virtual offsets\n    // very slightly larger than 3e-18.\n    const virtInOver = balanceIn.add(mulUp(virtualParamIn, ONE.add(2)));\n    const virtOutUnder = balanceOut.add(mulDown(virtualParamOut, ONE.sub(1)));\n\n    const amountIn = divUp(\n        mulUp(virtInOver, amountOut),\n        virtOutUnder.sub(amountOut)\n    );\n\n    return amountIn;\n}\n\n// /////////\n// ///  Spot price function\n// /////////\n\nexport function _calculateNewSpotPrice(\n    balances: BigNumber[],\n    inAmount: BigNumber,\n    outAmount: BigNumber,\n    virtualParamIn: BigNumber,\n    virtualParamOut: BigNumber,\n    swapFee: BigNumber\n): BigNumber {\n    /**********************************************************************************************\n        // dX = incrX  = amountIn  > 0                                                               //\n        // dY = incrY  = amountOut < 0                                                               //\n        // x = balanceIn             x' = x +  virtualParamX                                         //\n        // y = balanceOut            y' = y +  virtualParamY                                         //\n        // s = swapFee                                                                               //\n        // L  = inv.Liq                1   /     x' + (1 - s) * dx        \\                          //\n        //                     p_y =  --- |   --------------------------  |                          //\n        // x' = virtIn                1-s  \\         y' + dy              /                          //\n        // y' = virtOut                                                                              //\n        // Note that dy < 0 < dx.                                                                    //\n        **********************************************************************************************/\n\n    const afterFeeMultiplier = ONE.sub(swapFee); // 1 - s\n    const virtIn = balances[0].add(virtualParamIn); // x + virtualParamX = x'\n    const numerator = virtIn.add(mulDown(afterFeeMultiplier, inAmount)); // x' + (1 - s) * dx\n    const virtOut = balances[1].add(virtualParamOut); // y + virtualParamY = y'\n    const denominator = mulDown(afterFeeMultiplier, virtOut.sub(outAmount)); // (1 - s) * (y' + dy)\n    const newSpotPrice = divDown(numerator, denominator);\n\n    return newSpotPrice;\n}\n\n// /////////\n// ///  Derivatives of spotPriceAfterSwap\n// /////////\n\n// SwapType = 'swapExactIn'\nexport function _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n    balances: BigNumber[],\n    outAmount: BigNumber,\n    virtualParamOut: BigNumber\n): BigNumber {\n    /**********************************************************************************************                                                        \n        // dy = incrY  = amountOut < 0                                                               //\n                                                                                                     //\n        // y = balanceOut            y' = y +  virtualParamY = virtOut                               //\n        //                                                                                           //\n        //                                 /              1               \\                          //\n        //                  (p_y)' =   2  |   --------------------------  |                          //\n        //                                 \\           y' + dy            /                          //\n        //                                                                                           //\n        // Note that dy < 0                                                                          //\n        **********************************************************************************************/\n\n    const TWO = BigNumber.from(2).mul(ONE);\n    const virtOut = balances[1].add(virtualParamOut); // y' = y + virtualParamY\n    const denominator = virtOut.sub(outAmount); // y' + dy\n\n    const derivative = divDown(TWO, denominator);\n\n    return derivative;\n}\n\n// SwapType = 'swapExactOut'\nexport function _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n    balances: BigNumber[],\n    inAmount: BigNumber,\n    outAmount: BigNumber,\n    virtualParamIn: BigNumber,\n    virtualParamOut: BigNumber,\n    swapFee: BigNumber\n): BigNumber {\n    /**********************************************************************************************\n        // dX = incrX  = amountIn  > 0                                                               //\n        // dY = incrY  = amountOut < 0                                                               //\n        // x = balanceIn             x' = x +  virtualParamX                                         //\n        // y = balanceOut            y' = y +  virtualParamY                                         //\n        // s = swapFee                                                                               //\n        // L  = inv.Liq                1       /     x' + (1 - s) * dx        \\                      //\n        //                     p_y =  --- (2) |   --------------------------  |                      //\n        // x' = virtIn                1-s      \\         (y' + dy)^2          /                      //\n        // y' = virtOut                                                                              //\n        // Note that dy < 0 < dx.                                                                    //\n        **********************************************************************************************/\n\n    const TWO = BigNumber.from(2).mul(ONE);\n    const afterFeeMultiplier = ONE.sub(swapFee); // 1 - s\n    const virtIn = balances[0].add(virtualParamIn); // x + virtualParamX = x'\n    const numerator = virtIn.add(mulDown(afterFeeMultiplier, inAmount)); // x' + (1 - s) * dx\n    const virtOut = balances[1].add(virtualParamOut); // y + virtualParamY = y'\n    const denominator = mulDown(virtOut.sub(outAmount), virtOut.sub(outAmount)); // (y' + dy)^2\n    const factor = divDown(TWO, afterFeeMultiplier); // 2 / (1 - s)\n\n    const derivative = mulDown(factor, divDown(numerator, denominator));\n\n    return derivative;\n}\n\n// /////////\n// ///  Normalized Liquidity measured with respect to the in-asset.\n// /////////\nexport function _getNormalizedLiquidity(\n    balances: BigNumber[],\n    virtualParamOut: BigNumber\n): BigNumber {\n    /**********************************************************************************************\n    // x = balanceOut             x' = x +  virtualParamOut                                      //\n    // s = swapFee                                                                               //\n    //                                                                                           //\n    //                             normalizedLiquidity =  0.5 * x'                               //\n    //                                                                                           //\n    // x' = virtOut                                                                              //\n    // Note that balances = [balanceIn, balanceOut].                                             //\n    **********************************************************************************************/\n\n    const virtOut = balances[1].add(virtualParamOut);\n    return virtOut.div(2);\n}\n","import { BigNumber, parseFixed } from '@ethersproject/bignumber';\nimport { WeiPerEther as ONE } from '@ethersproject/constants';\n\n////////\n/// Normalize balances\n////////\nexport function _normalizeBalances(\n    balances: BigNumber[],\n    decimals: number[]\n): BigNumber[] {\n    const scalingFactors = decimals.map((d) => parseFixed('1', d));\n\n    return balances.map((bal, index) =>\n        bal.mul(ONE).div(scalingFactors[index])\n    );\n}\n\n/////////\n/// Fee calculations\n/////////\n\nexport function _reduceFee(amountIn: BigNumber, swapFee: BigNumber): BigNumber {\n    const feeAmount = amountIn.mul(swapFee).div(ONE);\n    return amountIn.sub(feeAmount);\n}\n\nexport function _addFee(amountIn: BigNumber, swapFee: BigNumber): BigNumber {\n    return amountIn.mul(ONE).div(ONE.sub(swapFee));\n}\n","import { getAddress } from '@ethersproject/address';\nimport { WeiPerEther as ONE, Zero } from '@ethersproject/constants';\nimport { formatFixed, BigNumber } from '@ethersproject/bignumber';\nimport { BigNumber as OldBigNumber, bnum, ZERO } from '../../utils/bignumber';\n\nimport {\n    PoolBase,\n    PoolPairBase,\n    PoolTypes,\n    SubgraphToken,\n    SwapTypes,\n    SubgraphPoolBase,\n} from '../../types';\nimport { isSameAddress, safeParseFixed } from '../../utils';\nimport {\n    _calculateInvariant,\n    _calcOutGivenIn,\n    _calcInGivenOut,\n    _findVirtualParams,\n    _calculateNewSpotPrice,\n    _derivativeSpotPriceAfterSwapExactTokenInForTokenOut,\n    _derivativeSpotPriceAfterSwapTokenInForExactTokenOut,\n} from './gyro2Math';\nimport {\n    _normalizeBalances,\n    _reduceFee,\n    _addFee,\n} from '../gyroHelpers/helpers';\nimport { mulDown, divDown } from '../gyroHelpers/gyroSignedFixedPoint';\nimport { SWAP_LIMIT_FACTOR } from '../gyroHelpers/constants';\nimport { universalNormalizedLiquidity } from '../liquidity';\n\nexport type Gyro2PoolPairData = PoolPairBase & {\n    sqrtAlpha: BigNumber;\n    sqrtBeta: BigNumber;\n};\n\nexport type Gyro2PoolToken = Pick<\n    SubgraphToken,\n    'address' | 'balance' | 'decimals'\n>;\n\nexport class Gyro2Pool implements PoolBase<Gyro2PoolPairData> {\n    poolType: PoolTypes = PoolTypes.Gyro2;\n    id: string;\n    address: string;\n    tokensList: string[];\n    tokens: Gyro2PoolToken[];\n    swapFee: BigNumber;\n    totalShares: BigNumber;\n    sqrtAlpha: BigNumber;\n    sqrtBeta: BigNumber;\n\n    static fromPool(pool: SubgraphPoolBase): Gyro2Pool {\n        if (!pool.sqrtAlpha || !pool.sqrtBeta)\n            throw new Error(\n                'Pool missing Gyro2 sqrtAlpha and/or sqrtBeta params'\n            );\n\n        return new Gyro2Pool(\n            pool.id,\n            pool.address,\n            pool.swapFee,\n            pool.totalShares,\n            pool.tokens as Gyro2PoolToken[],\n            pool.tokensList,\n            pool.sqrtAlpha,\n            pool.sqrtBeta\n        );\n    }\n\n    constructor(\n        id: string,\n        address: string,\n        swapFee: string,\n        totalShares: string,\n        tokens: Gyro2PoolToken[],\n        tokensList: string[],\n        sqrtAlpha: string,\n        sqrtBeta: string\n    ) {\n        this.id = id;\n        this.address = address;\n        this.swapFee = safeParseFixed(swapFee, 18);\n        this.totalShares = safeParseFixed(totalShares, 18);\n        this.tokens = tokens;\n        this.tokensList = tokensList;\n        this.sqrtAlpha = safeParseFixed(sqrtAlpha, 18);\n        this.sqrtBeta = safeParseFixed(sqrtBeta, 18);\n    }\n\n    parsePoolPairData(tokenIn: string, tokenOut: string): Gyro2PoolPairData {\n        const tokenInIndex = this.tokens.findIndex(\n            (t) => getAddress(t.address) === getAddress(tokenIn)\n        );\n        if (tokenInIndex < 0) throw 'Pool does not contain tokenIn';\n        const tI = this.tokens[tokenInIndex];\n        const balanceIn = tI.balance;\n        const decimalsIn = tI.decimals;\n\n        const tokenOutIndex = this.tokens.findIndex(\n            (t) => getAddress(t.address) === getAddress(tokenOut)\n        );\n        if (tokenOutIndex < 0) throw 'Pool does not contain tokenOut';\n        const tO = this.tokens[tokenOutIndex];\n        const balanceOut = tO.balance;\n        const decimalsOut = tO.decimals;\n\n        const tokenInIsToken0 = tokenInIndex === 0;\n\n        const poolPairData: Gyro2PoolPairData = {\n            id: this.id,\n            address: this.address,\n            poolType: this.poolType,\n            tokenIn: tokenIn,\n            tokenOut: tokenOut,\n            decimalsIn: Number(decimalsIn),\n            decimalsOut: Number(decimalsOut),\n            balanceIn: safeParseFixed(balanceIn, decimalsIn),\n            balanceOut: safeParseFixed(balanceOut, decimalsOut),\n            swapFee: this.swapFee,\n            sqrtAlpha: tokenInIsToken0\n                ? this.sqrtAlpha\n                : divDown(ONE, this.sqrtBeta),\n            sqrtBeta: tokenInIsToken0\n                ? this.sqrtBeta\n                : divDown(ONE, this.sqrtAlpha),\n        };\n\n        return poolPairData;\n    }\n\n    getNormalizedLiquidity(poolPairData: Gyro2PoolPairData): OldBigNumber {\n        return universalNormalizedLiquidity(\n            this._derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n                poolPairData,\n                ZERO\n            )\n        );\n    }\n\n    getLimitAmountSwap(\n        poolPairData: Gyro2PoolPairData,\n        swapType: SwapTypes\n    ): OldBigNumber {\n        if (swapType === SwapTypes.SwapExactIn) {\n            const balances = [poolPairData.balanceIn, poolPairData.balanceOut];\n            const normalizedBalances = _normalizeBalances(balances, [\n                poolPairData.decimalsIn,\n                poolPairData.decimalsOut,\n            ]);\n            const invariant = _calculateInvariant(\n                normalizedBalances,\n                poolPairData.sqrtAlpha,\n                poolPairData.sqrtBeta\n            );\n            const maxAmountInAssetInPool = mulDown(\n                invariant,\n                divDown(ONE, poolPairData.sqrtAlpha).sub(\n                    divDown(ONE, poolPairData.sqrtBeta)\n                )\n            ); // x+ = L * (1/sqrtAlpha - 1/sqrtBeta)\n            const limitAmountIn = maxAmountInAssetInPool.sub(\n                normalizedBalances[0]\n            );\n            const limitAmountInPlusSwapFee = divDown(\n                limitAmountIn,\n                ONE.sub(poolPairData.swapFee)\n            );\n            return bnum(\n                formatFixed(\n                    mulDown(limitAmountInPlusSwapFee, SWAP_LIMIT_FACTOR),\n                    18\n                )\n            );\n        } else {\n            return bnum(\n                formatFixed(\n                    mulDown(poolPairData.balanceOut, SWAP_LIMIT_FACTOR),\n                    poolPairData.decimalsOut\n                )\n            );\n        }\n    }\n\n    // Updates the balance of a given token for the pool\n    updateTokenBalanceForPool(token: string, newBalance: BigNumber): void {\n        // token is BPT\n        if (isSameAddress(this.address, token)) {\n            this.updateTotalShares(newBalance);\n        } else {\n            // token is underlying in the pool\n            const T = this.tokens.find((t) => isSameAddress(t.address, token));\n            if (!T) throw Error('Pool does not contain this token');\n            T.balance = formatFixed(newBalance, T.decimals);\n        }\n    }\n\n    updateTotalShares(newTotalShares: BigNumber): void {\n        this.totalShares = newTotalShares;\n    }\n\n    _exactTokenInForTokenOut(\n        poolPairData: Gyro2PoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            const balances = [poolPairData.balanceIn, poolPairData.balanceOut];\n            const normalizedBalances = _normalizeBalances(balances, [\n                poolPairData.decimalsIn,\n                poolPairData.decimalsOut,\n            ]);\n            const invariant = _calculateInvariant(\n                normalizedBalances,\n                poolPairData.sqrtAlpha,\n                poolPairData.sqrtBeta\n            );\n            const [virtualParamIn, virtualParamOut] = _findVirtualParams(\n                invariant,\n                poolPairData.sqrtAlpha,\n                poolPairData.sqrtBeta\n            );\n            const inAmount = safeParseFixed(amount.toString(), 18);\n            const inAmountLessFee = _reduceFee(inAmount, poolPairData.swapFee);\n\n            const outAmount = _calcOutGivenIn(\n                normalizedBalances[0],\n                normalizedBalances[1],\n                inAmountLessFee,\n                virtualParamIn,\n                virtualParamOut\n            );\n\n            return bnum(formatFixed(outAmount, 18));\n        } catch (error) {\n            return bnum(0);\n        }\n    }\n\n    _tokenInForExactTokenOut(\n        poolPairData: Gyro2PoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            const outAmount = safeParseFixed(amount.toString(), 18);\n            const balances = [poolPairData.balanceIn, poolPairData.balanceOut];\n            const normalizedBalances = _normalizeBalances(balances, [\n                poolPairData.decimalsIn,\n                poolPairData.decimalsOut,\n            ]);\n            const invariant = _calculateInvariant(\n                normalizedBalances,\n                poolPairData.sqrtAlpha,\n                poolPairData.sqrtBeta\n            );\n            const [virtualParamIn, virtualParamOut] = _findVirtualParams(\n                invariant,\n                poolPairData.sqrtAlpha,\n                poolPairData.sqrtBeta\n            );\n            const inAmountLessFee = _calcInGivenOut(\n                normalizedBalances[0],\n                normalizedBalances[1],\n                outAmount,\n                virtualParamIn,\n                virtualParamOut\n            );\n            const inAmount = _addFee(inAmountLessFee, poolPairData.swapFee);\n\n            return bnum(formatFixed(inAmount, 18));\n        } catch (error) {\n            return bnum(0);\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _calcTokensOutGivenExactBptIn(bptAmountIn: BigNumber): BigNumber[] {\n        // Missing maths for this\n        return new Array(this.tokens.length).fill(Zero);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _calcBptOutGivenExactTokensIn(amountsIn: BigNumber[]): BigNumber {\n        // Missing maths for this\n        return Zero;\n    }\n\n    _spotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: Gyro2PoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            const balances = [poolPairData.balanceIn, poolPairData.balanceOut];\n            const normalizedBalances = _normalizeBalances(balances, [\n                poolPairData.decimalsIn,\n                poolPairData.decimalsOut,\n            ]);\n            const invariant = _calculateInvariant(\n                normalizedBalances,\n                poolPairData.sqrtAlpha,\n                poolPairData.sqrtBeta\n            );\n            const [virtualParamIn, virtualParamOut] = _findVirtualParams(\n                invariant,\n                poolPairData.sqrtAlpha,\n                poolPairData.sqrtBeta\n            );\n            const inAmount = safeParseFixed(amount.toString(), 18);\n            const inAmountLessFee = _reduceFee(inAmount, poolPairData.swapFee);\n            const outAmount = _calcOutGivenIn(\n                normalizedBalances[0],\n                normalizedBalances[1],\n                inAmountLessFee,\n                virtualParamIn,\n                virtualParamOut\n            );\n            const newSpotPrice = _calculateNewSpotPrice(\n                normalizedBalances,\n                inAmount,\n                outAmount,\n                virtualParamIn,\n                virtualParamOut,\n                poolPairData.swapFee\n            );\n            return bnum(formatFixed(newSpotPrice, 18));\n        } catch (error) {\n            return bnum(0);\n        }\n    }\n\n    _spotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: Gyro2PoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            const outAmount = safeParseFixed(amount.toString(), 18);\n            const balances = [poolPairData.balanceIn, poolPairData.balanceOut];\n            const normalizedBalances = _normalizeBalances(balances, [\n                poolPairData.decimalsIn,\n                poolPairData.decimalsOut,\n            ]);\n            const invariant = _calculateInvariant(\n                normalizedBalances,\n                poolPairData.sqrtAlpha,\n                poolPairData.sqrtBeta\n            );\n            const [virtualParamIn, virtualParamOut] = _findVirtualParams(\n                invariant,\n                poolPairData.sqrtAlpha,\n                poolPairData.sqrtBeta\n            );\n            const inAmountLessFee = _calcInGivenOut(\n                normalizedBalances[0],\n                normalizedBalances[1],\n                outAmount,\n                virtualParamIn,\n                virtualParamOut\n            );\n            const inAmount = _addFee(inAmountLessFee, poolPairData.swapFee);\n            const newSpotPrice = _calculateNewSpotPrice(\n                normalizedBalances,\n                inAmount,\n                outAmount,\n                virtualParamIn,\n                virtualParamOut,\n                poolPairData.swapFee\n            );\n\n            return bnum(formatFixed(newSpotPrice, 18));\n        } catch (error) {\n            return bnum(0);\n        }\n    }\n\n    _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: Gyro2PoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            const balances = [poolPairData.balanceIn, poolPairData.balanceOut];\n            const normalizedBalances = _normalizeBalances(balances, [\n                poolPairData.decimalsIn,\n                poolPairData.decimalsOut,\n            ]);\n            const invariant = _calculateInvariant(\n                normalizedBalances,\n                poolPairData.sqrtAlpha,\n                poolPairData.sqrtBeta\n            );\n            const [virtualParamIn, virtualParamOut] = _findVirtualParams(\n                invariant,\n                poolPairData.sqrtAlpha,\n                poolPairData.sqrtBeta\n            );\n            const inAmount = safeParseFixed(amount.toString(), 18);\n            const inAmountLessFee = _reduceFee(inAmount, poolPairData.swapFee);\n            const outAmount = _calcOutGivenIn(\n                normalizedBalances[0],\n                normalizedBalances[1],\n                inAmountLessFee,\n                virtualParamIn,\n                virtualParamOut\n            );\n            const derivative =\n                _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n                    normalizedBalances,\n                    outAmount,\n                    virtualParamOut\n                );\n\n            return bnum(formatFixed(derivative, 18));\n        } catch (error) {\n            return bnum(0);\n        }\n    }\n\n    _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: Gyro2PoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            const outAmount = safeParseFixed(amount.toString(), 18);\n            const balances = [poolPairData.balanceIn, poolPairData.balanceOut];\n            const normalizedBalances = _normalizeBalances(balances, [\n                poolPairData.decimalsIn,\n                poolPairData.decimalsOut,\n            ]);\n            const invariant = _calculateInvariant(\n                normalizedBalances,\n                poolPairData.sqrtAlpha,\n                poolPairData.sqrtBeta\n            );\n            const [virtualParamIn, virtualParamOut] = _findVirtualParams(\n                invariant,\n                poolPairData.sqrtAlpha,\n                poolPairData.sqrtBeta\n            );\n            const inAmountLessFee = _calcInGivenOut(\n                normalizedBalances[0],\n                normalizedBalances[1],\n                outAmount,\n                virtualParamIn,\n                virtualParamOut\n            );\n            const inAmount = _addFee(inAmountLessFee, poolPairData.swapFee);\n\n            const derivative =\n                _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n                    normalizedBalances,\n                    inAmount,\n                    outAmount,\n                    virtualParamIn,\n                    virtualParamOut,\n                    poolPairData.swapFee\n                );\n\n            return bnum(formatFixed(derivative, 18));\n        } catch (error) {\n            return bnum(0);\n        }\n    }\n}\n","import { BigNumber } from '@ethersproject/bignumber';\n\n// POW3 constant\n// Threshold of x where the normal method of computing x^3 would overflow and we need a workaround.\n// Equal to 4.87e13 scaled; 4.87e13 is the point x where x**3 * 10**36 = (x**2 native) * (x native) ~ 2**256\nexport const _SAFE_LARGE_POW3_THRESHOLD = BigNumber.from(10).pow(29).mul(487);\nexport const MIDDECIMAL = BigNumber.from(10).pow(9); // splits the fixed point decimals into two equal parts.\n\n// Stopping criterion for the Newton iteration that computes the invariant:\n// - Stop if the step width doesn't shrink anymore by at least a factor _INVARIANT_SHRINKING_FACTOR_PER_STEP.\n// - ... but in any case, make at least _INVARIANT_MIN_ITERATIONS iterations. This is useful to compensate for a\n// less-than-ideal starting point, which is important when alpha is small.\nexport const _INVARIANT_SHRINKING_FACTOR_PER_STEP = 8;\nexport const _INVARIANT_MIN_ITERATIONS = 5;\n","import { BigNumber } from '@ethersproject/bignumber';\nimport { WeiPerEther as ONE } from '@ethersproject/constants';\nimport { _SAFE_LARGE_POW3_THRESHOLD, MIDDECIMAL } from './constants';\n\n// Helpers\nexport function _safeLargePow3ADown(\n    l: BigNumber,\n    root3Alpha: BigNumber,\n    d: BigNumber\n): BigNumber {\n    let ret = BigNumber.from(0);\n    if (l.lte(_SAFE_LARGE_POW3_THRESHOLD)) {\n        // Simple case where there is no overflow\n        ret = l.mul(l).div(ONE).mul(l).div(ONE);\n        ret = ret.sub(\n            ret\n                .mul(root3Alpha)\n                .div(ONE)\n                .mul(root3Alpha)\n                .div(ONE)\n                .mul(root3Alpha)\n                .div(ONE)\n        );\n        ret = ret.mul(ONE).div(d);\n    } else {\n        ret = l.mul(l).div(ONE);\n\n        // Compute l^2 * l * (1 - root3Alpha^3)\n        // The following products split up the factors into different groups of decimal places to reduce temorary\n        // blowup and prevent overflow.\n        // No precision is lost.\n        ret = ret.mul(l.div(ONE)).add(ret.mul(l.mod(ONE)).div(ONE));\n\n        let x = ret;\n\n        for (let i = 0; i < 3; i++) {\n            x = x\n                .mul(root3Alpha.div(MIDDECIMAL))\n                .div(MIDDECIMAL)\n                .add(x.mul(root3Alpha.mod(MIDDECIMAL)));\n        }\n        ret = ret.sub(x);\n\n        // We perform half-precision division to reduce blowup.\n        // In contrast to the above multiplications, this loses precision if d is small. However, tests show that,\n        // for the l and d values considered here, the precision lost would be below the precision of the fixed\n        // point type itself, so nothing is actually lost.\n        ret = ret.mul(MIDDECIMAL).div(d.div(MIDDECIMAL));\n    }\n    return ret;\n}\n","import { BigNumber } from '@ethersproject/bignumber';\nimport { WeiPerEther as ONE } from '@ethersproject/constants';\nimport {\n    _INVARIANT_MIN_ITERATIONS,\n    _INVARIANT_SHRINKING_FACTOR_PER_STEP,\n} from './constants';\nimport { _safeLargePow3ADown } from './helpers';\nimport {\n    mulUp,\n    divUp,\n    mulDown,\n    divDown,\n    sqrt,\n} from '../gyroHelpers/gyroSignedFixedPoint';\n\n/////////\n/// Invariant Calculation\n/////////\n\n// Invariant is used to collect protocol swap fees by comparing its value between two times.\n// So we can round always to the same direction. It is also used to initiate the BPT amount\n// and, because there is a minimum BPT, we round down the invariant.\n// Argument root3Alpha = cube root of the lower price bound (symmetric across assets)\n// Note: all price bounds for the pool are alpha and 1/alpha\n\nexport function _calculateInvariant(\n    balances: BigNumber[],\n    root3Alpha: BigNumber\n): BigNumber {\n    /**********************************************************************************************\n// Calculate root of cubic:\n// (1-alpha)L^3 - (x+y+z) * alpha^(2/3) * L^2 - (x*y + y*z + x*z) * alpha^(1/3) * L - x*y*z = 0\n// These coefficients are a,b,c,d respectively\n// here, a > 0, b < 0, c < 0, and d < 0\n// taking mb = -b and mc = -c\n/**********************************************************************************************/\n    const [a, mb, mc, md] = _calculateCubicTerms(balances, root3Alpha);\n    return _calculateCubic(a, mb, mc, md, root3Alpha);\n}\n\n/** @dev Prepares quadratic terms for input to _calculateCubic\n *  assumes a > 0, b < 0, c <= 0, and d <= 0 and returns a, -b, -c, -d\n *  terms come from cubic in Section 3.1.1\n *  argument root3Alpha = cube root of alpha\n */\nexport function _calculateCubicTerms(\n    balances: BigNumber[],\n    root3Alpha: BigNumber\n): [BigNumber, BigNumber, BigNumber, BigNumber] {\n    const alpha23: BigNumber = mulDown(root3Alpha, root3Alpha); // alpha to the power of (2/3)\n    const alpha = mulDown(alpha23, root3Alpha);\n    const a = ONE.sub(alpha);\n    const bterm = balances[0].add(balances[1]).add(balances[2]);\n    const mb = mulDown(mulDown(bterm, root3Alpha), root3Alpha);\n    const cterm = mulDown(balances[0], balances[1])\n        .add(mulDown(balances[1], balances[2]))\n        .add(mulDown(balances[2], balances[0]));\n    const mc = mulDown(cterm, root3Alpha);\n    const md = mulDown(mulDown(balances[0], balances[1]), balances[2]);\n\n    return [a, mb, mc, md];\n}\n\n/** @dev Calculate the maximal root of the polynomial a L^3 - mb L^2 - mc L - md.\n *   This root is always non-negative, and it is the unique positive root unless mb == mc == md == 0. */\nexport function _calculateCubic(\n    a: BigNumber,\n    mb: BigNumber,\n    mc: BigNumber,\n    md: BigNumber,\n    root3Alpha: BigNumber\n): BigNumber {\n    let rootEst = _calculateCubicStartingPoint(a, mb, mc);\n    rootEst = _runNewtonIteration(a, mb, mc, md, root3Alpha, rootEst);\n    return rootEst;\n}\n\n/** @dev Starting point for Newton iteration. Safe with all cubic polynomials where the coefficients have the appropriate\n *   signs, but calibrated to the particular polynomial for computing the invariant. */\nexport function _calculateCubicStartingPoint(\n    a: BigNumber,\n    mb: BigNumber,\n    mc: BigNumber\n): BigNumber {\n    const radic = mulUp(mb, mb).add(mulUp(mulUp(a, mc), ONE.mul(3)));\n    const lmin = divUp(mb, a.mul(3)).add(\n        divUp(sqrt(radic, BigNumber.from(5)), a.mul(3))\n    );\n    // This formula has been found experimentally. It is exact for alpha -> 1, where the factor is 1.5. All\n    // factors > 1 are safe. For small alpha values, it is more efficient to fallback to a larger factor.\n    const alpha = ONE.sub(a); // We know that a is in [0, 1].\n    const factor = alpha.gte(ONE.div(2)) ? ONE.mul(3).div(2) : ONE.mul(2);\n    const l0 = mulUp(lmin, factor);\n    return l0;\n}\n\n/** @dev Find a root of the given polynomial with the given starting point l.\n *   Safe iff l > the local minimum.\n *   Note that f(l) may be negative for the first iteration and will then be positive (up to rounding errors).\n *   f'(l) is always positive for the range of values we consider.\n *   See write-up, Appendix A. */\nexport function _runNewtonIteration(\n    a: BigNumber,\n    mb: BigNumber,\n    mc: BigNumber,\n    md: BigNumber,\n    root3Alpha: BigNumber,\n    rootEst: BigNumber\n): BigNumber {\n    let deltaAbsPrev = BigNumber.from(0);\n    for (let iteration = 0; iteration < 255; ++iteration) {\n        // The delta to the next step can be positive or negative, so we represent a positive and a negative part\n        // separately. The signed delta is delta_plus - delta_minus, but we only ever consider its absolute value.\n        const [deltaAbs, deltaIsPos] = _calcNewtonDelta(\n            a,\n            mb,\n            mc,\n            md,\n            root3Alpha,\n            rootEst\n        );\n\n        // ^ Note: If we ever set _INVARIANT_MIN_ITERATIONS=0, the following should include `iteration >= 1`.\n        if (\n            deltaAbs.lte(1) ||\n            (iteration >= _INVARIANT_MIN_ITERATIONS && deltaIsPos)\n        )\n            // This should mathematically never happen. Thus, the numerical error dominates at this point.\n            return rootEst;\n        if (\n            iteration >= _INVARIANT_MIN_ITERATIONS &&\n            deltaAbs.gte(\n                deltaAbsPrev.div(\n                    BigNumber.from(_INVARIANT_SHRINKING_FACTOR_PER_STEP)\n                )\n            )\n        ) {\n            // The iteration has stalled and isn't making significant progress anymore.\n            return rootEst;\n        }\n        deltaAbsPrev = deltaAbs;\n        if (deltaIsPos) rootEst = rootEst.add(deltaAbs);\n        else rootEst = rootEst.sub(deltaAbs);\n    }\n\n    throw new Error(\n        'Gyro3Pool: Newton Method did not converge on required invariant'\n    );\n}\n\n// -f(l)/f'(l), represented as an absolute value and a sign. Require that l is sufficiently large so that f is strictly increasing.\nexport function _calcNewtonDelta(\n    a: BigNumber,\n    mb: BigNumber,\n    mc: BigNumber,\n    md: BigNumber,\n    root3Alpha: BigNumber,\n    rootEst: BigNumber\n): [BigNumber, boolean] {\n    // The following is equal to dfRootEst^3 * a but with an order of operations optimized for precision.\n    // Subtraction does not underflow since rootEst is chosen so that it's always above the (only) local minimum.\n    let dfRootEst = BigNumber.from(0);\n\n    const rootEst2 = mulDown(rootEst, rootEst);\n    dfRootEst = rootEst2.mul(3);\n    dfRootEst = dfRootEst.sub(\n        mulDown(mulDown(mulDown(dfRootEst, root3Alpha), root3Alpha), root3Alpha)\n    );\n    dfRootEst = dfRootEst.sub(mulDown(rootEst, mb).mul(2)).sub(mc);\n\n    const deltaMinus = _safeLargePow3ADown(rootEst, root3Alpha, dfRootEst);\n\n    // NB: We could order the operations here in much the same way we did above to reduce errors. But tests show\n    // that this has no significant effect, and it would lead to more complex code.\n    let deltaPlus = mulDown(mulDown(rootEst, rootEst), mb);\n    deltaPlus = divDown(deltaPlus.add(mulDown(rootEst, mc)), dfRootEst);\n    deltaPlus = deltaPlus.add(divDown(md, dfRootEst));\n\n    const deltaIsPos = deltaPlus.gte(deltaMinus);\n    const deltaAbs = deltaIsPos\n        ? deltaPlus.sub(deltaMinus)\n        : deltaMinus.sub(deltaPlus);\n\n    return [deltaAbs, deltaIsPos];\n}\n\n/////////\n/// Swap Amount Calculations\n/////////\n\n/** @dev Computes how many tokens can be taken out of a pool if `amountIn` are sent, given the\n * current balances and weights.\n * Changed signs compared to original algorithm to account for amountOut < 0.\n * See Proposition 12 in 3.1.4.*/\nexport function _calcOutGivenIn(\n    balanceIn: BigNumber,\n    balanceOut: BigNumber,\n    amountIn: BigNumber,\n    virtualOffset: BigNumber\n): BigNumber {\n    /**********************************************************************************************\n        // Described for X = `in' asset and Z = `out' asset, but equivalent for the other case       //\n        // dX = incrX  = amountIn  > 0                                                               //\n        // dZ = incrZ = amountOut < 0                                                                //\n        // x = balanceIn             x' = x +  virtualOffset                                         //\n        // z = balanceOut            z' = z +  virtualOffset                                         //\n        // L  = inv.Liq                   /            x' * z'          \\                            //\n        //                   - dZ = z' - |   --------------------------  |                           //\n        //  x' = virtIn                   \\          ( x' + dX)         /                            //\n        //  z' = virtOut                                                                             //\n        // Note that -dz > 0 is what the trader receives.                                            //\n        // We exploit the fact that this formula is symmetric up to virtualParam{X,Y,Z}.             //\n        **********************************************************************************************/\n\n    // The factors in total lead to a multiplicative \"safety margin\" between the employed virtual offsets\n    // very slightly larger than 3e-18, compensating for the maximum multiplicative error in the invariant\n    // computation.\n\n    const virtInOver = balanceIn.add(mulUp(virtualOffset, ONE.add(2)));\n    const virtOutUnder = balanceOut.add(mulDown(virtualOffset, ONE.sub(1)));\n    const amountOut = virtOutUnder.mul(amountIn).div(virtInOver.add(amountIn));\n\n    if (amountOut.gt(balanceOut)) throw new Error('ASSET_BOUNDS_EXCEEDED');\n\n    return amountOut;\n}\n\n/** @dev Computes how many tokens must be sent to a pool in order to take `amountOut`, given the\n * currhent balances and weights.\n * Similar to the one before but adapting bc negative values (amountOut would be negative).*/\nexport function _calcInGivenOut(\n    balanceIn: BigNumber,\n    balanceOut: BigNumber,\n    amountOut: BigNumber,\n    virtualOffset: BigNumber\n): BigNumber {\n    /**********************************************************************************************\n        // Described for X = `in' asset and Z = `out' asset, but equivalent for the other case       //\n        // dX = incrX  = amountIn  > 0                                                               //\n        // dZ = incrZ = amountOut < 0                                                                //\n        // x = balanceIn             x' = x +  virtualOffset                                         //\n        // z = balanceOut            z' = z +  virtualOffset                                         //\n        // L  = inv.Liq            /            x' * z'          \\             x' * dZ               //\n        //                   dX = |   --------------------------  | - x' = ---------------           //\n        //  x' = virtIn            \\          ( z' + dZ)         /             z' - dZ               //\n        //  z' = virtOut                                                                             //\n        // Note that dz < 0 < dx.                                                                    //\n        // We exploit the fact that this formula is symmetric and does not depend on which asset is  //\n        // which.\n        // We assume that the virtualOffset carries a relative +/- 3e-18 error due to the invariant  //\n        // calculation add an appropriate safety margin.                                             //\n        **********************************************************************************************/\n\n    // Note that this in particular reverts if amountOut > balanceOut, i.e., if the trader tries to take more out of\n    // the pool than is in it.\n    if (amountOut.gt(balanceOut)) throw new Error('ASSET_BOUNDS_EXCEEDED');\n\n    // The factors in total lead to a multiplicative \"safety margin\" between the employed virtual offsets\n    // very slightly larger than 3e-18, compensating for the maximum multiplicative error in the invariant\n    // computation.\n    const virtInOver = balanceIn.add(mulUp(virtualOffset, ONE.add(2)));\n    const virtOutUnder = balanceOut.add(mulDown(virtualOffset, ONE.sub(1)));\n\n    const amountIn = divUp(\n        mulUp(virtInOver, amountOut),\n        virtOutUnder.sub(amountOut)\n    );\n\n    return amountIn;\n}\n\n// /////////\n// ///  Spot price function\n// /////////\n\nexport function _calculateNewSpotPrice(\n    balances: BigNumber[],\n    inAmount: BigNumber,\n    outAmount: BigNumber,\n    virtualOffsetInOut: BigNumber,\n    swapFee: BigNumber\n): BigNumber {\n    /**********************************************************************************************\n        // dX = incrX  = amountIn  > 0                                                               //\n        // dZ = incrZ  = amountOut < 0                                                               //\n        // x = balanceIn             x' = x +  virtualOffsetInOut                                     //\n        // z = balanceOut            z' = z +  virtualOffsetInOut                                     //\n        // s = swapFee                                                                               //\n        // L  = inv.Liq                1   /     x' + (1 - s) * dx        \\                          //\n        //                     p_z =  --- |   --------------------------  |                          //\n        // x' = virtIn                1-s  \\         z' + dz              /                          //\n        // z' = virtOut                                                                              //\n        // Note that dz < 0 < dx.                                                                    //\n        **********************************************************************************************/\n\n    const afterFeeMultiplier = ONE.sub(swapFee); // 1 - s\n    const virtIn = balances[0].add(virtualOffsetInOut); // x + virtualOffsetInOut = x'\n    const numerator = virtIn.add(mulDown(afterFeeMultiplier, inAmount)); // x' + (1 - s) * dx\n\n    const virtOut = balances[1].add(virtualOffsetInOut); // z + virtualOffsetInOut = y'\n    const denominator = mulDown(afterFeeMultiplier, virtOut.sub(outAmount)); // (1 - s) * (z' + dz)\n\n    const newSpotPrice = divDown(numerator, denominator);\n\n    return newSpotPrice;\n}\n\n// /////////\n// ///  Derivatives of spotPriceAfterSwap\n// /////////\n\n// SwapType = 'swapExactIn'\nexport function _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n    balances: BigNumber[],\n    outAmount: BigNumber,\n    virtualOffsetInOut: BigNumber\n): BigNumber {\n    /**********************************************************************************************                                                        \n        // dz = incrZ  = amountOut < 0                                                               //\n                                                                                                     //\n        // z = balanceOut            z' = z +  virtualOffsetInOut = virtOut                          //\n        //                                                                                           //\n        //                                 /              1               \\                          //\n        //                  (p_z)' =   2  |   --------------------------  |                          //\n        //                                 \\           z' + dz            /                          //\n        //                                                                                           //\n        // Note that dz < 0                                                                          //\n        **********************************************************************************************/\n\n    const TWO = BigNumber.from(2).mul(ONE);\n    const virtOut = balances[1].add(virtualOffsetInOut); // z' = z + virtualOffsetInOut\n    const denominator = virtOut.sub(outAmount); // z' + dz\n\n    const derivative = divDown(TWO, denominator);\n\n    return derivative;\n}\n\n// SwapType = 'swapExactOut'\nexport function _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n    balances: BigNumber[],\n    inAmount: BigNumber,\n    outAmount: BigNumber,\n    virtualOffsetInOut: BigNumber,\n    swapFee: BigNumber\n): BigNumber {\n    /**********************************************************************************************\n        // dX = incrX  = amountIn  > 0                                                               //\n        // dZ = incrZ  = amountOut < 0                                                               //\n        // x = balanceIn             x' = x +  virtualOffsetInOut                                    //\n        // z = balanceOut            z' = z +  virtualOffsetInOut                                    //\n        // s = swapFee                                                                               //\n        // L  = inv.Liq                1       /     x' + (1 - s) * dx        \\                      //\n        //                     p_z =  --- (2) |   --------------------------  |                      //\n        // x' = virtIn                1-s      \\         (z' + dz)^2          /                      //\n        // z' = virtOut                                                                              //\n        // Note that dz < 0 < dx.                                                                    //\n        **********************************************************************************************/\n\n    const TWO = BigNumber.from(2).mul(ONE);\n    const afterFeeMultiplier = ONE.sub(swapFee); // 1 - s\n    const virtIn = balances[0].add(virtualOffsetInOut); // x + virtualOffsetInOut = x'\n    const numerator = virtIn.add(mulDown(afterFeeMultiplier, inAmount)); // x' + (1 - s) * dx\n    const virtOut = balances[1].add(virtualOffsetInOut); // z + virtualOffsetInOut = z'\n    const denominator = mulDown(virtOut.sub(outAmount), virtOut.sub(outAmount));\n    // (z' + dz)^2\n    const factor = divDown(TWO, afterFeeMultiplier); // 2 / (1 - s)\n\n    const derivative = mulDown(factor, divDown(numerator, denominator));\n\n    return derivative;\n}\n\n// /////////\n// ///  Normalized Liquidity measured with respect to the out-asset.\n// ///  NB This is the same function as for the 2-CLP because the marginal trading curve of the 3-CLP\n// ///  is a 2-CLP curve. We use different virtual offsets, of course.\n// /////////\nexport function _getNormalizedLiquidity(\n    balances: BigNumber[],\n    virtualParamOut: BigNumber\n): BigNumber {\n    /**********************************************************************************************\n    // x = balanceOut             x' = x +  virtualParamOut                                      //\n    // s = swapFee                                                                               //\n    //                                                                                           //\n    //                             normalizedLiquidity = 0.5 * x'                                //\n    //                                                                                           //\n    // x' = virtOut                                                                              //\n    // Note that balances = [balanceIn, balanceOut, balanceTertiary].                            //\n    **********************************************************************************************/\n\n    const virtOut = balances[1].add(virtualParamOut);\n    return virtOut.div(2);\n}\n","import { getAddress } from '@ethersproject/address';\nimport { WeiPerEther as ONE, Zero } from '@ethersproject/constants';\nimport { formatFixed, BigNumber } from '@ethersproject/bignumber';\nimport { BigNumber as OldBigNumber, bnum, ZERO } from '../../utils/bignumber';\n\nimport {\n    PoolBase,\n    PoolPairBase,\n    PoolTypes,\n    SubgraphToken,\n    SwapTypes,\n    SubgraphPoolBase,\n} from '../../types';\nimport { isSameAddress, safeParseFixed } from '../../utils';\nimport {\n    _calculateInvariant,\n    _calcOutGivenIn,\n    _calcInGivenOut,\n    _calculateNewSpotPrice,\n    _derivativeSpotPriceAfterSwapExactTokenInForTokenOut,\n    _derivativeSpotPriceAfterSwapTokenInForExactTokenOut,\n} from './gyro3Math';\n\nimport {\n    _normalizeBalances,\n    _reduceFee,\n    _addFee,\n} from '../gyroHelpers/helpers';\nimport { mulDown, divDown } from '../gyroHelpers/gyroSignedFixedPoint';\nimport { SWAP_LIMIT_FACTOR } from '../gyroHelpers/constants';\nimport { universalNormalizedLiquidity } from '../liquidity';\n\nexport type Gyro3PoolPairData = PoolPairBase & {\n    balanceTertiary: BigNumber; // Balance of the unchanged asset\n    decimalsTertiary: number; // Decimals of the unchanged asset\n};\n\nexport type Gyro3PoolToken = Pick<\n    SubgraphToken,\n    'address' | 'balance' | 'decimals'\n>;\n\nexport class Gyro3Pool implements PoolBase<Gyro3PoolPairData> {\n    poolType: PoolTypes = PoolTypes.Gyro3;\n    id: string;\n    address: string;\n    tokensList: string[];\n    tokens: Gyro3PoolToken[];\n    swapFee: BigNumber;\n    totalShares: BigNumber;\n    root3Alpha: BigNumber;\n\n    private static findToken(list, tokenAddress, error) {\n        const token = list.find(\n            (t) => getAddress(t.address) === getAddress(tokenAddress)\n        );\n        if (!token) throw new Error(error);\n        return token;\n    }\n\n    static fromPool(pool: SubgraphPoolBase): Gyro3Pool {\n        if (!pool.root3Alpha) throw new Error('Pool missing root3Alpha');\n\n        if (\n            safeParseFixed(pool.root3Alpha, 18).lte(0) ||\n            safeParseFixed(pool.root3Alpha, 18).gte(ONE)\n        )\n            throw new Error('Invalid root3Alpha parameter');\n\n        if (pool.tokens.length !== 3)\n            throw new Error('Gyro3Pool must contain three tokens only');\n\n        return new Gyro3Pool(\n            pool.id,\n            pool.address,\n            pool.swapFee,\n            pool.totalShares,\n            pool.tokens as Gyro3PoolToken[],\n            pool.tokensList,\n            pool.root3Alpha\n        );\n    }\n\n    constructor(\n        id: string,\n        address: string,\n        swapFee: string,\n        totalShares: string,\n        tokens: Gyro3PoolToken[],\n        tokensList: string[],\n        root3Alpha: string\n    ) {\n        this.id = id;\n        this.address = address;\n        this.swapFee = safeParseFixed(swapFee, 18);\n        this.totalShares = safeParseFixed(totalShares, 18);\n        this.tokens = tokens;\n        this.tokensList = tokensList;\n        this.root3Alpha = safeParseFixed(root3Alpha, 18);\n    }\n\n    parsePoolPairData(tokenIn: string, tokenOut: string): Gyro3PoolPairData {\n        const tI = Gyro3Pool.findToken(\n            this.tokens,\n            tokenIn,\n            'Pool does not contain tokenIn'\n        );\n        const balanceIn = tI.balance;\n        const decimalsIn = tI.decimals;\n\n        const tO = Gyro3Pool.findToken(\n            this.tokens,\n            tokenOut,\n            'Pool does not contain tokenOut'\n        );\n        const balanceOut = tO.balance;\n        const decimalsOut = tO.decimals;\n\n        const tokenTertiary = this.tokens.find(\n            (t) =>\n                getAddress(t.address) !== getAddress(tokenOut) &&\n                getAddress(t.address) !== getAddress(tokenIn)\n        );\n\n        if (!tokenTertiary)\n            throw new Error('Pool does not contain a valid third token');\n\n        const balanceTertiary = tokenTertiary.balance;\n        const decimalsTertiary = tokenTertiary.decimals;\n\n        const poolPairData: Gyro3PoolPairData = {\n            id: this.id,\n            address: this.address,\n            poolType: this.poolType,\n            tokenIn: tokenIn,\n            tokenOut: tokenOut,\n            decimalsIn: Number(decimalsIn),\n            decimalsOut: Number(decimalsOut),\n            decimalsTertiary: Number(decimalsTertiary),\n            balanceIn: safeParseFixed(balanceIn, decimalsIn),\n            balanceOut: safeParseFixed(balanceOut, decimalsOut),\n            balanceTertiary: safeParseFixed(balanceTertiary, decimalsTertiary),\n            swapFee: this.swapFee,\n        };\n\n        return poolPairData;\n    }\n\n    getNormalizedLiquidity(poolPairData: Gyro3PoolPairData): OldBigNumber {\n        return universalNormalizedLiquidity(\n            this._derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n                poolPairData,\n                ZERO\n            )\n        );\n    }\n\n    getLimitAmountSwap(\n        poolPairData: Gyro3PoolPairData,\n        swapType: SwapTypes\n    ): OldBigNumber {\n        if (swapType === SwapTypes.SwapExactIn) {\n            const balances = [\n                poolPairData.balanceIn,\n                poolPairData.balanceOut,\n                poolPairData.balanceTertiary,\n            ];\n            const decimals = [\n                poolPairData.decimalsIn,\n                poolPairData.decimalsOut,\n                poolPairData.decimalsTertiary,\n            ];\n            const normalizedBalances = _normalizeBalances(balances, decimals);\n            const invariant = _calculateInvariant(\n                normalizedBalances,\n                this.root3Alpha\n            );\n            const a = mulDown(invariant, this.root3Alpha);\n            const maxAmountInAssetInPool = divDown(\n                mulDown(\n                    normalizedBalances[0].add(a),\n                    normalizedBalances[1].add(a)\n                ),\n                a\n            ).sub(a); // (x + a)(y + a) / a - a\n            const limitAmountIn = maxAmountInAssetInPool.sub(\n                normalizedBalances[0]\n            );\n            const limitAmountInPlusSwapFee = divDown(\n                limitAmountIn,\n                ONE.sub(poolPairData.swapFee)\n            );\n            return bnum(\n                formatFixed(\n                    mulDown(limitAmountInPlusSwapFee, SWAP_LIMIT_FACTOR),\n                    18\n                )\n            );\n        } else {\n            return bnum(\n                formatFixed(\n                    mulDown(poolPairData.balanceOut, SWAP_LIMIT_FACTOR),\n                    poolPairData.decimalsOut\n                )\n            );\n        }\n    }\n\n    // Updates the balance of a given token for the pool\n    updateTokenBalanceForPool(token: string, newBalance: BigNumber): void {\n        // token is BPT\n        if (isSameAddress(this.address, token)) {\n            this.updateTotalShares(newBalance);\n        } else {\n            // token is underlying in the pool\n            const T = this.tokens.find((t) => isSameAddress(t.address, token));\n            if (!T) throw Error('Pool does not contain this token');\n            T.balance = formatFixed(newBalance, T.decimals);\n        }\n    }\n\n    updateTotalShares(newTotalShares: BigNumber): void {\n        this.totalShares = newTotalShares;\n    }\n\n    _exactTokenInForTokenOut(\n        poolPairData: Gyro3PoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            const balances = [\n                poolPairData.balanceIn,\n                poolPairData.balanceOut,\n                poolPairData.balanceTertiary,\n            ];\n            const decimals = [\n                poolPairData.decimalsIn,\n                poolPairData.decimalsOut,\n                poolPairData.decimalsTertiary,\n            ];\n            const normalizedBalances = _normalizeBalances(balances, decimals);\n\n            const invariant = _calculateInvariant(\n                normalizedBalances,\n                this.root3Alpha\n            );\n\n            const virtualOffsetInOut = mulDown(invariant, this.root3Alpha);\n            const inAmount = safeParseFixed(amount.toString(), 18);\n            const inAmountLessFee = _reduceFee(inAmount, poolPairData.swapFee);\n\n            const outAmount = _calcOutGivenIn(\n                normalizedBalances[0],\n                normalizedBalances[1],\n                inAmountLessFee,\n                virtualOffsetInOut\n            );\n            return bnum(formatFixed(outAmount, 18));\n        } catch (error) {\n            return bnum(0);\n        }\n    }\n\n    _tokenInForExactTokenOut(\n        poolPairData: Gyro3PoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            const outAmount = safeParseFixed(amount.toString(), 18);\n            const balances = [\n                poolPairData.balanceIn,\n                poolPairData.balanceOut,\n                poolPairData.balanceTertiary,\n            ];\n            const decimals = [\n                poolPairData.decimalsIn,\n                poolPairData.decimalsOut,\n                poolPairData.decimalsTertiary,\n            ];\n            const normalizedBalances = _normalizeBalances(balances, decimals);\n\n            const invariant = _calculateInvariant(\n                normalizedBalances,\n                this.root3Alpha\n            );\n\n            const virtualOffsetInOut = mulDown(invariant, this.root3Alpha);\n\n            const inAmountLessFee = _calcInGivenOut(\n                normalizedBalances[0],\n                normalizedBalances[1],\n                outAmount,\n                virtualOffsetInOut\n            );\n            const inAmount = _addFee(inAmountLessFee, poolPairData.swapFee);\n\n            return bnum(formatFixed(inAmount, 18));\n        } catch (error) {\n            return bnum(0);\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _calcTokensOutGivenExactBptIn(bptAmountIn: BigNumber): BigNumber[] {\n        // Missing maths for this\n        return new Array(this.tokens.length).fill(Zero);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _calcBptOutGivenExactTokensIn(amountsIn: BigNumber[]): BigNumber {\n        // Missing maths for this\n        return Zero;\n    }\n\n    _spotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: Gyro3PoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            const balances = [\n                poolPairData.balanceIn,\n                poolPairData.balanceOut,\n                poolPairData.balanceTertiary,\n            ];\n            const decimals = [\n                poolPairData.decimalsIn,\n                poolPairData.decimalsOut,\n                poolPairData.decimalsTertiary,\n            ];\n            const normalizedBalances = _normalizeBalances(balances, decimals);\n\n            const invariant = _calculateInvariant(\n                normalizedBalances,\n                this.root3Alpha\n            );\n\n            const virtualOffsetInOut = mulDown(invariant, this.root3Alpha);\n\n            const inAmount = safeParseFixed(amount.toString(), 18);\n            const inAmountLessFee = _reduceFee(inAmount, poolPairData.swapFee);\n\n            const outAmount = _calcOutGivenIn(\n                normalizedBalances[0],\n                normalizedBalances[1],\n                inAmountLessFee,\n                virtualOffsetInOut\n            );\n\n            const newSpotPrice = _calculateNewSpotPrice(\n                normalizedBalances,\n                inAmount,\n                outAmount,\n                virtualOffsetInOut,\n                poolPairData.swapFee\n            );\n            return bnum(formatFixed(newSpotPrice, 18));\n        } catch (error) {\n            return bnum(0);\n        }\n    }\n\n    _spotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: Gyro3PoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            const outAmount = safeParseFixed(amount.toString(), 18);\n            const balances = [\n                poolPairData.balanceIn,\n                poolPairData.balanceOut,\n                poolPairData.balanceTertiary,\n            ];\n            const decimals = [\n                poolPairData.decimalsIn,\n                poolPairData.decimalsOut,\n                poolPairData.decimalsTertiary,\n            ];\n            const normalizedBalances = _normalizeBalances(balances, decimals);\n\n            const invariant = _calculateInvariant(\n                normalizedBalances,\n                this.root3Alpha\n            );\n\n            const virtualOffsetInOut = mulDown(invariant, this.root3Alpha);\n\n            const inAmountLessFee = _calcInGivenOut(\n                normalizedBalances[0],\n                normalizedBalances[1],\n                outAmount,\n                virtualOffsetInOut\n            );\n            const inAmount = _addFee(inAmountLessFee, poolPairData.swapFee);\n\n            const newSpotPrice = _calculateNewSpotPrice(\n                normalizedBalances,\n                inAmount,\n                outAmount,\n                virtualOffsetInOut,\n                poolPairData.swapFee\n            );\n\n            return bnum(formatFixed(newSpotPrice, 18));\n        } catch (error) {\n            return bnum(0);\n        }\n    }\n\n    _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: Gyro3PoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            const balances = [\n                poolPairData.balanceIn,\n                poolPairData.balanceOut,\n                poolPairData.balanceTertiary,\n            ];\n            const decimals = [\n                poolPairData.decimalsIn,\n                poolPairData.decimalsOut,\n                poolPairData.decimalsTertiary,\n            ];\n            const normalizedBalances = _normalizeBalances(balances, decimals);\n\n            const invariant = _calculateInvariant(\n                normalizedBalances,\n                this.root3Alpha\n            );\n\n            const virtualOffsetInOut = mulDown(invariant, this.root3Alpha);\n\n            const inAmount = safeParseFixed(amount.toString(), 18);\n            const inAmountLessFee = _reduceFee(inAmount, poolPairData.swapFee);\n\n            const outAmount = _calcOutGivenIn(\n                normalizedBalances[0],\n                normalizedBalances[1],\n                inAmountLessFee,\n                virtualOffsetInOut\n            );\n            const derivative =\n                _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n                    normalizedBalances,\n                    outAmount,\n                    virtualOffsetInOut\n                );\n\n            return bnum(formatFixed(derivative, 18));\n        } catch (error) {\n            return bnum(0);\n        }\n    }\n\n    _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: Gyro3PoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            const outAmount = safeParseFixed(amount.toString(), 18);\n            const balances = [\n                poolPairData.balanceIn,\n                poolPairData.balanceOut,\n                poolPairData.balanceTertiary,\n            ];\n            const decimals = [\n                poolPairData.decimalsIn,\n                poolPairData.decimalsOut,\n                poolPairData.decimalsTertiary,\n            ];\n            const normalizedBalances = _normalizeBalances(balances, decimals);\n\n            const invariant = _calculateInvariant(\n                normalizedBalances,\n                this.root3Alpha\n            );\n\n            const virtualOffsetInOut = mulDown(invariant, this.root3Alpha);\n\n            const inAmountLessFee = _calcInGivenOut(\n                normalizedBalances[0],\n                normalizedBalances[1],\n                outAmount,\n                virtualOffsetInOut\n            );\n            const inAmount = _addFee(inAmountLessFee, poolPairData.swapFee);\n\n            const derivative =\n                _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n                    normalizedBalances,\n                    inAmount,\n                    outAmount,\n                    virtualOffsetInOut,\n                    poolPairData.swapFee\n                );\n\n            return bnum(formatFixed(derivative, 18));\n        } catch (error) {\n            return bnum(0);\n        }\n    }\n}\n","import { BigNumber } from '@ethersproject/bignumber';\n\nexport const MAX_BALANCES = BigNumber.from(10).pow(34); // 1e16 in normal precision\n\n// Invariant calculation\nexport const MAX_INVARIANT = BigNumber.from(10).pow(37).mul(3); // 3e19 in normal precision\n","import { BigNumber, parseFixed } from '@ethersproject/bignumber';\nimport { WeiPerEther as ONE } from '@ethersproject/constants';\nimport { ONE_XP } from '../../gyroHelpers/constants';\nimport {\n    mulDown,\n    divDown,\n    mulDownMagU,\n    divDownMagU,\n    mulUpMagU,\n    divUpMagU,\n    mulUpXpToNpU,\n    mulDownXpToNpU,\n    mulXpU,\n    divXpU,\n    sqrt,\n} from '../../gyroHelpers/gyroSignedFixedPoint';\nimport { MAX_BALANCES } from './constants';\n\n/////////\n/// TYPES\n/////////\n\nexport type GyroEParams = {\n    alpha: BigNumber;\n    beta: BigNumber;\n    c: BigNumber;\n    s: BigNumber;\n    lambda: BigNumber;\n};\n\n// terms in this struct are stored in extra precision (38 decimals) with final decimal rounded down\nexport type DerivedGyroEParams = {\n    tauAlpha: Vector2;\n    tauBeta: Vector2;\n    u: BigNumber;\n    v: BigNumber;\n    w: BigNumber;\n    z: BigNumber;\n    dSq: BigNumber;\n};\n\nexport type Vector2 = {\n    x: BigNumber;\n    y: BigNumber;\n};\n\nexport type QParams = {\n    a: BigNumber;\n    b: BigNumber;\n    c: BigNumber;\n};\n\n/////////\n/// FEE CALCULATION\n/////////\n\nexport function reduceFee(amountIn: BigNumber, swapFee: BigNumber): BigNumber {\n    const feeAmount = mulDown(amountIn, swapFee);\n    return amountIn.sub(feeAmount);\n}\n\nexport function addFee(amountIn: BigNumber, swapFee: BigNumber): BigNumber {\n    return divDown(amountIn, ONE.sub(swapFee));\n}\n\n////////\n/// BALANCE CALCULATION\n////////\nexport function normalizeBalances(\n    balances: BigNumber[],\n    decimals: number[]\n): BigNumber[] {\n    const scalingFactors = decimals.map((d) => parseFixed('1', d));\n\n    return balances.map((bal, index) =>\n        bal.mul(ONE).div(scalingFactors[index])\n    );\n}\n\nexport function balancesFromTokenInOut(\n    balanceTokenIn: BigNumber,\n    balanceTokenOut: BigNumber,\n    tokenInIsToken0: boolean\n): [BigNumber, BigNumber] {\n    return tokenInIsToken0\n        ? [balanceTokenIn, balanceTokenOut]\n        : [balanceTokenOut, balanceTokenIn];\n}\n\n/////////\n/// INVARIANT CALC\n/////////\n\nexport function calcAtAChi(\n    x: BigNumber,\n    y: BigNumber,\n    p: GyroEParams,\n    d: DerivedGyroEParams\n): BigNumber {\n    const dSq2 = mulXpU(d.dSq, d.dSq);\n\n    // (cx - sy) * (w/lambda + z) / lambda\n    //      account for 2 factors of dSq (4 s,c factors)\n    const termXp = divXpU(\n        divDownMagU(divDownMagU(d.w, p.lambda).add(d.z), p.lambda),\n        dSq2\n    );\n\n    let val = mulDownXpToNpU(\n        mulDownMagU(x, p.c).sub(mulDownMagU(y, p.s)),\n        termXp\n    );\n\n    // (x lambda s + y lambda c) * u, note u > 0\n    let termNp = mulDownMagU(mulDownMagU(x, p.lambda), p.s).add(\n        mulDownMagU(mulDownMagU(y, p.lambda), p.c)\n    );\n    val = val.add(mulDownXpToNpU(termNp, divXpU(d.u, dSq2)));\n\n    // (sx+cy) * v, note v > 0\n    termNp = mulDownMagU(x, p.s).add(mulDownMagU(y, p.c));\n    val = val.add(mulDownXpToNpU(termNp, divXpU(d.v, dSq2)));\n\n    return val;\n}\n\nexport function calcInvariantSqrt(\n    x: BigNumber,\n    y: BigNumber,\n    p: GyroEParams,\n    d: DerivedGyroEParams\n): [BigNumber, BigNumber] {\n    let val = calcMinAtxAChiySqPlusAtxSq(x, y, p, d).add(\n        calc2AtxAtyAChixAChiy(x, y, p, d)\n    );\n    val = val.add(calcMinAtyAChixSqPlusAtySq(x, y, p, d));\n    const err = mulUpMagU(x, x).add(mulUpMagU(y, y)).div(ONE_XP);\n    val = val.gt(0) ? sqrt(val, BigNumber.from(5)) : BigNumber.from(0);\n    return [val, err];\n}\n\nfunction calcMinAtxAChiySqPlusAtxSq(\n    x: BigNumber,\n    y: BigNumber,\n    p: GyroEParams,\n    d: DerivedGyroEParams\n) {\n    let termNp = mulUpMagU(mulUpMagU(mulUpMagU(x, x), p.c), p.c).add(\n        mulUpMagU(mulUpMagU(mulUpMagU(y, y), p.s), p.s)\n    );\n    termNp = termNp.sub(\n        mulDownMagU(mulDownMagU(mulDownMagU(x, y), p.c.mul(2)), p.s)\n    );\n    const termXp = mulXpU(d.u, d.u)\n        .add(divDownMagU(mulXpU(d.u.mul(2), d.v), p.lambda))\n        .add(divDownMagU(divDownMagU(mulXpU(d.v, d.v), p.lambda), p.lambda));\n\n    let val = mulDownXpToNpU(termNp.mul(-1), termXp);\n    val = val.add(\n        mulDownXpToNpU(\n            divDownMagU(divDownMagU(termNp.sub(9), p.lambda), p.lambda),\n            divXpU(ONE_XP, d.dSq)\n        )\n    );\n    return val;\n}\n\nfunction calc2AtxAtyAChixAChiy(\n    x: BigNumber,\n    y: BigNumber,\n    p: GyroEParams,\n    d: DerivedGyroEParams\n) {\n    let termNp = mulDownMagU(\n        mulDownMagU(mulDownMagU(x, x).sub(mulUpMagU(y, y)), p.c.mul(2)),\n        p.s\n    );\n\n    const xy = mulDownMagU(y, x.mul(2));\n    termNp = termNp\n        .add(mulDownMagU(mulDownMagU(xy, p.c), p.c))\n        .sub(mulDownMagU(mulDownMagU(xy, p.s), p.s));\n    let termXp = mulXpU(d.z, d.u).add(\n        divDownMagU(divDownMagU(mulXpU(d.w, d.v), p.lambda), p.lambda)\n    );\n    termXp = termXp.add(\n        divDownMagU(mulXpU(d.w, d.u).add(mulXpU(d.z, d.v)), p.lambda)\n    );\n    termXp = divXpU(termXp, mulXpU(mulXpU(mulXpU(d.dSq, d.dSq), d.dSq), d.dSq));\n    const val = mulDownXpToNpU(termNp, termXp);\n    return val;\n}\n\nfunction calcMinAtyAChixSqPlusAtySq(\n    x: BigNumber,\n    y: BigNumber,\n    p: GyroEParams,\n    d: DerivedGyroEParams\n) {\n    let termNp = mulUpMagU(mulUpMagU(mulUpMagU(x, x), p.s), p.s).add(\n        mulUpMagU(mulUpMagU(mulUpMagU(y, y), p.c), p.c)\n    );\n    termNp = termNp.add(mulUpMagU(mulUpMagU(mulUpMagU(x, y), p.s.mul(2)), p.c));\n    let termXp = mulXpU(d.z, d.z).add(\n        divDownMagU(divDownMagU(mulXpU(d.w, d.w), p.lambda), p.lambda)\n    );\n    termXp = termXp.add(divDownMagU(mulXpU(d.z.mul(2), d.w), p.lambda));\n    termXp = divXpU(termXp, mulXpU(mulXpU(mulXpU(d.dSq, d.dSq), d.dSq), d.dSq));\n    let val = mulDownXpToNpU(termNp.mul(-1), termXp);\n    val = val.add(mulDownXpToNpU(termNp.sub(9), divXpU(ONE_XP, d.dSq)));\n    return val;\n}\n\nexport function calcAChiAChiInXp(\n    p: GyroEParams,\n    d: DerivedGyroEParams\n): BigNumber {\n    const dSq3 = mulXpU(mulXpU(d.dSq, d.dSq), d.dSq);\n    let val = mulUpMagU(p.lambda, divXpU(mulXpU(d.u.mul(2), d.v), dSq3));\n    val = val.add(\n        mulUpMagU(\n            mulUpMagU(divXpU(mulXpU(d.u.add(1), d.u.add(1)), dSq3), p.lambda),\n            p.lambda\n        )\n    );\n    val = val.add(divXpU(mulXpU(d.v, d.v), dSq3));\n    const termXp = divUpMagU(d.w, p.lambda).add(d.z);\n    val = val.add(divXpU(mulXpU(termXp, termXp), dSq3));\n    return val;\n}\n\n/////////\n/// SWAP AMOUNT CALC\n/////////\n\nexport function checkAssetBounds(\n    params: GyroEParams,\n    derived: DerivedGyroEParams,\n    invariant: Vector2,\n    newBal: BigNumber,\n    assetIndex: number\n): void {\n    if (assetIndex === 0) {\n        const xPlus = maxBalances0(params, derived, invariant);\n        if (newBal.gt(MAX_BALANCES) || newBal.gt(xPlus))\n            throw new Error('ASSET BOUNDS EXCEEDED');\n    } else {\n        const yPlus = maxBalances1(params, derived, invariant);\n        if (newBal.gt(MAX_BALANCES) || newBal.gt(yPlus))\n            throw new Error('ASSET BOUNDS EXCEEDED');\n    }\n}\n\nfunction maxBalances0(p: GyroEParams, d: DerivedGyroEParams, r: Vector2) {\n    const termXp1 = divXpU(d.tauBeta.x.sub(d.tauAlpha.x), d.dSq);\n    const termXp2 = divXpU(d.tauBeta.y.sub(d.tauAlpha.y), d.dSq);\n    let xp = mulDownXpToNpU(\n        mulDownMagU(mulDownMagU(r.y, p.lambda), p.c),\n        termXp1\n    );\n    xp = xp.add(\n        termXp2.gt(BigNumber.from(0))\n            ? mulDownMagU(r.y, p.s)\n            : mulDownXpToNpU(mulUpMagU(r.x, p.s), termXp2)\n    );\n    return xp;\n}\n\nfunction maxBalances1(p: GyroEParams, d: DerivedGyroEParams, r: Vector2) {\n    const termXp1 = divXpU(d.tauBeta.x.sub(d.tauAlpha.x), d.dSq);\n    const termXp2 = divXpU(d.tauBeta.y.sub(d.tauAlpha.y), d.dSq);\n    let yp = mulDownXpToNpU(\n        mulDownMagU(mulDownMagU(r.y, p.lambda), p.s),\n        termXp1\n    );\n    yp = yp.add(\n        termXp2.gt(BigNumber.from(0))\n            ? mulDownMagU(r.y, p.c)\n            : mulDownXpToNpU(mulUpMagU(r.x, p.c), termXp2)\n    );\n    return yp;\n}\n\nexport function calcYGivenX(\n    x: BigNumber,\n    params: GyroEParams,\n    d: DerivedGyroEParams,\n    r: Vector2\n): BigNumber {\n    const ab: Vector2 = {\n        x: virtualOffset0(params, d, r),\n        y: virtualOffset1(params, d, r),\n    };\n\n    const y = solveQuadraticSwap(\n        params.lambda,\n        x,\n        params.s,\n        params.c,\n        r,\n        ab,\n        d.tauBeta,\n        d.dSq\n    );\n    return y;\n}\n\nexport function calcXGivenY(\n    y: BigNumber,\n    params: GyroEParams,\n    d: DerivedGyroEParams,\n    r: Vector2\n): BigNumber {\n    const ba: Vector2 = {\n        x: virtualOffset1(params, d, r),\n        y: virtualOffset0(params, d, r),\n    };\n    const x = solveQuadraticSwap(\n        params.lambda,\n        y,\n        params.c,\n        params.s,\n        r,\n        ba,\n        {\n            x: d.tauAlpha.x.mul(-1),\n            y: d.tauAlpha.y,\n        },\n        d.dSq\n    );\n    return x;\n}\n\nexport function virtualOffset0(\n    p: GyroEParams,\n    d: DerivedGyroEParams,\n    r: Vector2,\n    switchTau?: boolean\n): BigNumber {\n    const tauValue = switchTau ? d.tauAlpha : d.tauBeta;\n    const termXp = divXpU(tauValue.x, d.dSq);\n\n    let a = tauValue.x.gt(BigNumber.from(0))\n        ? mulUpXpToNpU(mulUpMagU(mulUpMagU(r.x, p.lambda), p.c), termXp)\n        : mulUpXpToNpU(mulDownMagU(mulDownMagU(r.y, p.lambda), p.c), termXp);\n\n    a = a.add(mulUpXpToNpU(mulUpMagU(r.x, p.s), divXpU(tauValue.y, d.dSq)));\n\n    return a;\n}\n\nexport function virtualOffset1(\n    p: GyroEParams,\n    d: DerivedGyroEParams,\n    r: Vector2,\n    switchTau?: boolean\n): BigNumber {\n    const tauValue = switchTau ? d.tauBeta : d.tauAlpha;\n    const termXp = divXpU(tauValue.x, d.dSq);\n\n    let b = tauValue.x.lt(BigNumber.from(0))\n        ? mulUpXpToNpU(mulUpMagU(mulUpMagU(r.x, p.lambda), p.s), termXp.mul(-1))\n        : mulUpXpToNpU(\n              mulDownMagU(mulDownMagU(r.y.mul(-1), p.lambda), p.s),\n              termXp\n          );\n\n    b = b.add(mulUpXpToNpU(mulUpMagU(r.x, p.c), divXpU(tauValue.y, d.dSq)));\n    return b;\n}\n\nfunction solveQuadraticSwap(\n    lambda: BigNumber,\n    x: BigNumber,\n    s: BigNumber,\n    c: BigNumber,\n    r: Vector2,\n    ab: Vector2,\n    tauBeta: Vector2,\n    dSq: BigNumber\n): BigNumber {\n    const lamBar: Vector2 = {\n        x: ONE_XP.sub(divDownMagU(divDownMagU(ONE_XP, lambda), lambda)),\n        y: ONE_XP.sub(divUpMagU(divUpMagU(ONE_XP, lambda), lambda)),\n    };\n    const q: QParams = {\n        a: BigNumber.from(0),\n        b: BigNumber.from(0),\n        c: BigNumber.from(0),\n    };\n    const xp = x.sub(ab.x);\n    if (xp.gt(BigNumber.from(0))) {\n        q.b = mulUpXpToNpU(\n            mulDownMagU(mulDownMagU(xp.mul(-1), s), c),\n            divXpU(lamBar.y, dSq)\n        );\n    } else {\n        q.b = mulUpXpToNpU(\n            mulUpMagU(mulUpMagU(xp.mul(-1), s), c),\n            divXpU(lamBar.x, dSq).add(1)\n        );\n    }\n    const sTerm: Vector2 = {\n        x: divXpU(mulDownMagU(mulDownMagU(lamBar.y, s), s), dSq),\n        y: divXpU(mulUpMagU(mulUpMagU(lamBar.x, s), s), dSq.add(1)).add(1),\n    };\n    sTerm.x = ONE_XP.sub(sTerm.x);\n    sTerm.y = ONE_XP.sub(sTerm.y);\n\n    q.c = calcXpXpDivLambdaLambda(x, r, lambda, s, c, tauBeta, dSq).mul(-1);\n    q.c = q.c.add(mulDownXpToNpU(mulDownMagU(r.y, r.y), sTerm.y)); // r.y ===  currentInv + err\n    q.c = q.c.gt(BigNumber.from(0))\n        ? sqrt(q.c, BigNumber.from(5))\n        : BigNumber.from(0);\n    if (q.b.sub(q.c).gt(BigNumber.from(0))) {\n        q.a = mulUpXpToNpU(q.b.sub(q.c), divXpU(ONE_XP, sTerm.y).add(1));\n    } else {\n        q.a = mulUpXpToNpU(q.b.sub(q.c), divXpU(ONE_XP, sTerm.x));\n    }\n    return q.a.add(ab.y);\n}\n\nexport function calcXpXpDivLambdaLambda(\n    x: BigNumber,\n    r: Vector2,\n    lambda: BigNumber,\n    s: BigNumber,\n    c: BigNumber,\n    tauBeta: Vector2,\n    dSq: BigNumber\n): BigNumber {\n    const sqVars = {\n        x: mulXpU(dSq, dSq),\n        y: mulUpMagU(r.x, r.x),\n    };\n    const q: QParams = {\n        a: BigNumber.from(0),\n        b: BigNumber.from(0),\n        c: BigNumber.from(0),\n    };\n    let termXp = divXpU(mulXpU(tauBeta.x, tauBeta.y), sqVars.x);\n    if (termXp.gt(BigNumber.from(0))) {\n        q.a = mulUpMagU(sqVars.y, s.mul(2));\n        q.a = mulUpXpToNpU(mulUpMagU(q.a, c), termXp.add(7));\n    } else {\n        q.a = mulDownMagU(mulDownMagU(r.y, r.y), s.mul(2)); // r.y ===  currentInv + err\n        q.a = mulUpXpToNpU(mulDownMagU(q.a, c), termXp);\n    }\n\n    if (tauBeta.x.lt(BigNumber.from(0))) {\n        q.b = mulUpXpToNpU(\n            mulUpMagU(mulUpMagU(r.x, x), c.mul(2)),\n            divXpU(tauBeta.x, dSq).mul(-1).add(3)\n        );\n    } else {\n        q.b = mulUpXpToNpU(\n            mulDownMagU(mulDownMagU(r.y.mul(-1), x), c.mul(2)),\n            divXpU(tauBeta.x, dSq)\n        );\n    }\n    q.a = q.a.add(q.b);\n    termXp = divXpU(mulXpU(tauBeta.y, tauBeta.y), sqVars.x).add(7);\n    q.b = mulUpMagU(sqVars.y, s);\n    q.b = mulUpXpToNpU(mulUpMagU(q.b, s), termXp);\n\n    q.c = mulUpXpToNpU(\n        mulDownMagU(mulDownMagU(r.y.mul(-1), x), s.mul(2)),\n        divXpU(tauBeta.y, dSq)\n    );\n    q.b = q.b.add(q.c).add(mulUpMagU(x, x));\n    q.b = q.b.gt(BigNumber.from(0))\n        ? divUpMagU(q.b, lambda)\n        : divDownMagU(q.b, lambda);\n\n    q.a = q.a.add(q.b);\n    q.a = q.a.gt(BigNumber.from(0))\n        ? divUpMagU(q.a, lambda)\n        : divDownMagU(q.a, lambda);\n\n    termXp = divXpU(mulXpU(tauBeta.x, tauBeta.x), sqVars.x).add(7);\n    const val = mulUpMagU(mulUpMagU(sqVars.y, c), c);\n    return mulUpXpToNpU(val, termXp).add(q.a);\n}\n\n/////////\n/// LINEAR ALGEBRA OPERATIONS\n/////////\n\nexport function mulA(params: GyroEParams, tp: Vector2): Vector2 {\n    return {\n        x: divDownMagU(mulDownMagU(params.c, tp.x), params.lambda).sub(\n            divDownMagU(mulDownMagU(params.s, tp.y), params.lambda)\n        ),\n        y: mulDownMagU(params.s, tp.x).add(mulDownMagU(params.c, tp.y)),\n    };\n}\n\nexport function scalarProd(t1: Vector2, t2: Vector2): BigNumber {\n    const ret = mulDownMagU(t1.x, t2.x).add(mulDownMagU(t1.y, t2.y));\n    return ret;\n}\n","import { BigNumber } from '@ethersproject/bignumber';\nimport { WeiPerEther as ONE } from '@ethersproject/constants';\nimport {\n    GyroEParams,\n    DerivedGyroEParams,\n    Vector2,\n    QParams,\n    virtualOffset0,\n    virtualOffset1,\n} from './gyroEMathHelpers';\nimport { ONE_XP } from '../../gyroHelpers/constants';\nimport {\n    mulDown,\n    divDown,\n    mulDownMagU,\n    divDownMagU,\n    mulUpMagU,\n    divUpMagU,\n    mulUpXpToNpU,\n    mulDownXpToNpU,\n    divXpU,\n    sqrt,\n} from '../../gyroHelpers/gyroSignedFixedPoint';\nimport { calcXpXpDivLambdaLambda } from './gyroEMathHelpers';\n\n/////////\n/// SPOT PRICE AFTER SWAP CALCULATIONS\n/////////\n\nexport function calcSpotPriceYGivenX(\n    x: BigNumber,\n    params: GyroEParams,\n    d: DerivedGyroEParams,\n    r: Vector2\n): BigNumber {\n    const ab: Vector2 = {\n        x: virtualOffset0(params, d, r),\n        y: virtualOffset1(params, d, r),\n    };\n    const newSpotPriceFactor = solveDerivativeQuadraticSwap(\n        params.lambda,\n        x,\n        params.s,\n        params.c,\n        r,\n        ab,\n        d.tauBeta,\n        d.dSq\n    );\n    return newSpotPriceFactor;\n}\n\nexport function calcSpotPriceXGivenY(\n    y: BigNumber,\n    params: GyroEParams,\n    d: DerivedGyroEParams,\n    r: Vector2\n): BigNumber {\n    const ba: Vector2 = {\n        x: virtualOffset1(params, d, r),\n        y: virtualOffset0(params, d, r),\n    };\n    const newSpotPriceFactor = solveDerivativeQuadraticSwap(\n        params.lambda,\n        y,\n        params.c,\n        params.s,\n        r,\n        ba,\n        {\n            x: d.tauAlpha.x.mul(-1),\n            y: d.tauAlpha.y,\n        },\n        d.dSq\n    );\n    return newSpotPriceFactor;\n}\n\nfunction solveDerivativeQuadraticSwap(\n    lambda: BigNumber,\n    x: BigNumber,\n    s: BigNumber,\n    c: BigNumber,\n    r: Vector2,\n    ab: Vector2,\n    tauBeta: Vector2,\n    dSq: BigNumber\n): BigNumber {\n    const lamBar: Vector2 = {\n        x: ONE_XP.sub(divDownMagU(divDownMagU(ONE_XP, lambda), lambda)),\n        y: ONE_XP.sub(divUpMagU(divUpMagU(ONE_XP, lambda), lambda)),\n    };\n    const q: QParams = {\n        a: BigNumber.from(0),\n        b: BigNumber.from(0),\n        c: BigNumber.from(0),\n    };\n    const xp = x.sub(ab.x);\n    q.b = mulUpXpToNpU(mulDownMagU(s, c), divXpU(lamBar.y, dSq));\n\n    const sTerm: Vector2 = {\n        x: divXpU(mulDownMagU(mulDownMagU(lamBar.y, s), s), dSq),\n        y: divXpU(mulUpMagU(mulUpMagU(lamBar.x, s), s), dSq.add(1)).add(1),\n    };\n    sTerm.x = ONE_XP.sub(sTerm.x);\n    sTerm.y = ONE_XP.sub(sTerm.y);\n\n    q.c = calcXpXpDivLambdaLambda(x, r, lambda, s, c, tauBeta, dSq).mul(-1);\n    q.c = q.c.add(mulDownXpToNpU(mulDownMagU(r.y, r.y), sTerm.y)); // r.y ===  currentInv + err\n    q.c = q.c.gt(BigNumber.from(0))\n        ? sqrt(q.c, BigNumber.from(5))\n        : BigNumber.from(0);\n\n    q.c = mulDown(mulDown(q.c, lambda), lambda);\n    q.c = divDown(xp, q.c);\n\n    if (q.b.sub(q.c).gt(BigNumber.from(0))) {\n        q.a = mulUpXpToNpU(q.b.sub(q.c), divXpU(ONE_XP, sTerm.y).add(1));\n    } else {\n        q.a = mulUpXpToNpU(q.b.sub(q.c), divXpU(ONE_XP, sTerm.x));\n    }\n    return q.a;\n}\n\n/////////\n/// SPOT PRICE DERIVATIVE CALCULATIONS\n/////////\n\nfunction setup(\n    balances,\n    params: GyroEParams,\n    derived: DerivedGyroEParams,\n    fee: BigNumber,\n    rVec: Vector2,\n    ixVar: number\n) {\n    const r = rVec.y;\n    const { c, s, lambda } = params;\n    const [x0, y0] = balances;\n    const a = virtualOffset0(params, derived, rVec);\n    const b = virtualOffset1(params, derived, rVec);\n    const ls = ONE.sub(divDown(ONE, mulDown(lambda, lambda)));\n    const f = ONE.sub(fee);\n\n    let R: BigNumber;\n    if (ixVar === 0) {\n        R = sqrt(\n            mulDown(mulDown(r, r), ONE.sub(mulDown(ls, mulDown(s, s)))).sub(\n                divDown(mulDown(x0.sub(a), x0.sub(a)), mulDown(lambda, lambda))\n            ),\n            BigNumber.from(5)\n        );\n    } else {\n        R = sqrt(\n            mulDown(mulDown(r, r), ONE.sub(mulDown(ls, mulDown(c, c)))).sub(\n                divDown(mulDown(y0.sub(b), y0.sub(b)), mulDown(lambda, lambda))\n            ),\n            BigNumber.from(5)\n        );\n    }\n\n    return { x0, y0, c, s, lambda, a, b, ls, f, r, R };\n}\n\nexport function normalizedLiquidityYIn(\n    balances: BigNumber[],\n    params: GyroEParams,\n    derived: DerivedGyroEParams,\n    fee: BigNumber,\n    rVec: Vector2\n): BigNumber {\n    const { y0, c, s, lambda, b, ls, R } = setup(\n        balances,\n        params,\n        derived,\n        fee,\n        rVec,\n        1\n    );\n\n    const returnValue = divDown(\n        mulDown(\n            divDown(ONE, ONE.sub(mulDown(ls, mulDown(c, c)))),\n            mulDown(\n                R,\n                mulDown(\n                    mulDown(\n                        mulDown(\n                            mulDown(mulDown(ls, s), c),\n                            mulDown(lambda, lambda)\n                        ),\n                        R\n                    ).sub(y0.sub(b)),\n                    mulDown(\n                        mulDown(\n                            mulDown(mulDown(ls, s), c),\n                            mulDown(lambda, lambda)\n                        ),\n                        R\n                    ).sub(y0.sub(b))\n                )\n            )\n        ),\n        mulDown(mulDown(lambda, lambda), mulDown(R, R)).add(\n            mulDown(y0.sub(b), y0.sub(b))\n        )\n    );\n\n    return returnValue;\n}\n\nexport function normalizedLiquidityXIn(\n    balances: BigNumber[],\n    params: GyroEParams,\n    derived: DerivedGyroEParams,\n    fee: BigNumber,\n    rVec: Vector2\n): BigNumber {\n    const { x0, c, s, lambda, a, ls, R } = setup(\n        balances,\n        params,\n        derived,\n        fee,\n        rVec,\n        0\n    );\n\n    const returnValue = divDown(\n        mulDown(\n            divDown(ONE, ONE.sub(mulDown(ls, mulDown(s, s)))),\n            mulDown(\n                R,\n                mulDown(\n                    mulDown(\n                        mulDown(\n                            mulDown(mulDown(ls, s), c),\n                            mulDown(lambda, lambda)\n                        ),\n                        R\n                    ).sub(x0.sub(a)),\n                    mulDown(\n                        mulDown(\n                            mulDown(mulDown(ls, s), c),\n                            mulDown(lambda, lambda)\n                        ),\n                        R\n                    ).sub(x0.sub(a))\n                )\n            )\n        ),\n        mulDown(mulDown(lambda, lambda), mulDown(R, R)).add(\n            mulDown(x0.sub(a), x0.sub(a))\n        )\n    );\n\n    return returnValue;\n}\n\nexport function dPyDXIn(\n    balances: BigNumber[],\n    params: GyroEParams,\n    derived: DerivedGyroEParams,\n    fee: BigNumber,\n    rVec: Vector2\n): BigNumber {\n    const { x0, c, s, lambda, a, ls, R } = setup(\n        balances,\n        params,\n        derived,\n        fee,\n        rVec,\n        0\n    );\n\n    const returnValue = divDown(\n        mulDown(\n            ONE.sub(mulDown(ls, mulDown(s, s))),\n            divDown(ONE, mulDown(mulDown(lambda, lambda), R)).add(\n                divDown(\n                    mulDown(x0.sub(a), x0.sub(a)),\n                    mulDown(\n                        mulDown(\n                            mulDown(lambda, lambda),\n                            mulDown(lambda, lambda)\n                        ),\n                        mulDown(R, mulDown(R, R))\n                    )\n                )\n            )\n        ),\n        mulDown(\n            mulDown(mulDown(ls, s), c).sub(\n                divDown(x0.sub(a), mulDown(mulDown(lambda, lambda), R))\n            ),\n            mulDown(mulDown(ls, s), c).sub(\n                divDown(x0.sub(a), mulDown(mulDown(lambda, lambda), R))\n            )\n        )\n    );\n\n    return returnValue;\n}\n\nexport function dPxDYIn(\n    balances: BigNumber[],\n    params: GyroEParams,\n    derived: DerivedGyroEParams,\n    fee: BigNumber,\n    rVec: Vector2\n): BigNumber {\n    const { y0, c, s, lambda, b, ls, R } = setup(\n        balances,\n        params,\n        derived,\n        fee,\n        rVec,\n        1\n    );\n\n    const returnValue = divDown(\n        mulDown(\n            ONE.sub(mulDown(ls, mulDown(c, c))),\n            divDown(ONE, mulDown(mulDown(lambda, lambda), R)).add(\n                divDown(\n                    mulDown(y0.sub(b), y0.sub(b)),\n                    mulDown(\n                        mulDown(\n                            mulDown(lambda, lambda),\n                            mulDown(lambda, lambda)\n                        ),\n                        mulDown(R, mulDown(R, R))\n                    )\n                )\n            )\n        ),\n        mulDown(\n            mulDown(mulDown(ls, s), c).sub(\n                divDown(y0.sub(b), mulDown(mulDown(lambda, lambda), R))\n            ),\n            mulDown(mulDown(ls, s), c).sub(\n                divDown(y0.sub(b), mulDown(mulDown(lambda, lambda), R))\n            )\n        )\n    );\n\n    return returnValue;\n}\n\nexport function dPxDXOut(\n    balances: BigNumber[],\n    params: GyroEParams,\n    derived: DerivedGyroEParams,\n    fee: BigNumber,\n    rVec: Vector2\n): BigNumber {\n    const { x0, s, lambda, a, ls, R, f } = setup(\n        balances,\n        params,\n        derived,\n        fee,\n        rVec,\n        0\n    );\n\n    const returnValue = mulDown(\n        divDown(ONE, mulDown(f, ONE.sub(mulDown(ls, mulDown(s, s))))),\n        divDown(ONE, mulDown(mulDown(lambda, lambda), R)).add(\n            divDown(\n                mulDown(x0.sub(a), x0.sub(a)),\n                mulDown(\n                    mulDown(mulDown(lambda, lambda), mulDown(lambda, lambda)),\n                    mulDown(mulDown(R, R), R)\n                )\n            )\n        )\n    );\n\n    return returnValue;\n}\n\nexport function dPyDYOut(\n    balances: BigNumber[],\n    params: GyroEParams,\n    derived: DerivedGyroEParams,\n    fee: BigNumber,\n    rVec: Vector2\n): BigNumber {\n    const { y0, c, lambda, b, ls, R, f } = setup(\n        balances,\n        params,\n        derived,\n        fee,\n        rVec,\n        1\n    );\n\n    const returnValue = mulDown(\n        divDown(ONE, mulDown(f, ONE.sub(mulDown(ls, mulDown(c, c))))),\n        divDown(ONE, mulDown(mulDown(lambda, lambda), R)).add(\n            divDown(\n                mulDown(y0.sub(b), y0.sub(b)),\n                mulDown(\n                    mulDown(mulDown(lambda, lambda), mulDown(lambda, lambda)),\n                    mulDown(mulDown(R, R), R)\n                )\n            )\n        )\n    );\n\n    return returnValue;\n}\n","import { BigNumber } from '@ethersproject/bignumber';\nimport { WeiPerEther as ONE } from '@ethersproject/constants';\nimport { MAX_BALANCES, MAX_INVARIANT } from './constants';\nimport { ONE_XP, SMALL } from '../../gyroHelpers/constants';\nimport {\n    GyroEParams,\n    DerivedGyroEParams,\n    Vector2,\n    calcAtAChi,\n    calcInvariantSqrt,\n    calcAChiAChiInXp,\n    calcXGivenY,\n    calcYGivenX,\n    checkAssetBounds,\n} from './gyroEMathHelpers';\nimport {\n    mulDown,\n    divDown,\n    mulUpMagU,\n    divUpMagU,\n    mulUpXpToNpU,\n    mulDownXpToNpU,\n    divXpU,\n    sqrt,\n} from '../../gyroHelpers/gyroSignedFixedPoint';\nimport {\n    normalizedLiquidityXIn,\n    normalizedLiquidityYIn,\n    calcSpotPriceXGivenY,\n    calcSpotPriceYGivenX,\n    dPxDXOut,\n    dPxDYIn,\n    dPyDXIn,\n    dPyDYOut,\n} from './gyroEMathFunctions';\n\nexport function calculateNormalizedLiquidity(\n    balances: BigNumber[],\n    params: GyroEParams,\n    derived: DerivedGyroEParams,\n    r: Vector2,\n    fee: BigNumber,\n    tokenInIsToken0: boolean\n): BigNumber {\n    if (tokenInIsToken0) {\n        return normalizedLiquidityXIn(balances, params, derived, fee, r);\n    } else {\n        return normalizedLiquidityYIn(balances, params, derived, fee, r);\n    }\n}\n\nexport function calculateInvariantWithError(\n    balances: BigNumber[],\n    params: GyroEParams,\n    derived: DerivedGyroEParams\n): [BigNumber, BigNumber] {\n    const [x, y] = balances;\n\n    if (x.add(y).gt(MAX_BALANCES)) throw new Error('MAX ASSETS EXCEEDED');\n    const AtAChi = calcAtAChi(x, y, params, derived);\n\n    const invariantResult = calcInvariantSqrt(x, y, params, derived);\n    const square_root = invariantResult[0];\n    let err = invariantResult[1];\n\n    if (square_root.gt(0)) {\n        err = divUpMagU(err.add(1), square_root.mul(2));\n    } else {\n        err = err.gt(0)\n            ? sqrt(err, BigNumber.from(5))\n            : BigNumber.from(10).pow(9);\n    }\n\n    err = mulUpMagU(params.lambda, x.add(y))\n        .div(ONE_XP)\n        .add(err)\n        .add(1)\n        .mul(20);\n\n    const mulDenominator = divXpU(\n        ONE_XP,\n        calcAChiAChiInXp(params, derived).sub(ONE_XP)\n    );\n    const invariant = mulDownXpToNpU(\n        AtAChi.add(square_root).sub(err),\n        mulDenominator\n    );\n    err = mulUpXpToNpU(err, mulDenominator);\n\n    err = err\n        .add(\n            mulUpXpToNpU(invariant, mulDenominator)\n                .mul(\n                    params.lambda\n                        .mul(params.lambda)\n                        .div(BigNumber.from(10).pow(36))\n                )\n                .mul(40)\n                .div(ONE_XP)\n        )\n        .add(1);\n\n    if (invariant.add(err).gt(MAX_INVARIANT))\n        throw new Error('MAX INVARIANT EXCEEDED');\n\n    return [invariant, err];\n}\n\nexport function calcOutGivenIn(\n    balances: BigNumber[],\n    amountIn: BigNumber,\n    tokenInIsToken0: boolean,\n    params: GyroEParams,\n    derived: DerivedGyroEParams,\n    invariant: Vector2\n): BigNumber {\n    if (amountIn.lt(SMALL)) return BigNumber.from(0);\n\n    const ixIn = Number(!tokenInIsToken0);\n    const ixOut = Number(tokenInIsToken0);\n\n    const calcGiven = tokenInIsToken0 ? calcYGivenX : calcXGivenY;\n\n    const balInNew = balances[ixIn].add(amountIn);\n\n    checkAssetBounds(params, derived, invariant, balInNew, ixIn);\n    const balOutNew = calcGiven(balInNew, params, derived, invariant);\n    const amountOut = balances[ixOut].sub(balOutNew);\n    if (amountOut.lt(0)) {\n        // Should never happen; check anyways to catch a numerical bug.\n        throw new Error('ASSET BOUNDS EXCEEDED 1');\n    }\n\n    return amountOut;\n}\n\nexport function calcInGivenOut(\n    balances: BigNumber[],\n    amountOut: BigNumber,\n    tokenInIsToken0: boolean,\n    params: GyroEParams,\n    derived: DerivedGyroEParams,\n    invariant: Vector2\n): BigNumber {\n    if (amountOut.lt(SMALL)) return BigNumber.from(0);\n\n    const ixIn = Number(!tokenInIsToken0);\n    const ixOut = Number(tokenInIsToken0);\n\n    const calcGiven = tokenInIsToken0 ? calcXGivenY : calcYGivenX;\n\n    if (amountOut.gt(balances[ixOut]))\n        throw new Error('ASSET BOUNDS EXCEEDED 2');\n    const balOutNew = balances[ixOut].sub(amountOut);\n\n    const balInNew = calcGiven(balOutNew, params, derived, invariant);\n    checkAssetBounds(params, derived, invariant, balInNew, ixIn);\n    const amountIn = balInNew.sub(balances[ixIn]);\n\n    if (amountIn.lt(0))\n        // Should never happen; check anyways to catch a numerical bug.\n        throw new Error('ASSET BOUNDS EXCEEDED 3');\n    return amountIn;\n}\n\nexport function calcSpotPriceAfterSwapOutGivenIn(\n    balances: BigNumber[],\n    amountIn: BigNumber,\n    tokenInIsToken0: boolean,\n    params: GyroEParams,\n    derived: DerivedGyroEParams,\n    invariant: Vector2,\n    swapFee: BigNumber\n): BigNumber {\n    const ixIn = Number(!tokenInIsToken0);\n    const f = ONE.sub(swapFee);\n\n    const calcSpotPriceGiven = tokenInIsToken0\n        ? calcSpotPriceYGivenX\n        : calcSpotPriceXGivenY;\n\n    const balInNew = balances[ixIn].add(amountIn);\n    const newSpotPriceFactor = calcSpotPriceGiven(\n        balInNew,\n        params,\n        derived,\n        invariant\n    );\n    return divDown(ONE, mulDown(newSpotPriceFactor, f));\n}\n\nexport function calcSpotPriceAfterSwapInGivenOut(\n    balances: BigNumber[],\n    amountOut: BigNumber,\n    tokenInIsToken0: boolean,\n    params: GyroEParams,\n    derived: DerivedGyroEParams,\n    invariant: Vector2,\n    swapFee: BigNumber\n): BigNumber {\n    const ixOut = Number(tokenInIsToken0);\n    const f = ONE.sub(swapFee);\n\n    const calcSpotPriceGiven = tokenInIsToken0\n        ? calcSpotPriceXGivenY\n        : calcSpotPriceYGivenX;\n\n    const balOutNew = balances[ixOut].sub(amountOut);\n    const newSpotPriceFactor = calcSpotPriceGiven(\n        balOutNew,\n        params,\n        derived,\n        invariant\n    );\n    return divDown(newSpotPriceFactor, f);\n}\n\nexport function calcDerivativePriceAfterSwapOutGivenIn(\n    balances: BigNumber[],\n    tokenInIsToken0: boolean,\n    params: GyroEParams,\n    derived: DerivedGyroEParams,\n    invariant: Vector2,\n    swapFee: BigNumber\n): BigNumber {\n    const ixIn = Number(!tokenInIsToken0);\n\n    const newDerivativeSpotPriceFactor = ixIn\n        ? dPxDYIn(balances, params, derived, swapFee, invariant)\n        : dPyDXIn(balances, params, derived, swapFee, invariant);\n\n    return newDerivativeSpotPriceFactor;\n}\n\nexport function calcDerivativeSpotPriceAfterSwapInGivenOut(\n    balances: BigNumber[],\n    tokenInIsToken0: boolean,\n    params: GyroEParams,\n    derived: DerivedGyroEParams,\n    invariant: Vector2,\n    swapFee: BigNumber\n): BigNumber {\n    const ixIn = Number(!tokenInIsToken0);\n\n    const newDerivativeSpotPriceFactor = ixIn\n        ? dPxDXOut(balances, params, derived, swapFee, invariant)\n        : dPyDYOut(balances, params, derived, swapFee, invariant);\n\n    return newDerivativeSpotPriceFactor;\n}\n","import { getAddress } from '@ethersproject/address';\nimport { WeiPerEther as ONE, Zero } from '@ethersproject/constants';\nimport { formatFixed, BigNumber } from '@ethersproject/bignumber';\nimport { BigNumber as OldBigNumber, bnum, ZERO } from '../../utils/bignumber';\n\nimport {\n    PoolBase,\n    PoolPairBase,\n    PoolTypes,\n    SubgraphToken,\n    SwapTypes,\n    SubgraphPoolBase,\n} from '../../types';\nimport {\n    GyroEParams,\n    DerivedGyroEParams,\n    Vector2,\n    normalizeBalances,\n    balancesFromTokenInOut,\n    reduceFee,\n    addFee,\n    virtualOffset0,\n    virtualOffset1,\n} from './gyroEMath/gyroEMathHelpers';\nimport { isSameAddress, safeParseFixed } from '../../utils';\nimport { mulDown, divDown } from '../gyroHelpers/gyroSignedFixedPoint';\nimport {\n    calculateInvariantWithError,\n    calcOutGivenIn,\n    calcInGivenOut,\n    calcSpotPriceAfterSwapOutGivenIn,\n    calcSpotPriceAfterSwapInGivenOut,\n    calcDerivativePriceAfterSwapOutGivenIn,\n    calcDerivativeSpotPriceAfterSwapInGivenOut,\n} from './gyroEMath/gyroEMath';\nimport { SWAP_LIMIT_FACTOR } from '../gyroHelpers/constants';\nimport { universalNormalizedLiquidity } from '../liquidity';\n\nexport type GyroEPoolPairData = PoolPairBase & {\n    tokenInIsToken0: boolean;\n};\n\nexport type GyroEPoolToken = Pick<\n    SubgraphToken,\n    'address' | 'balance' | 'decimals'\n>;\n\ntype GyroEParamsFromSubgraph = {\n    alpha: string;\n    beta: string;\n    c: string;\n    s: string;\n    lambda: string;\n};\ntype DerivedGyroEParamsFromSubgraph = {\n    tauAlphaX: string;\n    tauAlphaY: string;\n    tauBetaX: string;\n    tauBetaY: string;\n    u: string;\n    v: string;\n    w: string;\n    z: string;\n    dSq: string;\n};\n\nexport class GyroEPool implements PoolBase<GyroEPoolPairData> {\n    poolType: PoolTypes = PoolTypes.GyroE;\n    id: string;\n    address: string;\n    tokensList: string[];\n    tokens: GyroEPoolToken[];\n    swapFee: BigNumber;\n    totalShares: BigNumber;\n    gyroEParams: GyroEParams;\n    derivedGyroEParams: DerivedGyroEParams;\n\n    static fromPool(pool: SubgraphPoolBase): GyroEPool {\n        const {\n            alpha,\n            beta,\n            c,\n            s,\n            lambda,\n            tauAlphaX,\n            tauAlphaY,\n            tauBetaX,\n            tauBetaY,\n            u,\n            v,\n            w,\n            z,\n            dSq,\n        } = pool;\n\n        const gyroEParams = {\n            alpha,\n            beta,\n            c,\n            s,\n            lambda,\n        };\n\n        const derivedGyroEParams = {\n            tauAlphaX,\n            tauAlphaY,\n            tauBetaX,\n            tauBetaY,\n            u,\n            v,\n            w,\n            z,\n            dSq,\n        };\n\n        if (\n            !Object.values(gyroEParams).every((el) => el) ||\n            !Object.values(derivedGyroEParams).every((el) => el)\n        )\n            throw new Error(\n                'Pool missing GyroE params and/or GyroE derived params'\n            );\n\n        return new GyroEPool(\n            pool.id,\n            pool.address,\n            pool.swapFee,\n            pool.totalShares,\n            pool.tokens as GyroEPoolToken[],\n            pool.tokensList,\n            gyroEParams as GyroEParamsFromSubgraph,\n            derivedGyroEParams as DerivedGyroEParamsFromSubgraph\n        );\n    }\n\n    constructor(\n        id: string,\n        address: string,\n        swapFee: string,\n        totalShares: string,\n        tokens: GyroEPoolToken[],\n        tokensList: string[],\n        gyroEParams: GyroEParamsFromSubgraph,\n        derivedGyroEParams: DerivedGyroEParamsFromSubgraph\n    ) {\n        this.id = id;\n        this.address = address;\n        this.swapFee = safeParseFixed(swapFee, 18);\n        this.totalShares = safeParseFixed(totalShares, 18);\n        this.tokens = tokens;\n        this.tokensList = tokensList;\n\n        this.gyroEParams = {\n            alpha: safeParseFixed(gyroEParams.alpha, 18),\n            beta: safeParseFixed(gyroEParams.beta, 18),\n            c: safeParseFixed(gyroEParams.c, 18),\n            s: safeParseFixed(gyroEParams.s, 18),\n            lambda: safeParseFixed(gyroEParams.lambda, 18),\n        };\n\n        this.derivedGyroEParams = {\n            tauAlpha: {\n                x: safeParseFixed(derivedGyroEParams.tauAlphaX, 38),\n                y: safeParseFixed(derivedGyroEParams.tauAlphaY, 38),\n            },\n            tauBeta: {\n                x: safeParseFixed(derivedGyroEParams.tauBetaX, 38),\n                y: safeParseFixed(derivedGyroEParams.tauBetaY, 38),\n            },\n            u: safeParseFixed(derivedGyroEParams.u, 38),\n            v: safeParseFixed(derivedGyroEParams.v, 38),\n            w: safeParseFixed(derivedGyroEParams.w, 38),\n            z: safeParseFixed(derivedGyroEParams.z, 38),\n            dSq: safeParseFixed(derivedGyroEParams.dSq, 38),\n        };\n    }\n\n    parsePoolPairData(tokenIn: string, tokenOut: string): GyroEPoolPairData {\n        const tokenInIndex = this.tokens.findIndex(\n            (t) => getAddress(t.address) === getAddress(tokenIn)\n        );\n        if (tokenInIndex < 0) throw 'Pool does not contain tokenIn';\n        const tI = this.tokens[tokenInIndex];\n        const balanceIn = tI.balance;\n        const decimalsIn = tI.decimals;\n\n        const tokenOutIndex = this.tokens.findIndex(\n            (t) => getAddress(t.address) === getAddress(tokenOut)\n        );\n        if (tokenOutIndex < 0) throw 'Pool does not contain tokenOut';\n        const tO = this.tokens[tokenOutIndex];\n        const balanceOut = tO.balance;\n        const decimalsOut = tO.decimals;\n\n        const tokenInIsToken0 = tokenInIndex === 0;\n\n        const poolPairData: GyroEPoolPairData = {\n            id: this.id,\n            address: this.address,\n            poolType: this.poolType,\n            tokenIn: tokenIn,\n            tokenOut: tokenOut,\n            decimalsIn: Number(decimalsIn),\n            decimalsOut: Number(decimalsOut),\n            balanceIn: safeParseFixed(balanceIn, decimalsIn),\n            balanceOut: safeParseFixed(balanceOut, decimalsOut),\n            swapFee: this.swapFee,\n            tokenInIsToken0,\n        };\n\n        return poolPairData;\n    }\n\n    getNormalizedLiquidity(poolPairData: GyroEPoolPairData): OldBigNumber {\n        return universalNormalizedLiquidity(\n            this._derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n                poolPairData,\n                ZERO\n            )\n        );\n    }\n\n    getLimitAmountSwap(\n        poolPairData: GyroEPoolPairData,\n        swapType: SwapTypes\n    ): OldBigNumber {\n        if (swapType === SwapTypes.SwapExactIn) {\n            const normalizedBalances = normalizeBalances(\n                [poolPairData.balanceIn, poolPairData.balanceOut],\n                [poolPairData.decimalsIn, poolPairData.decimalsOut]\n            );\n            const orderedNormalizedBalances = balancesFromTokenInOut(\n                normalizedBalances[0],\n                normalizedBalances[1],\n                poolPairData.tokenInIsToken0\n            );\n            const [currentInvariant, invErr] = calculateInvariantWithError(\n                orderedNormalizedBalances,\n                this.gyroEParams,\n                this.derivedGyroEParams\n            );\n            const invariant: Vector2 = {\n                x: currentInvariant.add(invErr.mul(2)),\n                y: currentInvariant,\n            };\n            const virtualOffsetFunc = poolPairData.tokenInIsToken0\n                ? virtualOffset0\n                : virtualOffset1;\n            const maxAmountInAssetInPool = virtualOffsetFunc(\n                this.gyroEParams,\n                this.derivedGyroEParams,\n                invariant\n            ).sub(\n                virtualOffsetFunc(\n                    this.gyroEParams,\n                    this.derivedGyroEParams,\n                    invariant,\n                    true\n                )\n            );\n            const limitAmountIn = maxAmountInAssetInPool.sub(\n                normalizedBalances[0]\n            );\n            const limitAmountInPlusSwapFee = divDown(\n                limitAmountIn,\n                ONE.sub(poolPairData.swapFee)\n            );\n            return bnum(\n                formatFixed(\n                    mulDown(limitAmountInPlusSwapFee, SWAP_LIMIT_FACTOR),\n                    18\n                )\n            );\n        } else {\n            return bnum(\n                formatFixed(\n                    mulDown(poolPairData.balanceOut, SWAP_LIMIT_FACTOR),\n                    poolPairData.decimalsOut\n                )\n            );\n        }\n    }\n\n    // Updates the balance of a given token for the pool\n    updateTokenBalanceForPool(token: string, newBalance: BigNumber): void {\n        // token is BPT\n        if (isSameAddress(this.address, token)) {\n            this.updateTotalShares(newBalance);\n        } else {\n            // token is underlying in the pool\n            const T = this.tokens.find((t) => isSameAddress(t.address, token));\n            if (!T) throw Error('Pool does not contain this token');\n            T.balance = formatFixed(newBalance, T.decimals);\n        }\n    }\n\n    updateTotalShares(newTotalShares: BigNumber): void {\n        this.totalShares = newTotalShares;\n    }\n\n    _exactTokenInForTokenOut(\n        poolPairData: GyroEPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        const normalizedBalances = normalizeBalances(\n            [poolPairData.balanceIn, poolPairData.balanceOut],\n            [poolPairData.decimalsIn, poolPairData.decimalsOut]\n        );\n        const orderedNormalizedBalances = balancesFromTokenInOut(\n            normalizedBalances[0],\n            normalizedBalances[1],\n            poolPairData.tokenInIsToken0\n        );\n        const [currentInvariant, invErr] = calculateInvariantWithError(\n            orderedNormalizedBalances,\n            this.gyroEParams,\n            this.derivedGyroEParams\n        );\n\n        const invariant: Vector2 = {\n            x: currentInvariant.add(invErr.mul(2)),\n            y: currentInvariant,\n        };\n        const inAmount = safeParseFixed(amount.toString(), 18);\n        const inAmountLessFee = reduceFee(inAmount, poolPairData.swapFee);\n        const outAmount = calcOutGivenIn(\n            orderedNormalizedBalances,\n            inAmountLessFee,\n            poolPairData.tokenInIsToken0,\n            this.gyroEParams,\n            this.derivedGyroEParams,\n            invariant\n        );\n        return bnum(formatFixed(outAmount, 18));\n    }\n\n    _tokenInForExactTokenOut(\n        poolPairData: GyroEPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        const normalizedBalances = normalizeBalances(\n            [poolPairData.balanceIn, poolPairData.balanceOut],\n            [poolPairData.decimalsIn, poolPairData.decimalsOut]\n        );\n        const orderedNormalizedBalances = balancesFromTokenInOut(\n            normalizedBalances[0],\n            normalizedBalances[1],\n            poolPairData.tokenInIsToken0\n        );\n        const [currentInvariant, invErr] = calculateInvariantWithError(\n            orderedNormalizedBalances,\n            this.gyroEParams,\n            this.derivedGyroEParams\n        );\n        const invariant: Vector2 = {\n            x: currentInvariant.add(invErr.mul(2)),\n            y: currentInvariant,\n        };\n        const outAmount = safeParseFixed(amount.toString(), 18);\n\n        const inAmountLessFee = calcInGivenOut(\n            orderedNormalizedBalances,\n            outAmount,\n            poolPairData.tokenInIsToken0,\n            this.gyroEParams,\n            this.derivedGyroEParams,\n            invariant\n        );\n        const inAmount = addFee(inAmountLessFee, poolPairData.swapFee);\n        return bnum(formatFixed(inAmount, 18));\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _calcTokensOutGivenExactBptIn(bptAmountIn: BigNumber): BigNumber[] {\n        // Missing maths for this\n        return new Array(this.tokens.length).fill(Zero);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _calcBptOutGivenExactTokensIn(amountsIn: BigNumber[]): BigNumber {\n        // Missing maths for this\n        return Zero;\n    }\n\n    _spotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: GyroEPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        const normalizedBalances = normalizeBalances(\n            [poolPairData.balanceIn, poolPairData.balanceOut],\n            [poolPairData.decimalsIn, poolPairData.decimalsOut]\n        );\n        const orderedNormalizedBalances = balancesFromTokenInOut(\n            normalizedBalances[0],\n            normalizedBalances[1],\n            poolPairData.tokenInIsToken0\n        );\n        const [currentInvariant, invErr] = calculateInvariantWithError(\n            orderedNormalizedBalances,\n            this.gyroEParams,\n            this.derivedGyroEParams\n        );\n        const invariant: Vector2 = {\n            x: currentInvariant.add(invErr.mul(2)),\n            y: currentInvariant,\n        };\n        const inAmount = safeParseFixed(amount.toString(), 18);\n        const inAmountLessFee = reduceFee(inAmount, poolPairData.swapFee);\n        const newSpotPrice = calcSpotPriceAfterSwapOutGivenIn(\n            orderedNormalizedBalances,\n            inAmountLessFee,\n            poolPairData.tokenInIsToken0,\n            this.gyroEParams,\n            this.derivedGyroEParams,\n            invariant,\n            poolPairData.swapFee\n        );\n        return bnum(formatFixed(newSpotPrice, 18));\n    }\n\n    _spotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: GyroEPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        const normalizedBalances = normalizeBalances(\n            [poolPairData.balanceIn, poolPairData.balanceOut],\n            [poolPairData.decimalsIn, poolPairData.decimalsOut]\n        );\n        const orderedNormalizedBalances = balancesFromTokenInOut(\n            normalizedBalances[0],\n            normalizedBalances[1],\n            poolPairData.tokenInIsToken0\n        );\n        const [currentInvariant, invErr] = calculateInvariantWithError(\n            orderedNormalizedBalances,\n            this.gyroEParams,\n            this.derivedGyroEParams\n        );\n        const invariant: Vector2 = {\n            x: currentInvariant.add(invErr.mul(2)),\n            y: currentInvariant,\n        };\n        const outAmount = safeParseFixed(amount.toString(), 18);\n        const newSpotPrice = calcSpotPriceAfterSwapInGivenOut(\n            orderedNormalizedBalances,\n            outAmount,\n            poolPairData.tokenInIsToken0,\n            this.gyroEParams,\n            this.derivedGyroEParams,\n            invariant,\n            poolPairData.swapFee\n        );\n        return bnum(formatFixed(newSpotPrice, 18));\n    }\n\n    _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: GyroEPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        const inAmount = safeParseFixed(amount.toString(), 18);\n        const normalizedBalances = normalizeBalances(\n            [poolPairData.balanceIn, poolPairData.balanceOut],\n            [poolPairData.decimalsIn, poolPairData.decimalsOut]\n        );\n        const orderedNormalizedBalances = balancesFromTokenInOut(\n            normalizedBalances[0],\n            normalizedBalances[1],\n            poolPairData.tokenInIsToken0\n        );\n        const [currentInvariant, invErr] = calculateInvariantWithError(\n            orderedNormalizedBalances,\n            this.gyroEParams,\n            this.derivedGyroEParams\n        );\n        const invariant: Vector2 = {\n            x: currentInvariant.add(invErr.mul(2)),\n            y: currentInvariant,\n        };\n\n        const derivative = calcDerivativePriceAfterSwapOutGivenIn(\n            [\n                orderedNormalizedBalances[0].add(\n                    reduceFee(inAmount, poolPairData.swapFee)\n                ),\n                orderedNormalizedBalances[1],\n            ],\n            poolPairData.tokenInIsToken0,\n            this.gyroEParams,\n            this.derivedGyroEParams,\n            invariant,\n            poolPairData.swapFee\n        );\n        return bnum(formatFixed(derivative, 18));\n    }\n\n    _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: GyroEPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        const normalizedBalances = normalizeBalances(\n            [poolPairData.balanceIn, poolPairData.balanceOut],\n            [poolPairData.decimalsIn, poolPairData.decimalsOut]\n        );\n        const orderedNormalizedBalances = balancesFromTokenInOut(\n            normalizedBalances[0],\n            normalizedBalances[1],\n            poolPairData.tokenInIsToken0\n        );\n        const [currentInvariant, invErr] = calculateInvariantWithError(\n            orderedNormalizedBalances,\n            this.gyroEParams,\n            this.derivedGyroEParams\n        );\n        const invariant: Vector2 = {\n            x: currentInvariant.add(invErr.mul(2)),\n            y: currentInvariant,\n        };\n        const outAmount = safeParseFixed(amount.toString(), 18);\n        const derivative = calcDerivativeSpotPriceAfterSwapInGivenOut(\n            [\n                orderedNormalizedBalances[0],\n                orderedNormalizedBalances[1].sub(outAmount),\n            ],\n            poolPairData.tokenInIsToken0,\n            this.gyroEParams,\n            this.derivedGyroEParams,\n            invariant,\n            poolPairData.swapFee\n        );\n        return bnum(formatFixed(derivative, 18));\n    }\n}\n","import { BigNumber, parseFixed } from '@ethersproject/bignumber';\nimport { WeiPerEther as ONE } from '@ethersproject/constants';\nimport { mulDown } from '../../gyroHelpers/gyroSignedFixedPoint';\n\nexport function normalizeBalances(\n    balances: BigNumber[],\n    decimals: number[],\n    tokenRates: BigNumber[]\n): BigNumber[] {\n    const scalingFactors = decimals.map((d) => parseFixed('1', d));\n\n    return balances.map((bal, index) =>\n        mulDown(bal.mul(ONE).div(scalingFactors[index]), tokenRates[index])\n    );\n}\n","import { getAddress } from '@ethersproject/address';\nimport { WeiPerEther as ONE, Zero } from '@ethersproject/constants';\nimport { formatFixed, BigNumber } from '@ethersproject/bignumber';\nimport { BigNumber as OldBigNumber, bnum, ZERO } from '../../utils/bignumber';\n\nimport {\n    PoolBase,\n    PoolPairBase,\n    PoolTypes,\n    SubgraphToken,\n    SwapTypes,\n    SubgraphPoolBase,\n} from '../../types';\nimport {\n    GyroEParams,\n    DerivedGyroEParams,\n    Vector2,\n    balancesFromTokenInOut,\n    reduceFee,\n    addFee,\n    virtualOffset0,\n    virtualOffset1,\n} from '../gyroEPool/gyroEMath/gyroEMathHelpers';\nimport { isSameAddress, safeParseFixed } from '../../utils';\nimport { mulDown, divDown } from '../gyroHelpers/gyroSignedFixedPoint';\nimport {\n    calculateInvariantWithError,\n    calcOutGivenIn,\n    calcInGivenOut,\n    calcSpotPriceAfterSwapOutGivenIn,\n    calcSpotPriceAfterSwapInGivenOut,\n    calcDerivativePriceAfterSwapOutGivenIn,\n    calcDerivativeSpotPriceAfterSwapInGivenOut,\n} from '../gyroEPool/gyroEMath/gyroEMath';\nimport { SWAP_LIMIT_FACTOR } from '../gyroHelpers/constants';\nimport { universalNormalizedLiquidity } from '../liquidity';\n\nimport { normalizeBalances } from './gyroEV2Math/gyroEV2MathHelpers';\n\n// Alias for code readability. Observe that `balancesFromTokenInOut()` is its own inverse.\nconst valuesInOutFrom01 = balancesFromTokenInOut;\n\nexport type GyroEPoolPairData = PoolPairBase & {\n    tokenInIsToken0: boolean;\n};\n\nexport type GyroEPoolToken = Pick<\n    SubgraphToken,\n    'address' | 'balance' | 'decimals'\n>;\n\ntype GyroEParamsFromSubgraph = {\n    alpha: string;\n    beta: string;\n    c: string;\n    s: string;\n    lambda: string;\n};\ntype DerivedGyroEParamsFromSubgraph = {\n    tauAlphaX: string;\n    tauAlphaY: string;\n    tauBetaX: string;\n    tauBetaY: string;\n    u: string;\n    v: string;\n    w: string;\n    z: string;\n    dSq: string;\n};\n\nexport class GyroEV2Pool implements PoolBase<GyroEPoolPairData> {\n    poolType: PoolTypes = PoolTypes.GyroE;\n    id: string;\n    address: string;\n    tokensList: string[];\n    tokens: GyroEPoolToken[];\n    swapFee: BigNumber;\n    totalShares: BigNumber;\n    gyroEParams: GyroEParams;\n    derivedGyroEParams: DerivedGyroEParams;\n    tokenRates: BigNumber[];\n\n    static fromPool(pool: SubgraphPoolBase): GyroEV2Pool {\n        const {\n            alpha,\n            beta,\n            c,\n            s,\n            lambda,\n            tauAlphaX,\n            tauAlphaY,\n            tauBetaX,\n            tauBetaY,\n            u,\n            v,\n            w,\n            z,\n            dSq,\n            tokenRates,\n        } = pool;\n\n        const gyroEParams = {\n            alpha,\n            beta,\n            c,\n            s,\n            lambda,\n        };\n\n        const derivedGyroEParams = {\n            tauAlphaX,\n            tauAlphaY,\n            tauBetaX,\n            tauBetaY,\n            u,\n            v,\n            w,\n            z,\n            dSq,\n        };\n\n        if (\n            !Object.values(gyroEParams).every((el) => el) ||\n            !Object.values(derivedGyroEParams).every((el) => el)\n        )\n            throw new Error(\n                'Pool missing GyroE params and/or GyroE derived params'\n            );\n\n        if (!tokenRates) throw new Error('GyroEV2 Pool missing tokenRates');\n\n        return new GyroEV2Pool(\n            pool.id,\n            pool.address,\n            pool.swapFee,\n            pool.totalShares,\n            pool.tokens as GyroEPoolToken[],\n            pool.tokensList,\n            gyroEParams as GyroEParamsFromSubgraph,\n            derivedGyroEParams as DerivedGyroEParamsFromSubgraph,\n            tokenRates\n        );\n    }\n\n    constructor(\n        id: string,\n        address: string,\n        swapFee: string,\n        totalShares: string,\n        tokens: GyroEPoolToken[],\n        tokensList: string[],\n        gyroEParams: GyroEParamsFromSubgraph,\n        derivedGyroEParams: DerivedGyroEParamsFromSubgraph,\n        tokenRates: string[]\n    ) {\n        this.id = id;\n        this.address = address;\n        this.swapFee = safeParseFixed(swapFee, 18);\n        this.totalShares = safeParseFixed(totalShares, 18);\n        this.tokens = tokens;\n        this.tokensList = tokensList;\n        this.tokenRates = [\n            safeParseFixed(tokenRates[0], 18),\n            safeParseFixed(tokenRates[1], 18),\n        ];\n\n        this.gyroEParams = {\n            alpha: safeParseFixed(gyroEParams.alpha, 18),\n            beta: safeParseFixed(gyroEParams.beta, 18),\n            c: safeParseFixed(gyroEParams.c, 18),\n            s: safeParseFixed(gyroEParams.s, 18),\n            lambda: safeParseFixed(gyroEParams.lambda, 18),\n        };\n\n        this.derivedGyroEParams = {\n            tauAlpha: {\n                x: safeParseFixed(derivedGyroEParams.tauAlphaX, 38),\n                y: safeParseFixed(derivedGyroEParams.tauAlphaY, 38),\n            },\n            tauBeta: {\n                x: safeParseFixed(derivedGyroEParams.tauBetaX, 38),\n                y: safeParseFixed(derivedGyroEParams.tauBetaY, 38),\n            },\n            u: safeParseFixed(derivedGyroEParams.u, 38),\n            v: safeParseFixed(derivedGyroEParams.v, 38),\n            w: safeParseFixed(derivedGyroEParams.w, 38),\n            z: safeParseFixed(derivedGyroEParams.z, 38),\n            dSq: safeParseFixed(derivedGyroEParams.dSq, 38),\n        };\n    }\n\n    parsePoolPairData(tokenIn: string, tokenOut: string): GyroEPoolPairData {\n        const tokenInIndex = this.tokens.findIndex(\n            (t) => getAddress(t.address) === getAddress(tokenIn)\n        );\n        if (tokenInIndex < 0) throw 'Pool does not contain tokenIn';\n        const tI = this.tokens[tokenInIndex];\n        const balanceIn = tI.balance;\n        const decimalsIn = tI.decimals;\n\n        const tokenOutIndex = this.tokens.findIndex(\n            (t) => getAddress(t.address) === getAddress(tokenOut)\n        );\n        if (tokenOutIndex < 0) throw 'Pool does not contain tokenOut';\n        const tO = this.tokens[tokenOutIndex];\n        const balanceOut = tO.balance;\n        const decimalsOut = tO.decimals;\n\n        const tokenInIsToken0 = tokenInIndex === 0;\n\n        const poolPairData: GyroEPoolPairData = {\n            id: this.id,\n            address: this.address,\n            poolType: this.poolType,\n            tokenIn: tokenIn,\n            tokenOut: tokenOut,\n            decimalsIn: Number(decimalsIn),\n            decimalsOut: Number(decimalsOut),\n            balanceIn: safeParseFixed(balanceIn, decimalsIn),\n            balanceOut: safeParseFixed(balanceOut, decimalsOut),\n            swapFee: this.swapFee,\n            tokenInIsToken0,\n        };\n\n        return poolPairData;\n    }\n\n    getNormalizedLiquidity(poolPairData: GyroEPoolPairData): OldBigNumber {\n        return universalNormalizedLiquidity(\n            this._derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n                poolPairData,\n                ZERO\n            )\n        );\n    }\n\n    getLimitAmountSwap(\n        poolPairData: GyroEPoolPairData,\n        swapType: SwapTypes\n    ): OldBigNumber {\n        if (swapType === SwapTypes.SwapExactIn) {\n            const tokenRateInOut = valuesInOutFrom01(\n                this.tokenRates[0],\n                this.tokenRates[1],\n                poolPairData.tokenInIsToken0\n            );\n            const normalizedBalances = normalizeBalances(\n                [poolPairData.balanceIn, poolPairData.balanceOut],\n                [poolPairData.decimalsIn, poolPairData.decimalsOut],\n                tokenRateInOut\n            );\n            const orderedNormalizedBalances = balancesFromTokenInOut(\n                normalizedBalances[0],\n                normalizedBalances[1],\n                poolPairData.tokenInIsToken0\n            );\n            const [currentInvariant, invErr] = calculateInvariantWithError(\n                orderedNormalizedBalances,\n                this.gyroEParams,\n                this.derivedGyroEParams\n            );\n            const invariant: Vector2 = {\n                x: currentInvariant.add(invErr.mul(2)),\n                y: currentInvariant,\n            };\n            const virtualOffsetFunc = poolPairData.tokenInIsToken0\n                ? virtualOffset0\n                : virtualOffset1;\n            const maxAmountInAssetInPool = virtualOffsetFunc(\n                this.gyroEParams,\n                this.derivedGyroEParams,\n                invariant\n            ).sub(\n                virtualOffsetFunc(\n                    this.gyroEParams,\n                    this.derivedGyroEParams,\n                    invariant,\n                    true\n                )\n            );\n            const limitAmountIn = divDown(\n                maxAmountInAssetInPool.sub(normalizedBalances[0]),\n                tokenRateInOut[0]\n            );\n            const limitAmountInPlusSwapFee = divDown(\n                limitAmountIn,\n                ONE.sub(poolPairData.swapFee)\n            );\n            return bnum(\n                formatFixed(\n                    mulDown(limitAmountInPlusSwapFee, SWAP_LIMIT_FACTOR),\n                    18\n                )\n            );\n        } else {\n            return bnum(\n                formatFixed(\n                    mulDown(poolPairData.balanceOut, SWAP_LIMIT_FACTOR),\n                    poolPairData.decimalsOut\n                )\n            );\n        }\n    }\n\n    // Updates the balance of a given token for the pool\n    updateTokenBalanceForPool(token: string, newBalance: BigNumber): void {\n        // token is BPT\n        if (isSameAddress(this.address, token)) {\n            this.updateTotalShares(newBalance);\n        } else {\n            // token is underlying in the pool\n            const T = this.tokens.find((t) => isSameAddress(t.address, token));\n            if (!T) throw Error('Pool does not contain this token');\n            T.balance = formatFixed(newBalance, T.decimals);\n        }\n    }\n\n    updateTotalShares(newTotalShares: BigNumber): void {\n        this.totalShares = newTotalShares;\n    }\n\n    _exactTokenInForTokenOut(\n        poolPairData: GyroEPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            const tokenRateInOut = valuesInOutFrom01(\n                this.tokenRates[0],\n                this.tokenRates[1],\n                poolPairData.tokenInIsToken0\n            );\n            const normalizedBalances = normalizeBalances(\n                [poolPairData.balanceIn, poolPairData.balanceOut],\n                [poolPairData.decimalsIn, poolPairData.decimalsOut],\n                tokenRateInOut\n            );\n            const orderedNormalizedBalances = balancesFromTokenInOut(\n                normalizedBalances[0],\n                normalizedBalances[1],\n                poolPairData.tokenInIsToken0\n            );\n            const [currentInvariant, invErr] = calculateInvariantWithError(\n                orderedNormalizedBalances,\n                this.gyroEParams,\n                this.derivedGyroEParams\n            );\n\n            const invariant: Vector2 = {\n                x: currentInvariant.add(invErr.mul(2)),\n                y: currentInvariant,\n            };\n            const inAmount = safeParseFixed(amount.toString(), 18);\n            const inAmountLessFee = reduceFee(inAmount, poolPairData.swapFee);\n            const inAmountLessFeeScaled = mulDown(\n                inAmountLessFee,\n                tokenRateInOut[0]\n            );\n            const outAmountScaled = calcOutGivenIn(\n                orderedNormalizedBalances,\n                inAmountLessFeeScaled,\n                poolPairData.tokenInIsToken0,\n                this.gyroEParams,\n                this.derivedGyroEParams,\n                invariant\n            );\n            const outAmount = divDown(outAmountScaled, tokenRateInOut[1]);\n            return bnum(formatFixed(outAmount, 18));\n        } catch (err) {\n            return ZERO;\n        }\n    }\n\n    _tokenInForExactTokenOut(\n        poolPairData: GyroEPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            const tokenRateInOut = valuesInOutFrom01(\n                this.tokenRates[0],\n                this.tokenRates[1],\n                poolPairData.tokenInIsToken0\n            );\n            const normalizedBalances = normalizeBalances(\n                [poolPairData.balanceIn, poolPairData.balanceOut],\n                [poolPairData.decimalsIn, poolPairData.decimalsOut],\n                tokenRateInOut\n            );\n            const orderedNormalizedBalances = balancesFromTokenInOut(\n                normalizedBalances[0],\n                normalizedBalances[1],\n                poolPairData.tokenInIsToken0\n            );\n            const [currentInvariant, invErr] = calculateInvariantWithError(\n                orderedNormalizedBalances,\n                this.gyroEParams,\n                this.derivedGyroEParams\n            );\n            const invariant: Vector2 = {\n                x: currentInvariant.add(invErr.mul(2)),\n                y: currentInvariant,\n            };\n            const outAmount = safeParseFixed(amount.toString(), 18);\n            const outAmountScaled = mulDown(outAmount, tokenRateInOut[1]);\n\n            const inAmountScaledLessFee = calcInGivenOut(\n                orderedNormalizedBalances,\n                outAmountScaled,\n                poolPairData.tokenInIsToken0,\n                this.gyroEParams,\n                this.derivedGyroEParams,\n                invariant\n            );\n            const inAmountLessFee = divDown(\n                inAmountScaledLessFee,\n                tokenRateInOut[0]\n            );\n            const inAmount = addFee(inAmountLessFee, poolPairData.swapFee);\n            return bnum(formatFixed(inAmount, 18));\n        } catch (err) {\n            return ZERO;\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _calcTokensOutGivenExactBptIn(bptAmountIn: BigNumber): BigNumber[] {\n        // Missing maths for this\n        return new Array(this.tokens.length).fill(Zero);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _calcBptOutGivenExactTokensIn(amountsIn: BigNumber[]): BigNumber {\n        // Missing maths for this\n        return Zero;\n    }\n\n    _spotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: GyroEPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            const tokenRateInOut = valuesInOutFrom01(\n                this.tokenRates[0],\n                this.tokenRates[1],\n                poolPairData.tokenInIsToken0\n            );\n            const normalizedBalances = normalizeBalances(\n                [poolPairData.balanceIn, poolPairData.balanceOut],\n                [poolPairData.decimalsIn, poolPairData.decimalsOut],\n                tokenRateInOut\n            );\n            const orderedNormalizedBalances = balancesFromTokenInOut(\n                normalizedBalances[0],\n                normalizedBalances[1],\n                poolPairData.tokenInIsToken0\n            );\n            const [currentInvariant, invErr] = calculateInvariantWithError(\n                orderedNormalizedBalances,\n                this.gyroEParams,\n                this.derivedGyroEParams\n            );\n            const invariant: Vector2 = {\n                x: currentInvariant.add(invErr.mul(2)),\n                y: currentInvariant,\n            };\n            const inAmount = safeParseFixed(amount.toString(), 18);\n            const inAmountLessFee = reduceFee(inAmount, poolPairData.swapFee);\n            const inAmountLessFeeScaled = mulDown(\n                inAmountLessFee,\n                tokenRateInOut[0]\n            );\n            const newSpotPriceScaled = calcSpotPriceAfterSwapOutGivenIn(\n                orderedNormalizedBalances,\n                inAmountLessFeeScaled,\n                poolPairData.tokenInIsToken0,\n                this.gyroEParams,\n                this.derivedGyroEParams,\n                invariant,\n                poolPairData.swapFee\n            );\n            const newSpotPrice = divDown(\n                mulDown(newSpotPriceScaled, tokenRateInOut[1]),\n                tokenRateInOut[0]\n            );\n            return bnum(formatFixed(newSpotPrice, 18));\n        } catch (err) {\n            return ZERO;\n        }\n    }\n\n    _spotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: GyroEPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            const tokenRateInOut = valuesInOutFrom01(\n                this.tokenRates[0],\n                this.tokenRates[1],\n                poolPairData.tokenInIsToken0\n            );\n            const normalizedBalances = normalizeBalances(\n                [poolPairData.balanceIn, poolPairData.balanceOut],\n                [poolPairData.decimalsIn, poolPairData.decimalsOut],\n                tokenRateInOut\n            );\n            const orderedNormalizedBalances = balancesFromTokenInOut(\n                normalizedBalances[0],\n                normalizedBalances[1],\n                poolPairData.tokenInIsToken0\n            );\n            const [currentInvariant, invErr] = calculateInvariantWithError(\n                orderedNormalizedBalances,\n                this.gyroEParams,\n                this.derivedGyroEParams\n            );\n            const invariant: Vector2 = {\n                x: currentInvariant.add(invErr.mul(2)),\n                y: currentInvariant,\n            };\n            const outAmount = safeParseFixed(amount.toString(), 18);\n            const outAmountScaled = mulDown(outAmount, tokenRateInOut[1]);\n            const newSpotPriceScaled = calcSpotPriceAfterSwapInGivenOut(\n                orderedNormalizedBalances,\n                outAmountScaled,\n                poolPairData.tokenInIsToken0,\n                this.gyroEParams,\n                this.derivedGyroEParams,\n                invariant,\n                poolPairData.swapFee\n            );\n            const newSpotPrice = divDown(\n                mulDown(newSpotPriceScaled, tokenRateInOut[1]),\n                tokenRateInOut[0]\n            );\n            return bnum(formatFixed(newSpotPrice, 18));\n        } catch (err) {\n            return ZERO;\n        }\n    }\n\n    _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: GyroEPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            const inAmount = safeParseFixed(amount.toString(), 18);\n            const tokenRateInOut = valuesInOutFrom01(\n                this.tokenRates[0],\n                this.tokenRates[1],\n                poolPairData.tokenInIsToken0\n            );\n            const normalizedBalances = normalizeBalances(\n                [poolPairData.balanceIn, poolPairData.balanceOut],\n                [poolPairData.decimalsIn, poolPairData.decimalsOut],\n                tokenRateInOut\n            );\n            const orderedNormalizedBalances = balancesFromTokenInOut(\n                normalizedBalances[0],\n                normalizedBalances[1],\n                poolPairData.tokenInIsToken0\n            );\n            const [currentInvariant, invErr] = calculateInvariantWithError(\n                orderedNormalizedBalances,\n                this.gyroEParams,\n                this.derivedGyroEParams\n            );\n            const invariant: Vector2 = {\n                x: currentInvariant.add(invErr.mul(2)),\n                y: currentInvariant,\n            };\n\n            const derivativeScaled = calcDerivativePriceAfterSwapOutGivenIn(\n                [\n                    orderedNormalizedBalances[0].add(\n                        reduceFee(\n                            mulDown(inAmount, tokenRateInOut[0]),\n                            poolPairData.swapFee\n                        )\n                    ),\n                    orderedNormalizedBalances[1],\n                ],\n                poolPairData.tokenInIsToken0,\n                this.gyroEParams,\n                this.derivedGyroEParams,\n                invariant,\n                poolPairData.swapFee\n            );\n            const derivative = mulDown(derivativeScaled, tokenRateInOut[1]);\n            return bnum(formatFixed(derivative, 18));\n        } catch (err) {\n            return ZERO;\n        }\n    }\n\n    _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: GyroEPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            const tokenRateInOut = valuesInOutFrom01(\n                this.tokenRates[0],\n                this.tokenRates[1],\n                poolPairData.tokenInIsToken0\n            );\n            const normalizedBalances = normalizeBalances(\n                [poolPairData.balanceIn, poolPairData.balanceOut],\n                [poolPairData.decimalsIn, poolPairData.decimalsOut],\n                tokenRateInOut\n            );\n            const orderedNormalizedBalances = balancesFromTokenInOut(\n                normalizedBalances[0],\n                normalizedBalances[1],\n                poolPairData.tokenInIsToken0\n            );\n            const [currentInvariant, invErr] = calculateInvariantWithError(\n                orderedNormalizedBalances,\n                this.gyroEParams,\n                this.derivedGyroEParams\n            );\n            const invariant: Vector2 = {\n                x: currentInvariant.add(invErr.mul(2)),\n                y: currentInvariant,\n            };\n            const outAmount = safeParseFixed(amount.toString(), 18);\n            const derivativeScaled = calcDerivativeSpotPriceAfterSwapInGivenOut(\n                [\n                    orderedNormalizedBalances[0],\n                    orderedNormalizedBalances[1].sub(\n                        mulDown(outAmount, tokenRateInOut[1])\n                    ),\n                ],\n                poolPairData.tokenInIsToken0,\n                this.gyroEParams,\n                this.derivedGyroEParams,\n                invariant,\n                poolPairData.swapFee\n            );\n            const rateAdjFactor = divDown(\n                mulDown(tokenRateInOut[1], tokenRateInOut[1]),\n                tokenRateInOut[0]\n            );\n            const derivative = mulDown(derivativeScaled, rateAdjFactor);\n            return bnum(formatFixed(derivative, 18));\n        } catch (err) {\n            return ZERO;\n        }\n    }\n}\n","import { BigNumber as OldBigNumber, bnum, scale } from '../../utils/bignumber';\nimport { FxPoolPairData } from './fxPool';\nimport { formatFixed } from '@ethersproject/bignumber';\n\n// Constants\nexport const CURVEMATH_MAX_DIFF = -0.000001000000000000024;\nexport const NEGATIVE_ONE = bnum('-1');\nexport const ONE = bnum('1');\nexport const ONE_TO_THE_SECOND_NUM = 100;\nexport const ONE_TO_THE_SECOND = BigInt(`${ONE_TO_THE_SECOND_NUM}`);\nexport const ONE_TO_THE_EIGHT_NUM = 100000000;\nexport const ONE_TO_THE_EIGHT = BigInt(`${ONE_TO_THE_EIGHT_NUM}`);\nexport const ONE_TO_THE_SIX_NUM = 1000000;\nexport const ONE_TO_THE_SIX = BigInt(`${ONE_TO_THE_SIX_NUM}`);\nexport const ONE_TO_THE_THIRTEEN_NUM = 10000000000000;\nexport const ONE_TO_THE_THIRTEEN = BigInt(`${ONE_TO_THE_THIRTEEN_NUM}`);\nexport const ONE_ETHER = scale(bnum('1'), 18);\nexport const ALMOST_ZERO = 0.0000000000000000001; // swapping within beta region has no slippage\nconst CURVEMATH_MAX = 0.25; //CURVEMATH MAX from contract\n\nexport enum CurveMathRevert {\n    LowerHalt = 'CurveMath/lower-halt',\n    UpperHalt = 'CurveMath/upper-halt',\n    SwapInvariantViolation = 'CurveMath/swap-invariant-violation',\n    SwapConvergenceFailed = 'CurveMath/swap-convergence-failed',\n    CannotSwap = 'CannotSwap',\n}\n\ninterface ParsedFxPoolData {\n    alpha: number;\n    beta: number;\n    delta: number;\n    epsilon: number;\n    lambda: number;\n    baseTokenRate: number;\n    _oGLiq: number;\n    _nGLiq: number;\n    _oBals: number[];\n    _nBals: number[];\n    givenAmountInNumeraire: number;\n}\n\ninterface ReservesInNumeraire {\n    tokenInReservesInNumeraire: number;\n    tokenOutReservesInNumeraire: number;\n    _oGLiq: number;\n}\n\nconst isUSDC = (address: string) => {\n    if (\n        address == '0x2791bca1f2de4661ed88a30c99a7a9449aa84174' ||\n        address == '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48'\n    ) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\nconst calculateGivenAmountInNumeraire = (\n    isOriginSwap: boolean,\n    poolPairData: FxPoolPairData,\n    amount: number\n) => {\n    let calculatedNumeraireAmount;\n\n    if (isOriginSwap) {\n        // tokenIn is given\n        calculatedNumeraireAmount = viewNumeraireAmount(\n            amount,\n            poolPairData.tokenInLatestFXPrice.toNumber()\n        );\n    } else {\n        // tokenOut is given\n        calculatedNumeraireAmount = viewNumeraireAmount(\n            amount,\n            poolPairData.tokenOutLatestFXPrice.toNumber()\n        );\n    }\n\n    return calculatedNumeraireAmount;\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const convertToNumber = (\n    amount: number,\n    baseDecimal: number | string\n) => {\n    if (typeof baseDecimal === 'string') {\n        return Number(bnum(amount).div(bnum(ONE_ETHER)));\n    } else {\n        return amount / baseDecimal;\n    }\n};\n\nexport const poolBalancesToNumeraire = (\n    poolPairData: FxPoolPairData\n): ReservesInNumeraire => {\n    let tokenInNumeraire, tokenOutNumeraire;\n\n    if (isUSDC(poolPairData.tokenIn)) {\n        tokenInNumeraire = convertToNumber(\n            viewNumeraireAmount(\n                Number(poolPairData.balanceIn),\n                poolPairData.tokenInLatestFXPrice.toNumber()\n            ),\n            getBaseDecimals(poolPairData.decimalsIn)\n        );\n        tokenOutNumeraire = convertToNumber(\n            viewNumeraireAmount(\n                Number(poolPairData.balanceOut),\n                poolPairData.tokenOutLatestFXPrice.toNumber()\n            ),\n            getBaseDecimals(poolPairData.decimalsOut)\n        );\n    } else {\n        tokenInNumeraire = convertToNumber(\n            viewNumeraireAmount(\n                Number(poolPairData.balanceOut),\n                poolPairData.tokenOutLatestFXPrice.toNumber()\n            ),\n            getBaseDecimals(poolPairData.decimalsOut)\n        );\n\n        tokenOutNumeraire = convertToNumber(\n            viewNumeraireAmount(\n                Number(poolPairData.balanceIn),\n                poolPairData.tokenInLatestFXPrice.toNumber()\n            ),\n            getBaseDecimals(poolPairData.decimalsIn)\n        );\n    }\n\n    return {\n        tokenInReservesInNumeraire: tokenInNumeraire,\n        tokenOutReservesInNumeraire: tokenOutNumeraire,\n        _oGLiq: tokenInNumeraire + tokenOutNumeraire,\n    };\n};\n// everything is in order of USDC, base token\nconst getParsedFxPoolData = (\n    amount: OldBigNumber,\n    poolPairData: FxPoolPairData,\n    isOriginSwap: boolean\n): ParsedFxPoolData => {\n    // reserves are in raw amount, they converted to numeraire\n    const baseReserves = isUSDC(poolPairData.tokenIn)\n        ? convertToNumber(\n              viewNumeraireAmount(\n                  Number(poolPairData.balanceOut),\n                  poolPairData.tokenOutLatestFXPrice.toNumber()\n              ),\n              getBaseDecimals(poolPairData.decimalsOut)\n          )\n        : convertToNumber(\n              viewNumeraireAmount(\n                  Number(poolPairData.balanceIn),\n                  poolPairData.tokenInLatestFXPrice.toNumber()\n              ),\n              getBaseDecimals(poolPairData.decimalsIn)\n          );\n\n    // reserves are not in wei\n    const usdcReserves = isUSDC(poolPairData.tokenIn)\n        ? convertToNumber(\n              viewNumeraireAmount(\n                  Number(poolPairData.balanceIn),\n                  poolPairData.tokenInLatestFXPrice.toNumber()\n              ),\n              getBaseDecimals(poolPairData.decimalsIn)\n          )\n        : convertToNumber(\n              viewNumeraireAmount(\n                  Number(poolPairData.balanceOut),\n                  poolPairData.tokenOutLatestFXPrice.toNumber()\n              ),\n              getBaseDecimals(poolPairData.decimalsOut)\n          );\n\n    // rate is converted from chainlink to the actual rate in decimals\n    const baseTokenRate = isUSDC(poolPairData.tokenIn)\n        ? poolPairData.tokenOutLatestFXPrice.toNumber()\n        : poolPairData.tokenInLatestFXPrice.toNumber();\n\n    // given amount in or out converted to numeraire\n    const givenAmountInNumeraire = calculateGivenAmountInNumeraire(\n        isOriginSwap,\n        poolPairData,\n        Number(amount.toString())\n    );\n\n    return {\n        alpha: Number(formatFixed(poolPairData.alpha, 18)),\n        beta: Number(formatFixed(poolPairData.beta, 18)),\n        delta: Number(formatFixed(poolPairData.delta, 18)),\n        epsilon: Number(formatFixed(poolPairData.epsilon, 18)),\n        lambda: Number(formatFixed(poolPairData.lambda, 18)),\n        baseTokenRate: baseTokenRate,\n        _oGLiq: baseReserves + usdcReserves,\n        _nGLiq: baseReserves + usdcReserves,\n        _oBals: [usdcReserves, baseReserves],\n        _nBals: isUSDC(poolPairData.tokenIn)\n            ? [\n                  usdcReserves + givenAmountInNumeraire,\n                  baseReserves - givenAmountInNumeraire,\n              ]\n            : [\n                  usdcReserves - givenAmountInNumeraire,\n                  baseReserves + givenAmountInNumeraire,\n              ],\n\n        givenAmountInNumeraire: givenAmountInNumeraire,\n    };\n};\n\n// get base decimals for\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const getBaseDecimals = (decimals: number) => {\n    switch (decimals) {\n        case 6: {\n            return ONE_TO_THE_SIX_NUM;\n        }\n\n        case 2: {\n            return ONE_TO_THE_SECOND_NUM;\n        }\n\n        case 18: {\n            return ONE_ETHER.toString();\n        }\n\n        default: {\n            return ONE_ETHER.toString();\n        }\n    }\n};\n\n// Base Assimilator Functions\n// calculations are from the BaseToUsdAssimilator\nexport const viewRawAmount = (_amount: number, rate: number): OldBigNumber => {\n    return bnum(_amount / rate);\n};\n\nconst viewNumeraireAmount = (_amount: number, rate: number): number => {\n    return _amount * rate;\n};\n\n// Curve Math\n// calculations are from CurveMath.sol\nconst calculateMicroFee = (\n    _bal: number,\n    _ideal: number,\n    _beta: number,\n    _delta: number\n): number => {\n    let _threshold, _feeMargin;\n    let fee_ = 0;\n\n    if (_bal < _ideal) {\n        _threshold = _ideal * (1 - _beta); // CURVEMATH ONE\n\n        if (_bal < _threshold) {\n            _feeMargin = _threshold - _bal;\n            fee_ = _feeMargin / _ideal;\n            fee_ = fee_ * _delta;\n\n            if (fee_ > CURVEMATH_MAX) {\n                fee_ = CURVEMATH_MAX;\n            }\n\n            fee_ = fee_ * _feeMargin;\n        } else {\n            fee_ = 0;\n        }\n    } else {\n        _threshold = _ideal * (1 + _beta); // CURVEMATH_ONE\n\n        if (_bal > _threshold) {\n            _feeMargin = _bal - _threshold;\n\n            fee_ = _feeMargin / _ideal;\n            fee_ = fee_ * _delta;\n\n            if (fee_ > CURVEMATH_MAX) fee_ = CURVEMATH_MAX;\n\n            fee_ = fee_ * _feeMargin;\n        } else {\n            fee_ = 0;\n        }\n    }\n\n    return fee_;\n};\n\nconst calculateFee = (\n    _gLiq: number,\n    _bals: number[],\n    _beta: number,\n    _delta: number,\n    _weights: number[]\n): number => {\n    const _length = _bals.length;\n    let psi_ = 0;\n\n    for (let i = 0; i < _length; i++) {\n        const _ideal = _gLiq * _weights[i];\n\n        // keep away from wei values like how the contract do it\n        psi_ = psi_ + calculateMicroFee(_bals[i], _ideal, _beta, _delta);\n    }\n\n    return psi_;\n};\n\n// return outputAmount and ngliq\nconst calculateTrade = (\n    _oGLiq: number,\n    _nGLiq: number,\n    _oBals: number[],\n    _nBals: number[],\n    _inputAmt: number,\n    _outputIndex: number,\n    poolPairData: ParsedFxPoolData\n): [number, number] => {\n    let outputAmt_;\n    const _weights: number[] = [0.5, 0.5]; // const for now since all weights are 0.5\n\n    const alpha = poolPairData.alpha;\n    const beta = poolPairData.beta;\n    const delta = poolPairData.delta;\n    const lambda = poolPairData.lambda;\n\n    outputAmt_ = -_inputAmt;\n\n    const _omega = calculateFee(_oGLiq, _oBals, beta, delta, _weights);\n\n    let _psi: number;\n\n    for (let i = 0; i < 32; i++) {\n        _psi = calculateFee(_nGLiq, _nBals, beta, delta, _weights);\n\n        const prevAmount = outputAmt_;\n\n        outputAmt_ =\n            _omega < _psi\n                ? -(_inputAmt + (_omega - _psi))\n                : -(_inputAmt + lambda * (_omega - _psi));\n\n        if (\n            outputAmt_ / ONE_TO_THE_THIRTEEN_NUM ==\n            prevAmount / ONE_TO_THE_THIRTEEN_NUM\n        ) {\n            _nGLiq = _oGLiq + _inputAmt + outputAmt_;\n\n            _nBals[_outputIndex] = _oBals[_outputIndex] + outputAmt_;\n\n            // throws error already, removed if statement\n            enforceSwapInvariant(_oGLiq, _omega, _nGLiq, _psi);\n            enforceHalts(_oGLiq, _nGLiq, _oBals, _nBals, _weights, alpha);\n\n            return [outputAmt_, _nGLiq];\n        } else {\n            _nGLiq = _oGLiq + _inputAmt + outputAmt_;\n\n            _nBals[_outputIndex] = _oBals[_outputIndex] + outputAmt_;\n        }\n    }\n\n    throw new Error(CurveMathRevert.SwapConvergenceFailed);\n};\n\n// invariant enforcement\nconst enforceHalts = (\n    _oGLiq: number,\n    _nGLiq: number,\n    _oBals: number[],\n    _nBals: number[],\n    _weights: number[],\n    alpha: number\n): boolean => {\n    const _length = _nBals.length;\n    const _alpha = alpha;\n\n    for (let i = 0; i < _length; i++) {\n        const _nIdeal = _nGLiq * _weights[i];\n\n        if (_nBals[i] > _nIdeal) {\n            const _upperAlpha = 1 + _alpha;\n\n            const _nHalt = _nIdeal * _upperAlpha;\n\n            if (_nBals[i] > _nHalt) {\n                const _oHalt = _oGLiq * _weights[i] * _upperAlpha;\n\n                if (_oBals[i] < _oHalt) {\n                    throw new Error(CurveMathRevert.UpperHalt);\n                }\n                if (_nBals[i] - _nHalt > _oBals[i] - _oHalt) {\n                    throw new Error(CurveMathRevert.UpperHalt);\n                }\n            }\n        } else {\n            const _lowerAlpha = 1 - _alpha;\n\n            const _nHalt = _nIdeal * _lowerAlpha;\n\n            if (_nBals[i] < _nHalt) {\n                let _oHalt = _oGLiq * _weights[i];\n                _oHalt = _oHalt * _lowerAlpha;\n\n                if (_oBals[i] > _oHalt) {\n                    throw new Error(CurveMathRevert.LowerHalt);\n                }\n                if (_nHalt - _nBals[i] > _oHalt - _oBals[i]) {\n                    throw new Error(CurveMathRevert.LowerHalt);\n                }\n            }\n        }\n    }\n    return true;\n};\n\nconst enforceSwapInvariant = (\n    _oGLiq: number,\n    _omega: number,\n    _nGLiq: number,\n    _psi: number\n): boolean => {\n    const _nextUtil = _nGLiq - _psi;\n\n    const _prevUtil = _oGLiq - _omega;\n\n    const _diff = _nextUtil - _prevUtil;\n\n    // from int128 private constant MAX_DIFF = -0x10C6F7A0B5EE converted to plain decimals\n    if (0 < _diff || _diff >= CURVEMATH_MAX_DIFF) {\n        return true;\n    } else {\n        throw new Error(CurveMathRevert.SwapInvariantViolation);\n    }\n};\n\n// Exported functions\n\n// origin swap\nexport function _exactTokenInForTokenOut(\n    amount: OldBigNumber,\n    poolPairData: FxPoolPairData\n): OldBigNumber {\n    const parsedFxPoolData = getParsedFxPoolData(amount, poolPairData, true);\n\n    const targetAmountInNumeraire = parsedFxPoolData.givenAmountInNumeraire;\n\n    if (poolPairData.tokenIn === poolPairData.tokenOut) {\n        return viewRawAmount(\n            targetAmountInNumeraire,\n            poolPairData.tokenInLatestFXPrice.toNumber()\n        ); // must be the token out\n    }\n\n    const _oGLiq = parsedFxPoolData._oGLiq;\n    const _nGLiq = parsedFxPoolData._nGLiq;\n    const _oBals = parsedFxPoolData._oBals;\n    const _nBals = parsedFxPoolData._nBals;\n\n    const _amt = calculateTrade(\n        _oGLiq, // _oGLiq\n        _nGLiq, // _nGLiq\n        _oBals, // _oBals\n        _nBals, // _nBals\n        targetAmountInNumeraire, // input amount\n        isUSDC(poolPairData.tokenIn) ? 1 : 0, // if USDC return base token (index 1), else return 0 for USDC out\n        parsedFxPoolData\n    );\n\n    if (_amt === undefined) {\n        throw new Error(CurveMathRevert.CannotSwap);\n    } else {\n        const epsilon = parsedFxPoolData.epsilon;\n        const _amtWithFee = _amt[0] * (1 - epsilon); // fee retained by the pool\n\n        return viewRawAmount(\n            Math.abs(_amtWithFee),\n            poolPairData.tokenOutLatestFXPrice.toNumber()\n        );\n    }\n}\n\n// target swap\nexport function _tokenInForExactTokenOut(\n    amount: OldBigNumber,\n    poolPairData: FxPoolPairData\n): OldBigNumber {\n    // const amountIn = scale(amount, poolPairData.decimalsOut);\n    const parsedFxPoolData = getParsedFxPoolData(amount, poolPairData, false);\n    const targetAmountInNumeraire = -parsedFxPoolData.givenAmountInNumeraire;\n\n    if (poolPairData.tokenIn === poolPairData.tokenOut) {\n        viewRawAmount(\n            // poolPairData.tokenOut as TokenSymbol,\n            targetAmountInNumeraire,\n            poolPairData.tokenOutLatestFXPrice.toNumber()\n        ); // must be the token out\n    }\n\n    const _oGLiq = parsedFxPoolData._oGLiq;\n    const _nGLiq = parsedFxPoolData._nGLiq;\n    const _oBals = parsedFxPoolData._oBals;\n    const _nBals = parsedFxPoolData._nBals;\n\n    const _amt = calculateTrade(\n        _oGLiq, // _oGLiq\n        _nGLiq, // _nGLiq\n        _oBals, // _oBals\n        _nBals, // _nBals\n        targetAmountInNumeraire,\n        isUSDC(poolPairData.tokenIn) ? 0 : 1, // if USDC return 0 else return 1 for base token\n        parsedFxPoolData\n    );\n\n    if (_amt === undefined) {\n        throw new Error(CurveMathRevert.CannotSwap);\n    } else {\n        const epsilon = Number(formatFixed(poolPairData.epsilon, 18));\n\n        const _amtWithFee = _amt[0] * (1 + epsilon); // fee retained by the pool\n\n        return viewRawAmount(\n            Math.abs(_amtWithFee),\n            poolPairData.tokenInLatestFXPrice.toNumber()\n        ); // must be the token out\n    }\n}\n\nexport const spotPriceBeforeSwap = (\n    amount: OldBigNumber,\n    poolPairData: FxPoolPairData\n): OldBigNumber => {\n    // input amount 1 XSGD to get the output in USDC\n    const inputAmountInNumeraire = 1;\n    const parsedFxPoolData = getParsedFxPoolData(amount, poolPairData, true);\n\n    const _oGLiq = parsedFxPoolData._oGLiq;\n    const _nGLiq = parsedFxPoolData._nGLiq;\n    const _oBals = parsedFxPoolData._oBals;\n    const _nBals = parsedFxPoolData._nBals;\n\n    const outputAmountInNumeraire = calculateTrade(\n        _oGLiq, // _oGLiq\n        _nGLiq, // _nGLiq\n        _oBals, // _oBals\n        _nBals, // _nBals\n        1, // input amount\n        0, // always output in USDC\n        parsedFxPoolData\n    );\n\n    return bnum(\n        ((Math.abs(outputAmountInNumeraire[0]) *\n            (1 - parsedFxPoolData.epsilon)) /\n            Math.abs(inputAmountInNumeraire)) *\n            parsedFxPoolData.baseTokenRate\n    );\n};\n\n// spot price after origin swap\nexport const _spotPriceAfterSwapExactTokenInForTokenOut = (\n    poolPairData: FxPoolPairData,\n    amount: OldBigNumber\n): OldBigNumber => {\n    const parsedFxPoolData = getParsedFxPoolData(amount, poolPairData, true);\n\n    const targetAmountInNumeraire = parsedFxPoolData.givenAmountInNumeraire;\n\n    const _oGLiq = parsedFxPoolData._oGLiq;\n    const _nBals = parsedFxPoolData._nBals;\n    const currentRate = parsedFxPoolData.baseTokenRate;\n    const beta = parsedFxPoolData.beta;\n    const epsilon = parsedFxPoolData.epsilon;\n    const _nGLiq = parsedFxPoolData._nGLiq;\n    const _oBals = parsedFxPoolData._oBals;\n\n    const outputAfterTrade = calculateTrade(\n        _oGLiq, // _oGLiq\n        _nGLiq, // _nGLiq\n        _oBals, // _oBals\n        _nBals, // _nBals\n        targetAmountInNumeraire, // input amount\n        isUSDC(poolPairData.tokenIn) ? 1 : 0, // if USDC return base token (index 1), else return 0 for USDC out\n        parsedFxPoolData\n    );\n\n    const outputAmount = outputAfterTrade[0];\n\n    const maxBetaLimit: number = (1 + beta) * 0.5 * _oGLiq;\n\n    const minBetaLimit: number = (1 - beta) * 0.5 * _oGLiq;\n\n    if (isUSDC(poolPairData.tokenIn)) {\n        // token[0] to token [1] in originswap\n        const oBals0after = _nBals[0];\n\n        const oBals1after = _nBals[1];\n\n        if (oBals1after < minBetaLimit && oBals0after > maxBetaLimit) {\n            // returns 0 because  Math.abs(targetAmountInNumeraire)) * currentRate\n            // used that function with a 0 amount to get a market spot price for the pool\n            // which is used in front end display.\n\n            return amount.isZero()\n                ? spotPriceBeforeSwap(amount, poolPairData)\n                : bnum(\n                      (Math.abs(outputAmount * (1 - epsilon)) /\n                          Math.abs(targetAmountInNumeraire)) *\n                          currentRate\n                  );\n        } else {\n            return bnum(currentRate * (1 - epsilon));\n        }\n    } else {\n        // if usdc is tokenOut\n        //  token[1] to token [0] in originswap\n        const oBals0after = _nBals[1];\n\n        const oBals1after = _nBals[0];\n\n        if (oBals1after < minBetaLimit && oBals0after > maxBetaLimit) {\n            if (amount.isZero())\n                return spotPriceBeforeSwap(amount, poolPairData);\n\n            const ratioOfOutputAndInput =\n                Math.abs(outputAmount * (1 - epsilon)) /\n                Math.abs(targetAmountInNumeraire);\n\n            return bnum(ratioOfOutputAndInput * currentRate);\n        } else {\n            return bnum(currentRate * (1 - epsilon));\n        }\n    }\n};\n\n// spot price after target swap\n// the less the normalized liquidity\n// we must have a absolute of the derivative price\nexport const _spotPriceAfterSwapTokenInForExactTokenOut = (\n    poolPairData: FxPoolPairData,\n    amount: OldBigNumber\n): OldBigNumber => {\n    const parsedFxPoolData = getParsedFxPoolData(amount, poolPairData, false);\n\n    const targetAmountInNumeraire = -parsedFxPoolData.givenAmountInNumeraire;\n\n    const _oGLiq = parsedFxPoolData._oGLiq;\n    const _nBals = parsedFxPoolData._nBals;\n    const currentRate = parsedFxPoolData.baseTokenRate;\n\n    const beta = parsedFxPoolData.beta;\n    const epsilon = parsedFxPoolData.epsilon;\n\n    const _nGLiq = parsedFxPoolData._nGLiq;\n    const _oBals = parsedFxPoolData._oBals;\n\n    const outputAfterTrade = calculateTrade(\n        _oGLiq, // _oGLiq\n        _nGLiq, // _nGLiq\n        _oBals, // _oBals\n        _nBals, // _nBals\n        targetAmountInNumeraire, // input amount\n        isUSDC(poolPairData.tokenIn) ? 0 : 1, // if USDC return 0 else return 1 for base token\n        parsedFxPoolData\n    );\n\n    const outputAmount = outputAfterTrade[0];\n\n    const maxBetaLimit: number = (1 + beta) * 0.5 * _oGLiq;\n\n    const minBetaLimit: number = (1 - beta) * 0.5 * _oGLiq;\n\n    if (isUSDC(poolPairData.tokenIn)) {\n        // token[0] to token [1] in originswap\n        const oBals0after = _nBals[0];\n        const oBals1after = _nBals[1];\n\n        if (oBals1after < minBetaLimit && oBals0after > maxBetaLimit) {\n            return bnum(\n                (Math.abs(targetAmountInNumeraire) /\n                    Math.abs(outputAmount * (1 + epsilon))) *\n                    currentRate\n            );\n        } else {\n            return bnum(currentRate * (1 - epsilon));\n        }\n    } else {\n        //  token[1] to token [0] in originswap\n        const oBals0after = _nBals[0];\n        const oBals1after = _nBals[1];\n\n        const isBeyondMinBeta = oBals0after < minBetaLimit;\n        const isBeyondMaxBeta = oBals1after > maxBetaLimit;\n\n        if (isBeyondMinBeta && isBeyondMaxBeta) {\n            return bnum(\n                (Math.abs(targetAmountInNumeraire) /\n                    Math.abs(outputAmount * (1 + epsilon))) *\n                    currentRate\n            );\n        } else {\n            return bnum(currentRate * (1 - epsilon));\n        }\n    }\n};\n\n// origin swap\nexport const _derivativeSpotPriceAfterSwapExactTokenInForTokenOut = (\n    amount: OldBigNumber,\n    poolPairData: FxPoolPairData\n): OldBigNumber => {\n    const x = spotPriceBeforeSwap(bnum('1'), poolPairData);\n    const y = _spotPriceAfterSwapExactTokenInForTokenOut(poolPairData, amount);\n    const yMinusX = y.minus(x);\n    const ans = yMinusX.div(x);\n    return ans.isZero() ? bnum(ALMOST_ZERO) : ans.abs();\n};\n\n// target swap\nexport const _derivativeSpotPriceAfterSwapTokenInForExactTokenOut = (\n    amount: OldBigNumber,\n    poolPairData: FxPoolPairData\n): OldBigNumber => {\n    const x = spotPriceBeforeSwap(bnum('1'), poolPairData);\n    const y = _spotPriceAfterSwapTokenInForExactTokenOut(poolPairData, amount);\n    const yMinusX = y.minus(x);\n    const ans = yMinusX.div(x);\n    return ans.abs();\n};\n","import { getAddress } from '@ethersproject/address';\nimport { BigNumber, formatFixed, parseFixed } from '@ethersproject/bignumber';\nimport { Zero } from '@ethersproject/constants';\nimport { BigNumber as OldBigNumber, ZERO, bnum } from '../../utils/bignumber';\nimport { isSameAddress } from '../../utils';\nimport { universalNormalizedLiquidity } from '../liquidity';\nimport {\n    PoolBase,\n    PoolPairBase,\n    PoolTypes,\n    SubgraphPoolBase,\n    SubgraphToken,\n    SwapTypes,\n} from '../../types';\nimport {\n    poolBalancesToNumeraire,\n    viewRawAmount,\n    _derivativeSpotPriceAfterSwapExactTokenInForTokenOut,\n    _derivativeSpotPriceAfterSwapTokenInForExactTokenOut,\n    _exactTokenInForTokenOut,\n    _spotPriceAfterSwapExactTokenInForTokenOut,\n    _spotPriceAfterSwapTokenInForExactTokenOut,\n    _tokenInForExactTokenOut,\n} from './fxPoolMath';\n\ntype FxPoolToken = Pick<\n    SubgraphToken,\n    'address' | 'balance' | 'decimals' | 'token'\n>;\n\nexport type FxPoolPairData = PoolPairBase & {\n    alpha: BigNumber;\n    beta: BigNumber;\n    lambda: BigNumber;\n    delta: BigNumber;\n    epsilon: BigNumber;\n    tokenInLatestFXPrice: OldBigNumber;\n    tokenOutLatestFXPrice: OldBigNumber;\n};\n\nexport class FxPool implements PoolBase<FxPoolPairData> {\n    poolType: PoolTypes = PoolTypes.Fx;\n    id: string;\n    address: string;\n    swapFee: BigNumber;\n    totalShares: BigNumber;\n    tokens: FxPoolToken[];\n    tokensList: string[];\n    alpha: BigNumber;\n    beta: BigNumber;\n    lambda: BigNumber;\n    delta: BigNumber;\n    epsilon: BigNumber;\n\n    static fromPool(pool: SubgraphPoolBase): FxPool {\n        if (\n            !pool.alpha ||\n            !pool.beta ||\n            !pool.lambda ||\n            !pool.delta ||\n            !pool.epsilon\n        )\n            throw new Error('FX Pool Missing Subgraph Field');\n        return new FxPool(\n            pool.id,\n            pool.address,\n            pool.swapFee,\n            pool.totalShares,\n            pool.tokens,\n            pool.tokensList,\n            pool.alpha,\n            pool.beta,\n            pool.lambda,\n            pool.delta,\n            pool.epsilon\n        );\n    }\n\n    constructor(\n        id: string,\n        address: string,\n        swapFee: string,\n        totalShares: string,\n        tokens: FxPoolToken[],\n        tokensList: string[],\n        alpha: string,\n        beta: string,\n        lambda: string,\n        delta: string,\n        epsilon: string\n    ) {\n        this.id = id;\n        this.address = address;\n        this.swapFee = parseFixed(swapFee, 18);\n        this.totalShares = parseFixed(totalShares, 18);\n        this.tokens = tokens;\n        this.tokensList = tokensList;\n        this.alpha = parseFixed(alpha, 18);\n        this.beta = parseFixed(beta, 18);\n        this.lambda = parseFixed(lambda, 18);\n        this.delta = parseFixed(delta, 18);\n        this.epsilon = parseFixed(epsilon, 18);\n    }\n    updateTotalShares: (newTotalShares: BigNumber) => void;\n    mainIndex?: number | undefined;\n    isLBP?: boolean | undefined;\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _calcTokensOutGivenExactBptIn(bptAmountIn: BigNumber): BigNumber[] {\n        // Will copy over other implementations, not supporting BPT tokens atm\n        return new Array(this.tokens.length).fill(Zero);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _calcBptOutGivenExactTokensIn(amountsIn: BigNumber[]): BigNumber {\n        // Will copy over other implementations, not supporting BPT tokens atm\n        return Zero;\n    }\n\n    parsePoolPairData(tokenIn: string, tokenOut: string): FxPoolPairData {\n        const tokenIndexIn = this.tokens.findIndex(\n            (t) => getAddress(t.address) === getAddress(tokenIn)\n        );\n        if (tokenIndexIn < 0) throw 'Pool does not contain tokenIn';\n        const tI = this.tokens[tokenIndexIn];\n        const balanceIn = tI.balance;\n        const decimalsIn = tI.decimals;\n\n        const tokenIndexOut = this.tokens.findIndex(\n            (t) => getAddress(t.address) === getAddress(tokenOut)\n        );\n\n        if (tokenIndexOut < 0) throw 'Pool does not contain tokenOut';\n        const tO = this.tokens[tokenIndexOut];\n        const balanceOut = tO.balance;\n        const decimalsOut = tO.decimals;\n\n        if (!tO.token?.latestFXPrice || !tI.token?.latestFXPrice)\n            throw 'FX Pool Missing LatestFxPrice';\n\n        const poolPairData: FxPoolPairData = {\n            id: this.id,\n            address: this.address,\n            poolType: this.poolType,\n            tokenIn: tokenIn,\n            tokenOut: tokenOut,\n            decimalsIn: Number(decimalsIn),\n            decimalsOut: Number(decimalsOut),\n            balanceIn: parseFixed(balanceIn, decimalsIn),\n            balanceOut: parseFixed(balanceOut, decimalsOut),\n            swapFee: this.swapFee,\n            alpha: this.alpha,\n            beta: this.beta,\n            lambda: this.lambda,\n            delta: this.delta,\n            epsilon: this.epsilon,\n            tokenInLatestFXPrice: bnum(tI.token.latestFXPrice), // decimals is formatted from subgraph in rate we get from the chainlink oracle\n            tokenOutLatestFXPrice: bnum(tO.token.latestFXPrice), // decimals is formatted from subgraph in rate we get from the chainlink oracle\n        };\n\n        return poolPairData;\n    }\n\n    // Normalized liquidity is an abstract term that can be thought of the\n    // inverse of the slippage. It is proportional to the token balances in the\n    // pool but also depends on the shape of the invariant curve.\n    // As a standard, we define normalized liquidity in tokenOut\n    getNormalizedLiquidity(poolPairData: FxPoolPairData): OldBigNumber {\n        return universalNormalizedLiquidity(\n            this._derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n                poolPairData,\n                ZERO\n            )\n        );\n    }\n\n    /*\n    Fx pool logic has an alpha region where it halts swaps.\n    maxLimit  = [(1 + alpha) * oGLiq * 0.5] - token value in numeraire\n    */\n    getLimitAmountSwap(\n        poolPairData: FxPoolPairData,\n        swapType: SwapTypes\n    ): OldBigNumber {\n        try {\n            const parsedReserves = poolBalancesToNumeraire(poolPairData);\n\n            const alphaValue = Number(formatFixed(poolPairData.alpha, 18));\n\n            const maxLimit = (1 + alphaValue) * parsedReserves._oGLiq * 0.5;\n\n            if (swapType === SwapTypes.SwapExactIn) {\n                const maxLimitAmount =\n                    maxLimit - parsedReserves.tokenInReservesInNumeraire;\n\n                return bnum(\n                    viewRawAmount(\n                        maxLimitAmount,\n                        poolPairData.tokenInLatestFXPrice.toNumber()\n                    ).toString()\n                );\n            } else {\n                const maxLimitAmount =\n                    maxLimit - parsedReserves.tokenOutReservesInNumeraire;\n\n                return bnum(\n                    viewRawAmount(\n                        maxLimitAmount,\n                        poolPairData.tokenOutLatestFXPrice.toNumber()\n                    ).toString()\n                );\n            }\n        } catch {\n            return ZERO;\n        }\n    }\n\n    // Updates the balance of a given token for the pool\n    updateTokenBalanceForPool(token: string, newBalance: BigNumber): void {\n        // token is BPT\n        if (this.address == token) {\n            this.totalShares = newBalance;\n        } else {\n            // token is underlying in the pool\n            const T = this.tokens.find((t) => isSameAddress(t.address, token));\n            if (!T) throw Error('Pool does not contain this token');\n            T.balance = formatFixed(newBalance, T.decimals);\n        }\n    }\n\n    _exactTokenInForTokenOut(\n        poolPairData: FxPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            return _exactTokenInForTokenOut(amount, poolPairData);\n        } catch {\n            return ZERO;\n        }\n    }\n\n    _tokenInForExactTokenOut(\n        poolPairData: FxPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            return _tokenInForExactTokenOut(amount, poolPairData);\n        } catch {\n            return ZERO;\n        }\n    }\n\n    _spotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: FxPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            return _spotPriceAfterSwapExactTokenInForTokenOut(\n                poolPairData,\n                amount\n            );\n        } catch {\n            return ZERO;\n        }\n    }\n\n    _spotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: FxPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            return _spotPriceAfterSwapTokenInForExactTokenOut(\n                poolPairData,\n                amount\n            );\n        } catch {\n            return ZERO;\n        }\n    }\n\n    _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n        poolPairData: FxPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            return _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n                amount,\n                poolPairData\n            );\n        } catch {\n            return ZERO;\n        }\n    }\n\n    _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n        poolPairData: FxPoolPairData,\n        amount: OldBigNumber\n    ): OldBigNumber {\n        try {\n            return _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n                amount,\n                poolPairData\n            );\n        } catch {\n            return ZERO;\n        }\n    }\n}\n","import { WeightedPool } from './weightedPool/weightedPool';\nimport { StablePool } from './stablePool/stablePool';\nimport { MetaStablePool } from './metaStablePool/metaStablePool';\nimport { LinearPool } from './linearPool/linearPool';\nimport { ElementPool } from './elementPool/elementPool';\nimport { PhantomStablePool } from './phantomStablePool/phantomStablePool';\nimport { ComposableStablePool } from './composableStable/composableStablePool';\nimport { Gyro2Pool } from './gyro2Pool/gyro2Pool';\nimport { Gyro3Pool } from './gyro3Pool/gyro3Pool';\nimport { GyroEPool } from './gyroEPool/gyroEPool';\nimport { GyroEV2Pool } from './gyroEV2Pool/gyroEV2Pool';\nimport { FxPool } from './xaveFxPool/fxPool';\nimport {\n    BigNumber as OldBigNumber,\n    INFINITY,\n    scale,\n    ZERO,\n} from '../utils/bignumber';\nimport {\n    SubgraphPoolBase,\n    PoolBase,\n    SwapTypes,\n    PoolPairBase,\n    PoolTypes,\n    PoolFilter,\n} from '../types';\n\nexport function parseNewPool(\n    pool: SubgraphPoolBase,\n    currentBlockTimestamp = 0\n):\n    | WeightedPool\n    | StablePool\n    | ElementPool\n    | LinearPool\n    | MetaStablePool\n    | PhantomStablePool\n    | ComposableStablePool\n    | Gyro2Pool\n    | Gyro3Pool\n    | GyroEPool\n    | GyroEV2Pool\n    | FxPool\n    | undefined {\n    // We're not interested in any pools which don't allow swapping\n    if (!pool.swapEnabled) return undefined;\n\n    let newPool:\n        | WeightedPool\n        | StablePool\n        | ElementPool\n        | LinearPool\n        | MetaStablePool\n        | PhantomStablePool\n        | ComposableStablePool\n        | Gyro2Pool\n        | Gyro3Pool\n        | GyroEPool\n        | GyroEV2Pool\n        | FxPool;\n\n    try {\n        const isLinear = pool.poolType.toString().includes('Linear');\n        if (!isLinear && !(pool.poolType in PoolFilter)) {\n            console.error(`Unsupported pool type: ${pool.poolType} ${pool.id}`);\n            return undefined;\n        }\n        if (pool.poolType === 'Weighted' || pool.poolType === 'Investment') {\n            newPool = WeightedPool.fromPool(pool, false);\n        } else if (pool.poolType === 'LiquidityBootstrapping') {\n            newPool = WeightedPool.fromPool(pool, true);\n        } else if (pool.poolType === 'Stable') {\n            newPool = StablePool.fromPool(pool);\n        } else if (pool.poolType === 'MetaStable') {\n            newPool = MetaStablePool.fromPool(pool);\n        } else if (pool.poolType === 'Element') {\n            newPool = ElementPool.fromPool(pool);\n            newPool.setCurrentBlockTimestamp(currentBlockTimestamp);\n        } else if (isLinear) newPool = LinearPool.fromPool(pool);\n        else if (pool.poolType === 'StablePhantom')\n            newPool = PhantomStablePool.fromPool(pool);\n        else if (pool.poolType === 'ComposableStable')\n            newPool = ComposableStablePool.fromPool(pool);\n        else if (pool.poolType === 'Gyro2') newPool = Gyro2Pool.fromPool(pool);\n        else if (pool.poolType === 'Gyro3') newPool = Gyro3Pool.fromPool(pool);\n        else if (pool.poolType === 'GyroE') {\n            if (pool.poolTypeVersion === 2) {\n                newPool = GyroEV2Pool.fromPool(pool);\n            } else {\n                newPool = GyroEPool.fromPool(pool);\n            }\n        } else if (pool.poolType === 'FX') newPool = FxPool.fromPool(pool);\n        else {\n            console.error(\n                `Unknown pool type or type field missing: ${pool.poolType} ${pool.id}`\n            );\n            return undefined;\n        }\n    } catch (err) {\n        console.error(`parseNewPool: ${err.message}`);\n        return undefined;\n    }\n    return newPool;\n}\n\n// TODO: Add cases for pairType = [BTP->token, token->BTP] and poolType = [weighted, stable]\nexport function getOutputAmountSwap(\n    pool: PoolBase,\n    poolPairData: PoolPairBase,\n    swapType: SwapTypes,\n    amount: OldBigNumber\n): OldBigNumber {\n    // TODO: check if necessary to check if amount > limitAmount\n    if (swapType === SwapTypes.SwapExactIn) {\n        if (\n            poolPairData.poolType !== PoolTypes.Linear &&\n            poolPairData.balanceIn.isZero()\n        ) {\n            return ZERO;\n        } else {\n            return pool._exactTokenInForTokenOut(poolPairData, amount);\n        }\n    } else {\n        if (poolPairData.balanceOut.isZero()) {\n            return ZERO;\n        } else if (\n            scale(amount, poolPairData.decimalsOut).gte(\n                poolPairData.balanceOut.toString()\n            )\n        ) {\n            return INFINITY;\n        } else {\n            return pool._tokenInForExactTokenOut(poolPairData, amount);\n        }\n    }\n    throw Error('Unsupported swap');\n}\n","import { BigNumber as OldBigNumber } from './utils/bignumber';\n\n// priceErrorTolerance is how close we expect prices after swap to be in SOR\n// suggested paths\nlet priceErrorTolerance = '0.00001';\ntry {\n    priceErrorTolerance = process.env.PRICE_ERROR_TOLERANCE || '0.00001';\n} catch (err) {\n    if (console) {\n        console.log(err);\n    }\n}\n\nexport const PRICE_ERROR_TOLERANCE: OldBigNumber = new OldBigNumber(\n    priceErrorTolerance\n);\n// infinitesimal is an amount that's used to initialize swap amounts so they are\n// not zero or the path's limit.\n// It's also used in the calculation of derivatives in pool maths\n// const infinitesimal: string = process.env.INFINITESIMAL || '0.000001';\nconst infinitesimal = '0.01'; // Increasing INFINITESIMAL to '0.01' to test derivative sensitivity\nexport const INFINITESIMAL = new OldBigNumber(infinitesimal);\n","import {\n    BigNumber as OldBigNumber,\n    ZERO,\n    INFINITY,\n    scale,\n    bnum,\n} from '../utils/bignumber';\nimport { getOutputAmountSwap } from '../pools';\nimport { INFINITESIMAL } from '../config';\nimport {\n    NewPath,\n    SwapTypes,\n    PoolBase,\n    PoolPairBase,\n    PoolTypes,\n} from '../types';\nimport { BigNumber, formatFixed, parseFixed } from '@ethersproject/bignumber';\n\nconst MINIMUM_VALUE = bnum('0.000000000000000001');\n\nexport function getHighestLimitAmountsForPaths(\n    paths: NewPath[],\n    maxPools: number\n): BigNumber[] {\n    if (paths.length === 0) return [];\n    const limitAmounts: BigNumber[] = [];\n    for (let i = 0; i < maxPools; i++) {\n        if (i < paths.length) {\n            const limitAmount = paths[i].limitAmount;\n            limitAmounts.push(limitAmount);\n        }\n    }\n    return limitAmounts;\n}\n\nexport function getEffectivePriceSwapForPath(\n    path: NewPath,\n    swapType: SwapTypes,\n    amount: OldBigNumber,\n    inputDecimals: number,\n    outputDecimals: number,\n    costReturnToken: BigNumber\n): OldBigNumber {\n    if (amount.lt(INFINITESIMAL)) {\n        // Return spot price as code below would be 0/0 = undefined\n        // or small_amount/0 or 0/small_amount which would cause bugs\n        return getSpotPriceAfterSwapForPath(path, swapType, amount);\n    }\n\n    let outputAmountSwap = getOutputAmountSwapForPath(\n        path,\n        swapType,\n        amount,\n        inputDecimals\n    );\n    const gasCost = bnum(formatFixed(costReturnToken, outputDecimals)).times(\n        path.pools.length\n    );\n    if (swapType === SwapTypes.SwapExactIn) {\n        outputAmountSwap = outputAmountSwap.minus(gasCost);\n        return amount.div(outputAmountSwap); // amountIn/AmountOut\n    } else {\n        amount = amount.plus(gasCost);\n        return outputAmountSwap.div(amount); // amountIn/AmountOut\n    }\n}\n\nexport function getOutputAmountSwapForPath(\n    path: NewPath,\n    swapType: SwapTypes,\n    amount: OldBigNumber,\n    inputDecimals: number\n): OldBigNumber {\n    // First of all check if the amount is above limit, if so, return 0 for\n    // 'swapExactIn' or Inf for swapExactOut\n    if (amount.gt(bnum(formatFixed(path.limitAmount, inputDecimals)))) {\n        if (swapType === SwapTypes.SwapExactIn) {\n            return ZERO;\n        } else {\n            return INFINITY;\n        }\n    }\n\n    const amounts = getAmounts(path, swapType, amount);\n    if (swapType === SwapTypes.SwapExactIn) {\n        return amounts[amounts.length - 1];\n    } else {\n        return amounts[0];\n    }\n}\n\nfunction getAmounts(\n    path: NewPath,\n    swapType: SwapTypes,\n    amount: OldBigNumber\n): OldBigNumber[] {\n    const pools = path.pools;\n    const poolPairData = path.poolPairData;\n    const ans = [amount];\n\n    if (swapType === SwapTypes.SwapExactIn) {\n        for (let i = 0; i < pools.length; i++) {\n            ans.push(\n                getOutputAmountSwap(\n                    pools[i],\n                    poolPairData[i],\n                    swapType,\n                    ans[ans.length - 1]\n                )\n            );\n        }\n    } else {\n        const n = pools.length;\n        for (let i = 0; i < pools.length; i++) {\n            ans.unshift(\n                getOutputAmountSwap(\n                    pools[n - 1 - i],\n                    poolPairData[n - 1 - i],\n                    swapType,\n                    ans[0]\n                )\n            );\n        }\n    }\n    return ans;\n}\n\nfunction getProdsSpotPrices(\n    path: NewPath,\n    swapType: SwapTypes,\n    amounts: OldBigNumber[]\n): OldBigNumber[] {\n    const pools = path.pools;\n    const poolPairData = path.poolPairData;\n    const ans = [bnum(1)];\n    const n = pools.length;\n    let oneIfExactOut = 0;\n    if (swapType === SwapTypes.SwapExactOut) oneIfExactOut = 1;\n    for (let i = 0; i < pools.length; i++) {\n        ans.unshift(\n            getSpotPriceAfterSwap(\n                pools[n - 1 - i],\n                poolPairData[n - 1 - i],\n                swapType,\n                amounts[n - 1 - i + oneIfExactOut]\n            ).times(ans[0])\n        );\n    }\n    return ans;\n}\n\nfunction getProdsFirstSpotPrices(\n    path: NewPath,\n    swapType: SwapTypes,\n    amounts: OldBigNumber[]\n): OldBigNumber[] {\n    if (swapType !== SwapTypes.SwapExactOut)\n        // Throw error?\n        return [bnum(0)];\n\n    const pools = path.pools;\n    const poolPairData = path.poolPairData;\n    const ans = [bnum(1)];\n    for (let i = 0; i < pools.length; i++) {\n        ans.push(\n            getSpotPriceAfterSwap(\n                pools[i],\n                poolPairData[i],\n                swapType,\n                amounts[i + 1]\n            ).times(ans[ans.length - 1])\n        );\n    }\n    return ans;\n}\n\nexport function getSpotPriceAfterSwapForPath(\n    path: NewPath,\n    swapType: SwapTypes,\n    amount: OldBigNumber\n): OldBigNumber {\n    const amounts = getAmounts(path, swapType, amount);\n    const prodsSpotPrices = getProdsSpotPrices(path, swapType, amounts);\n    return prodsSpotPrices[0];\n}\n\n// TODO: Add cases for pairType = [BTP->token, token->BTP] and poolType = [weighted, stable]\nexport function getSpotPriceAfterSwap(\n    pool: PoolBase,\n    poolPairData: PoolPairBase,\n    swapType: SwapTypes,\n    amount: OldBigNumber\n): OldBigNumber {\n    // TODO: check if necessary to check if amount > limitAmount\n    if (swapType === SwapTypes.SwapExactIn) {\n        if (poolPairData.balanceIn.isZero()) {\n            return ZERO;\n        }\n    } else {\n        if (poolPairData.balanceOut.isZero()) {\n            return ZERO;\n        }\n        if (\n            scale(amount, poolPairData.decimalsOut).gte(\n                poolPairData.balanceOut.toString()\n            )\n        )\n            return INFINITY;\n    }\n    if (swapType === SwapTypes.SwapExactIn) {\n        return pool._spotPriceAfterSwapExactTokenInForTokenOut(\n            poolPairData,\n            amount\n        );\n    } else {\n        return pool._spotPriceAfterSwapTokenInForExactTokenOut(\n            poolPairData,\n            amount\n        );\n    }\n    throw Error('Unsupported swap');\n}\n\nexport function getDerivativeSpotPriceAfterSwapForPath(\n    path: NewPath,\n    swapType: SwapTypes,\n    amount: OldBigNumber\n): OldBigNumber {\n    const poolPairData = path.poolPairData;\n    const pools = path.pools;\n    const n = pools.length;\n\n    const amounts = getAmounts(path, swapType, amount);\n    const prodsSpotPrices = getProdsSpotPrices(path, swapType, amounts);\n    let ans = bnum(0);\n    if (swapType === SwapTypes.SwapExactIn) {\n        for (let i = 0; i < n; i++) {\n            const newTerm = getDerivativeSpotPriceAfterSwap(\n                pools[i],\n                poolPairData[i],\n                swapType,\n                amounts[i]\n            ).times(prodsSpotPrices[i + 1]);\n            ans = ans.plus(newTerm);\n        }\n    } else {\n        const prodsFirstSpotPrices = getProdsFirstSpotPrices(\n            path,\n            swapType,\n            amounts\n        );\n        for (let i = 0; i < n; i++) {\n            let newTerm = getDerivativeSpotPriceAfterSwap(\n                pools[i],\n                poolPairData[i],\n                swapType,\n                amounts[i + 1]\n            ).times(prodsSpotPrices[i + 1]);\n            newTerm = newTerm\n                .times(prodsSpotPrices[i + 1])\n                .times(prodsFirstSpotPrices[i]);\n            // The following option is more efficient but returns less precision due to the division\n            /*          let thisSpotPrice = getSpotPriceAfterSwap(pools[i], poolPairData[i], swapType, amounts[i + 1]);\n            newTerm = newTerm.div(thisSpotPrice).times(prodsSpotPrices[0]);*/\n            ans = ans.plus(newTerm);\n        }\n    }\n    if (ans.eq(bnum(0))) ans = MINIMUM_VALUE;\n    return ans;\n}\n\n// TODO: Add cases for pairType = [BPT->token, token->BPT] and poolType = [weighted, stable]\nexport function getDerivativeSpotPriceAfterSwap(\n    pool: PoolBase,\n    poolPairData: PoolPairBase,\n    swapType: SwapTypes,\n    amount: OldBigNumber\n): OldBigNumber {\n    // TODO: check if necessary to check if amount > limitAmount\n    if (swapType === SwapTypes.SwapExactIn) {\n        if (poolPairData.balanceIn.isZero()) {\n            return ZERO;\n        }\n    } else {\n        if (poolPairData.balanceOut.isZero()) {\n            return ZERO;\n        }\n        if (\n            scale(amount, poolPairData.decimalsOut).gte(\n                poolPairData.balanceOut.toString()\n            )\n        )\n            return INFINITY;\n    }\n    if (swapType === SwapTypes.SwapExactIn) {\n        return pool._derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n            poolPairData,\n            amount\n        );\n    } else {\n        return pool._derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n            poolPairData,\n            amount\n        );\n    }\n    throw Error('Unsupported swap');\n}\n\n// We need do pass 'pools' here because this function has to update the pools state\n// in case a pool is used twice in two different paths\nexport function EVMgetOutputAmountSwap(\n    pool: PoolBase,\n    poolPairData: PoolPairBase,\n    swapType: SwapTypes,\n    amount: OldBigNumber\n): OldBigNumber {\n    //we recalculate the pool pair data since balance updates are not reflected immediately in cached poolPairData\n    poolPairData = pool.parsePoolPairData(\n        poolPairData.tokenIn,\n        poolPairData.tokenOut\n    );\n\n    const { balanceIn, balanceOut, tokenIn, tokenOut } = poolPairData;\n\n    let returnAmount: OldBigNumber;\n\n    if (swapType === SwapTypes.SwapExactIn) {\n        if (\n            poolPairData.poolType !== PoolTypes.Linear &&\n            poolPairData.balanceIn.isZero()\n        ) {\n            return ZERO;\n        }\n    } else {\n        if (poolPairData.balanceOut.isZero()) {\n            return ZERO;\n        }\n        if (\n            scale(amount, poolPairData.decimalsOut).gte(\n                poolPairData.balanceOut.toString()\n            )\n        )\n            return INFINITY;\n    }\n    if (swapType === SwapTypes.SwapExactIn) {\n        if (pool.poolType === PoolTypes.Element) {\n            // TODO this will just be part of below once maths available\n            returnAmount = getOutputAmountSwap(\n                pool,\n                poolPairData,\n                swapType,\n                amount\n            );\n        } else if (pool.poolType in PoolTypes) {\n            // Will accept/return normalised values\n            returnAmount = pool._exactTokenInForTokenOut(poolPairData, amount);\n        } else {\n            throw Error('Unsupported swap');\n        }\n    } else {\n        if (pool.poolType === PoolTypes.Element) {\n            // TODO this will just be part of below once maths available\n            returnAmount = getOutputAmountSwap(\n                pool,\n                poolPairData,\n                swapType,\n                amount\n            );\n        } else if (pool.poolType in PoolTypes) {\n            // Will accept/return normalised values\n            returnAmount = pool._tokenInForExactTokenOut(poolPairData, amount);\n        } else {\n            throw Error('Unsupported swap');\n        }\n    }\n\n    const amountIn = swapType === SwapTypes.SwapExactIn ? amount : returnAmount;\n    const amountOut =\n        swapType === SwapTypes.SwapExactIn ? returnAmount : amount;\n\n    // Update balances of tokenIn and tokenOut\n    pool.updateTokenBalanceForPool(\n        tokenIn,\n        balanceIn.add(\n            parseFixed(\n                amountIn.dp(poolPairData.decimalsIn).toString(),\n                poolPairData.decimalsIn\n            )\n        )\n    );\n    pool.updateTokenBalanceForPool(\n        tokenOut,\n        balanceOut.sub(\n            parseFixed(\n                amountOut.dp(poolPairData.decimalsOut).toString(),\n                poolPairData.decimalsOut\n            )\n        )\n    );\n\n    return returnAmount;\n}\n","import cloneDeep from 'lodash.clonedeep';\nimport { PRICE_ERROR_TOLERANCE } from '../config';\nimport {\n    BigNumber as OldBigNumber,\n    bnum,\n    ZERO,\n    ONE,\n    INFINITY,\n} from '../utils/bignumber';\nimport { SwapTypes, NewPath, Swap } from '../types';\nimport {\n    getEffectivePriceSwapForPath,\n    getSpotPriceAfterSwapForPath,\n    getDerivativeSpotPriceAfterSwapForPath,\n    getOutputAmountSwapForPath,\n    EVMgetOutputAmountSwap,\n} from './helpersClass';\nimport { BigNumber, formatFixed } from '@ethersproject/bignumber';\n\nexport const optimizeSwapAmounts = (\n    paths: NewPath[],\n    swapType: SwapTypes,\n    totalSwapAmount: BigNumber,\n    initialSwapAmounts: BigNumber[],\n    highestLimitAmounts: BigNumber[],\n    inputDecimals: number,\n    outputDecimals: number,\n    initialNumPaths: number,\n    maxPools: number,\n    costReturnToken: BigNumber\n): [NewPath[], OldBigNumber[], OldBigNumber] => {\n    // First get the optimal totalReturn to trade 'totalSwapAmount' with\n    // one path only (b=1). Then increase the number of pools as long as\n    // improvementCondition is true (see more information below)\n    let bestTotalReturnConsideringFees =\n        swapType === SwapTypes.SwapExactIn ? INFINITY.times(-1) : INFINITY;\n    let bestSwapAmounts: OldBigNumber[] = [];\n    let bestPaths: NewPath[] = [];\n    let swapAmounts = initialSwapAmounts.map((amount) =>\n        bnum(formatFixed(amount, inputDecimals))\n    );\n    for (let b = initialNumPaths; b <= paths.length; b++) {\n        if (b != initialNumPaths) {\n            // We already had a previous iteration and are adding another pool this new iteration\n            // swapAmounts.push(ONE); // Initialize new swapAmount with 1 wei to\n            // make sure that it won't be considered as a non viable amount (which would\n            // be the case if it started at 0)\n\n            // Start new path at 1/b of totalSwapAmount (i.e. if this is the 5th pool, we start with\n            // 20% of the totalSwapAmount for this new swapAmount added). However, we need to make sure\n            // that this value is not higher then the bth limit of the paths available otherwise there\n            // won't be any possible path to process this swapAmount:\n            const humanTotalSwapAmount = formatFixed(\n                totalSwapAmount,\n                inputDecimals\n            );\n            const newSwapAmount = OldBigNumber.min.apply(null, [\n                bnum(humanTotalSwapAmount).times(bnum(1 / b)),\n                formatFixed(highestLimitAmounts[b - 1], inputDecimals),\n            ]);\n            // We need then to multiply all current\n            // swapAmounts by 1-newSwapAmount/totalSwapAmount.\n            swapAmounts.forEach((swapAmount, i) => {\n                swapAmounts[i] = swapAmount.times(\n                    ONE.minus(newSwapAmount.div(humanTotalSwapAmount))\n                );\n            });\n\n            if (!newSwapAmount.isZero()) swapAmounts.push(newSwapAmount);\n        }\n\n        const { paths: selectedPaths, swapAmounts: bestAmounts } =\n            optimizePathDistribution(\n                paths,\n                swapType,\n                totalSwapAmount,\n                swapAmounts,\n                inputDecimals,\n                outputDecimals,\n                costReturnToken\n            );\n        swapAmounts = bestAmounts;\n\n        const totalReturn = calcTotalReturn(\n            selectedPaths,\n            swapType,\n            swapAmounts,\n            inputDecimals\n        );\n\n        // Calculates the number of pools in all the paths to include the gas costs\n        const totalNumberOfPools = selectedPaths.reduce(\n            (acc, path) => acc + path.swaps.length,\n            0\n        );\n\n        // improvementCondition is true if we are improving the totalReturn\n        // Notice that totalReturn has to be maximized for 'swapExactIn'\n        // and MINIMIZED for 'swapExactOut'\n        // This is because for the case of 'swapExactOut', totalReturn means the\n        // amount of tokenIn needed to buy totalSwapAmount of tokenOut\n        const costReturnTokenHuman = formatFixed(\n            costReturnToken,\n            outputDecimals\n        );\n        let improvementCondition = false;\n        let totalReturnConsideringFees = ZERO;\n        const gasFees = bnum(totalNumberOfPools).times(costReturnTokenHuman);\n        if (swapType === SwapTypes.SwapExactIn) {\n            totalReturnConsideringFees = totalReturn.minus(gasFees);\n            improvementCondition = totalReturnConsideringFees.isGreaterThan(\n                bestTotalReturnConsideringFees\n            );\n        } else {\n            totalReturnConsideringFees = totalReturn.plus(gasFees);\n            improvementCondition = totalReturnConsideringFees.isLessThan(\n                bestTotalReturnConsideringFees\n            );\n        }\n\n        // Stop if improvement has stopped\n        if (!improvementCondition) break;\n\n        bestSwapAmounts = [...swapAmounts]; // Copy to avoid linking variables\n        bestPaths = [...selectedPaths];\n        bestTotalReturnConsideringFees = totalReturnConsideringFees;\n\n        // Stop if max number of pools has been reached\n        if (totalNumberOfPools >= maxPools) break;\n    }\n\n    // 0 swap amounts can occur due to rounding errors but we don't want to pass those on so filter out\n    bestPaths = bestPaths.filter((_, i) => !bestSwapAmounts[i].isZero());\n    bestSwapAmounts = bestSwapAmounts.filter(\n        (swapAmount) => !swapAmount.isZero()\n    );\n\n    return [bestPaths, bestSwapAmounts, bestTotalReturnConsideringFees];\n};\n\n/**\n * For a fixed number of possible paths, finds the optimal distribution of swap amounts to maximise output\n */\nconst optimizePathDistribution = (\n    allPaths: NewPath[],\n    swapType: SwapTypes,\n    totalSwapAmount: BigNumber,\n    initialSwapAmounts: OldBigNumber[],\n    inputDecimals: number,\n    outputDecimals,\n    costReturnToken: BigNumber\n): { paths: NewPath[]; swapAmounts: OldBigNumber[] } => {\n    let [selectedPaths, exceedingAmounts] = getBestPathIds(\n        allPaths,\n        swapType,\n        initialSwapAmounts,\n        inputDecimals,\n        outputDecimals,\n        costReturnToken\n    );\n\n    let swapAmounts = initialSwapAmounts;\n\n    // Trivial case of only allowing a single path\n    if (initialSwapAmounts.length === 1) {\n        return {\n            swapAmounts,\n            paths: selectedPaths,\n        };\n    }\n\n    const humanTotalSwapAmount = bnum(\n        formatFixed(totalSwapAmount, inputDecimals)\n    );\n\n    // We store the next set of paths to consider separately so that can always retrieve the previous paths\n    let newSelectedPaths = selectedPaths;\n\n    // We now loop to iterateSwapAmounts until we converge.\n    const historyOfSortedPathIds: string[] = [];\n    let sortedPathIdsJSON = JSON.stringify(\n        newSelectedPaths.map(({ id }) => id).sort()\n    );\n\n    while (!historyOfSortedPathIds.includes(sortedPathIdsJSON)) {\n        // Local minima can result in infinite loops\n        // We then maintain a log of the sorted paths ids which we have already considered to prevent getting stuck\n        historyOfSortedPathIds.push(sortedPathIdsJSON);\n        selectedPaths = newSelectedPaths;\n\n        [swapAmounts, exceedingAmounts] = iterateSwapAmounts(\n            selectedPaths,\n            swapType,\n            humanTotalSwapAmount,\n            swapAmounts,\n            exceedingAmounts\n        );\n        [newSelectedPaths, exceedingAmounts] = getBestPathIds(\n            allPaths,\n            swapType,\n            swapAmounts,\n            inputDecimals,\n            outputDecimals,\n            costReturnToken\n        );\n\n        if (newSelectedPaths.length === 0) break;\n\n        const pathIds = newSelectedPaths.map(({ id }) => id).sort();\n        sortedPathIdsJSON = JSON.stringify(pathIds);\n    }\n\n    return {\n        swapAmounts,\n        paths: selectedPaths,\n    };\n};\n\nexport const formatSwaps = (\n    bestPaths: NewPath[],\n    swapType: SwapTypes,\n    totalSwapAmount: OldBigNumber,\n    bestSwapAmounts: OldBigNumber[]\n): [Swap[][], OldBigNumber, OldBigNumber] => {\n    //// Prepare swap data from paths\n    const swaps: Swap[][] = [];\n    let highestSwapAmt = bestSwapAmounts[0];\n    let largestSwapPath: NewPath = bestPaths[0];\n    let bestTotalReturn = ZERO; // Reset totalReturn as this time it will be\n    // calculated with the EVM maths so the return is exactly what the user will get\n    // after executing the transaction (given there are no front-runners)\n\n    bestPaths.forEach((path, i) => {\n        const swapAmount = bestSwapAmounts[i];\n\n        if (swapAmount.gt(highestSwapAmt)) {\n            highestSwapAmt = swapAmount;\n            largestSwapPath = path;\n        }\n        // // TODO: remove. To debug only!\n        /*\n        console.log(\n            'Prices should be all very close (unless one of the paths is on the limit!'\n        );\n        console.log(\n            getSpotPriceAfterSwapForPath(path, swapType, swapAmount).toNumber()\n        );\n        */\n        const poolPairData = path.poolPairData;\n        const pathSwaps: Swap[] = [];\n        const amounts: OldBigNumber[] = [];\n        let returnAmount: OldBigNumber;\n        const n = poolPairData.length;\n        amounts.push(swapAmount);\n        if (swapType === SwapTypes.SwapExactIn) {\n            for (let i = 0; i < n; i++) {\n                amounts.push(\n                    EVMgetOutputAmountSwap(\n                        path.pools[i],\n                        poolPairData[i],\n                        SwapTypes.SwapExactIn,\n                        amounts[amounts.length - 1]\n                    )\n                );\n                const swap: Swap = {\n                    pool: path.swaps[i].pool,\n                    tokenIn: path.swaps[i].tokenIn,\n                    tokenOut: path.swaps[i].tokenOut,\n                    swapAmount: amounts[i].toString(),\n                    tokenInDecimals: path.poolPairData[i].decimalsIn,\n                    tokenOutDecimals: path.poolPairData[i].decimalsOut,\n                    returnAmount: amounts[amounts.length - 1].toString(),\n                };\n                pathSwaps.push(swap);\n            }\n            returnAmount = amounts[n];\n        } else {\n            for (let i = 0; i < n; i++) {\n                amounts.unshift(\n                    EVMgetOutputAmountSwap(\n                        path.pools[n - 1 - i],\n                        poolPairData[n - 1 - i],\n                        SwapTypes.SwapExactOut,\n                        amounts[0]\n                    )\n                );\n                const swap: Swap = {\n                    pool: path.swaps[n - 1 - i].pool,\n                    tokenIn: path.swaps[n - 1 - i].tokenIn,\n                    tokenOut: path.swaps[n - 1 - i].tokenOut,\n                    swapAmount: amounts[1].toString(),\n                    tokenInDecimals: path.poolPairData[n - 1 - i].decimalsIn,\n                    tokenOutDecimals: path.poolPairData[n - 1 - i].decimalsOut,\n                    returnAmount: amounts[0].toString(),\n                };\n                pathSwaps.unshift(swap);\n            }\n            returnAmount = amounts[0];\n        }\n        swaps.push(pathSwaps);\n        bestTotalReturn = bestTotalReturn.plus(returnAmount);\n    });\n\n    // Since the individual swapAmounts for each path are integers, the sum of all swapAmounts\n    // might not be exactly equal to the totalSwapAmount the user requested. We need to correct that rounding error\n    // and we do that by adding the rounding error to the first path.\n    if (swaps.length > 0) {\n        const totalSwapAmountWithRoundingErrors = bestSwapAmounts.reduce(\n            (a, b) => a.plus(b),\n            ZERO\n        );\n        const dust = totalSwapAmount.minus(totalSwapAmountWithRoundingErrors);\n        if (swapType === SwapTypes.SwapExactIn) {\n            // As swap is ExactIn, add dust to input pool\n            swaps[0][0].swapAmount = bnum(swaps[0][0].swapAmount as string)\n                .plus(dust)\n                .toString();\n        } else {\n            // As swap is ExactOut, add dust to output pool\n            const firstPathLastPoolIndex = bestPaths[0].swaps.length - 1;\n            swaps[0][firstPathLastPoolIndex].swapAmount = bnum(\n                swaps[0][firstPathLastPoolIndex].swapAmount as string\n            )\n                .plus(dust)\n                .toString();\n        }\n    }\n\n    if (bestTotalReturn.eq(0)) return [[], ZERO, ZERO];\n\n    const marketSp = getSpotPriceAfterSwapForPath(\n        largestSwapPath,\n        swapType,\n        ZERO\n    );\n\n    return [swaps, bestTotalReturn, marketSp];\n};\n\n//  For a given list of swapAmounts, gets list of pools with best effective price for these amounts\n//  Always choose best pool for highest swapAmount first, then 2nd swapAmount and so on. This is\n//  because it's best to use the best effective price for the highest amount to be traded\nfunction getBestPathIds(\n    originalPaths: NewPath[],\n    swapType: SwapTypes,\n    swapAmounts: OldBigNumber[],\n    inputDecimals: number,\n    outputDecimals: number,\n    costReturnToken: BigNumber\n): [NewPath[], OldBigNumber[]] {\n    const selectedPaths: NewPath[] = [];\n    const selectedPathExceedingAmounts: OldBigNumber[] = [];\n    const paths = cloneDeep(originalPaths); // Deep copy to avoid changing the original path data\n\n    // Sort swapAmounts in descending order without changing original: https://stackoverflow.com/a/42442909\n    const sortedSwapAmounts = [...swapAmounts].sort((a, b) => {\n        return b.minus(a).toNumber();\n    });\n\n    sortedSwapAmounts.forEach((swapAmount) => {\n        // Find path that has best effective price\n        let bestPathIndex = -1;\n        let bestEffectivePrice = INFINITY; // Start with worst price possible\n        paths.forEach((path, i) => {\n            // Do not consider this path if its limit is below swapAmount\n            if (\n                bnum(formatFixed(path.limitAmount, inputDecimals)).gte(\n                    swapAmount\n                )\n            ) {\n                // Calculate effective price of this path for this swapAmount\n                // If path.limitAmount = swapAmount we set effectivePrice as\n                // Infinity because we know this path is maxed out and we want\n                // to select other paths that can still be improved on\n                let effectivePrice: OldBigNumber;\n                if (\n                    bnum(formatFixed(path.limitAmount, inputDecimals)).eq(\n                        swapAmount\n                    )\n                ) {\n                    effectivePrice = INFINITY;\n                } else {\n                    // TODO for optimization: pass already calculated limitAmount as input\n                    // to getEffectivePriceSwapForPath()\n                    effectivePrice = getEffectivePriceSwapForPath(\n                        path,\n                        swapType,\n                        swapAmount,\n                        inputDecimals,\n                        outputDecimals,\n                        costReturnToken\n                    );\n                }\n                if (effectivePrice.lte(bestEffectivePrice)) {\n                    bestEffectivePrice = effectivePrice;\n                    bestPathIndex = i;\n                }\n            }\n        });\n\n        if (bestPathIndex === -1) {\n            selectedPaths.push({\n                id: '',\n                swaps: [],\n                poolPairData: [],\n                limitAmount: BigNumber.from('0'),\n                pools: [],\n            });\n            selectedPathExceedingAmounts.push(ZERO);\n            return;\n        } else {\n            selectedPaths.push(paths[bestPathIndex]);\n            selectedPathExceedingAmounts.push(\n                swapAmount.minus(\n                    bnum(\n                        formatFixed(\n                            paths[bestPathIndex].limitAmount,\n                            inputDecimals\n                        )\n                    )\n                )\n            );\n            paths.splice(bestPathIndex, 1); // Remove path from list\n        }\n    });\n\n    return [selectedPaths, selectedPathExceedingAmounts];\n}\n\n// This functions finds the swapAmounts such that all the paths that have viable swapAmounts (i.e.\n// that are not negative or equal to limitAmount) bring their respective prices after swap to the\n// same price (which means that this is the optimal solution for the paths analyzed)\nfunction iterateSwapAmounts(\n    selectedPaths: NewPath[],\n    swapType: SwapTypes,\n    totalSwapAmount: OldBigNumber,\n    swapAmounts: OldBigNumber[],\n    exceedingAmounts: OldBigNumber[]\n): [OldBigNumber[], OldBigNumber[]] {\n    let priceError = ONE; // Initialize priceError just so that while starts\n    let prices: OldBigNumber[] = [];\n    // // Since this is the beginning of an iteration with a new set of paths, we\n    // // set any swapAmounts that were 0 previously to 1 wei or at the limit\n    // // to limit minus 1 wei just so that they\n    // // are considered as viable for iterateSwapAmountsApproximation(). If they were\n    // // left at 0 iterateSwapAmountsApproximation() would consider them already outside\n    // // the viable range and would not iterate on them. This is useful when\n    // // iterateSwapAmountsApproximation() is being repeatedly called within the while loop\n    // // below, but not when a new execution of iterateSwapAmounts() happens with new\n    // // paths.\n    // for (let i = 0; i < swapAmounts.length; ++i) {\n    //     if (swapAmounts[i].isZero()) {\n    //         // Very small amount: TODO put in config file\n    //         const epsilon = totalSwapAmount.times(INFINITESIMAL);\n    //         swapAmounts[i] = epsilon;\n    //         exceedingAmounts[i] = exceedingAmounts[i].plus(epsilon);\n    //     }\n    //     if (exceedingAmounts[i].isZero()) {\n    //         // Very small amount: TODO put in config file\n    //         const epsilon = totalSwapAmount.times(INFINITESIMAL);\n    //         swapAmounts[i] = swapAmounts[i].minus(epsilon); // Very small amount\n    //         exceedingAmounts[i] = exceedingAmounts[i].minus(epsilon);\n    //     }\n    // }\n    let iterationCount = 0;\n    while (priceError.isGreaterThan(PRICE_ERROR_TOLERANCE)) {\n        [prices, swapAmounts, exceedingAmounts] =\n            iterateSwapAmountsApproximation(\n                selectedPaths,\n                swapType,\n                totalSwapAmount,\n                swapAmounts,\n                exceedingAmounts,\n                iterationCount\n            );\n        const maxPrice = OldBigNumber.max.apply(null, prices);\n        const minPrice = OldBigNumber.min.apply(null, prices);\n        priceError = maxPrice.minus(minPrice).div(minPrice);\n        iterationCount++;\n        if (iterationCount > 100) break;\n    }\n    return [swapAmounts, exceedingAmounts];\n}\n\nfunction iterateSwapAmountsApproximation(\n    selectedPaths: NewPath[],\n    swapType: SwapTypes,\n    totalSwapAmount: OldBigNumber,\n    swapAmounts: OldBigNumber[],\n    exceedingAmounts: OldBigNumber[], // This is the amount by which swapAmount exceeds the pool limit_amount\n    iterationCount: number\n): [OldBigNumber[], OldBigNumber[], OldBigNumber[]] {\n    let sumInverseDerivativeSPaSs = ZERO;\n    let sumSPaSDividedByDerivativeSPaSs = ZERO;\n    const SPaSs: OldBigNumber[] = [];\n    const derivativeSPaSs: OldBigNumber[] = [];\n\n    // We only iterate on the swapAmounts that are viable (i.e. no negative or > than path limit)\n    // OR if this is the first time \"iterateSwapAmountsApproximation\" is called\n    // within \"iterateSwapAmounts()\". In this case swapAmounts should be considered viable\n    // also if they are on the limit.\n    swapAmounts.forEach((swapAmount, i) => {\n        // if (swapAmount.gt(ZERO) && exceedingAmounts[i].lt(ZERO)) {\n        if (\n            (iterationCount == 0 &&\n                swapAmount.gte(ZERO) &&\n                exceedingAmounts[i].lte(ZERO)) ||\n            (iterationCount != 0 &&\n                swapAmount.gt(ZERO) &&\n                exceedingAmounts[i].lt(ZERO))\n        ) {\n            const path = selectedPaths[i];\n            const SPaS = getSpotPriceAfterSwapForPath(\n                path,\n                swapType,\n                swapAmount\n            );\n            SPaSs.push(SPaS);\n            const derivative_SPaS = getDerivativeSpotPriceAfterSwapForPath(\n                path,\n                swapType,\n                swapAmount\n            );\n            derivativeSPaSs.push(derivative_SPaS);\n            sumInverseDerivativeSPaSs = sumInverseDerivativeSPaSs.plus(\n                ONE.div(derivative_SPaS)\n            );\n            sumSPaSDividedByDerivativeSPaSs =\n                sumSPaSDividedByDerivativeSPaSs.plus(SPaS.div(derivative_SPaS));\n        } else {\n            // This swapAmount is not viable but we push to keep list length consistent\n            derivativeSPaSs.push(bnum('NaN'));\n            SPaSs.push(bnum('NaN'));\n        }\n    });\n    // // This division using BigNumber below lost precision. Its result was for example\n    // 1.042818e-12 while using normal js math operations it was\n    // 1.0428184989387553e-12. This loss of precision caused an important bug\n\n    // let weighted_average_SPaS = sumSPaSDividedByDerivativeSPaSs.div(\n    //     sumInverseDerivativeSPaSs\n    // );\n    const weighted_average_SPaS = bnum(\n        sumSPaSDividedByDerivativeSPaSs.toNumber() /\n            sumInverseDerivativeSPaSs.toNumber()\n    );\n\n    swapAmounts.forEach((swapAmount, i) => {\n        if (\n            (iterationCount == 0 &&\n                swapAmount.gte(ZERO) &&\n                exceedingAmounts[i].lte(ZERO)) ||\n            (iterationCount != 0 &&\n                swapAmount.gt(ZERO) &&\n                exceedingAmounts[i].lt(ZERO))\n        ) {\n            const deltaSwapAmount = weighted_average_SPaS\n                .minus(SPaSs[i])\n                .div(derivativeSPaSs[i]);\n            swapAmounts[i] = swapAmounts[i].plus(deltaSwapAmount);\n            exceedingAmounts[i] = exceedingAmounts[i].plus(deltaSwapAmount);\n        }\n    });\n\n    // Make sure no input amount is negative or above the path limit\n    while (\n        OldBigNumber.min.apply(null, swapAmounts).lt(ZERO) ||\n        OldBigNumber.max.apply(null, exceedingAmounts).gt(ZERO)\n    ) {\n        [swapAmounts, exceedingAmounts] = redistributeInputAmounts(\n            swapAmounts,\n            exceedingAmounts,\n            derivativeSPaSs\n        );\n    }\n\n    const pricesForViableAmounts: OldBigNumber[] = []; // Get prices for all non-negative AND below-limit input amounts\n    let swapAmountsSumWithRoundingErrors = ZERO;\n    swapAmounts.forEach((swapAmount, i) => {\n        swapAmountsSumWithRoundingErrors =\n            swapAmountsSumWithRoundingErrors.plus(swapAmount);\n        if (\n            (iterationCount == 0 &&\n                swapAmount.gte(ZERO) &&\n                exceedingAmounts[i].lte(ZERO)) ||\n            (iterationCount != 0 &&\n                swapAmount.gt(ZERO) &&\n                exceedingAmounts[i].lt(ZERO))\n        )\n            pricesForViableAmounts.push(\n                getSpotPriceAfterSwapForPath(\n                    selectedPaths[i],\n                    swapType,\n                    swapAmount\n                )\n            );\n    });\n\n    const roundingError = totalSwapAmount.minus(\n        swapAmountsSumWithRoundingErrors\n    );\n    // console.log(\"Rounding error\")\n    // console.log(roundingError.div(totalSwapAmount).toNumber())\n    // // let errorLimit = totalSwapAmount.times(bnum(0.001))\n    // // if(roundingError>errorLimit)\n    // //     throw \"Rounding error in iterateSwapAmountsApproximation() too large\";\n\n    // Add rounding error to make sum be exactly equal to totalSwapAmount to avoid error compounding\n    // Add to the first swapAmount that is already not zero or at the limit\n    // AND only if swapAmount would not leave the viable range (i.e. swapAmoung\n    // would still be >0 and <limit) after adding the error\n    // I.d. we need: (swapAmount+error)>0 AND (exceedingAmount+error)<0\n    for (let i = 0; i < swapAmounts.length; ++i) {\n        if (swapAmounts[i].gt(ZERO) && exceedingAmounts[i].lt(ZERO)) {\n            if (\n                swapAmounts[i].plus(roundingError).gt(ZERO) &&\n                exceedingAmounts[i].plus(roundingError).lt(ZERO)\n            ) {\n                swapAmounts[i] = swapAmounts[i].plus(roundingError);\n                exceedingAmounts[i] = exceedingAmounts[i].plus(roundingError);\n                break;\n            }\n        }\n    }\n\n    return [pricesForViableAmounts, swapAmounts, exceedingAmounts];\n}\n\nfunction redistributeInputAmounts(\n    swapAmounts: OldBigNumber[],\n    exceedingAmounts: OldBigNumber[],\n    derivativeSPaSs: OldBigNumber[]\n): [OldBigNumber[], OldBigNumber[]] {\n    let sumInverseDerivativeSPaSsForViableAmounts = ZERO;\n    let sumInverseDerivativeSPaSsForNegativeAmounts = ZERO;\n    let sumInverseDerivativeSPaSsForExceedingAmounts = ZERO;\n    let sumNegativeOrExceedingSwapAmounts = ZERO;\n    swapAmounts.forEach((swapAmount, i) => {\n        // Amount is negative\n        if (swapAmount.lte(ZERO)) {\n            sumNegativeOrExceedingSwapAmounts =\n                sumNegativeOrExceedingSwapAmounts.plus(swapAmount);\n            sumInverseDerivativeSPaSsForNegativeAmounts =\n                sumInverseDerivativeSPaSsForNegativeAmounts.plus(\n                    ONE.div(derivativeSPaSs[i])\n                );\n        }\n        // Amount is above limit (exceeding > 0)\n        else if (exceedingAmounts[i].gte(ZERO)) {\n            sumNegativeOrExceedingSwapAmounts =\n                sumNegativeOrExceedingSwapAmounts.plus(exceedingAmounts[i]);\n            sumInverseDerivativeSPaSsForExceedingAmounts =\n                sumInverseDerivativeSPaSsForExceedingAmounts.plus(\n                    ONE.div(derivativeSPaSs[i])\n                );\n        }\n        // Sum the inverse of the derivative if the swapAmount is viable,\n        // i.e. if swapAmount > 0 or swapAmount < limit\n        else\n            sumInverseDerivativeSPaSsForViableAmounts =\n                sumInverseDerivativeSPaSsForViableAmounts.plus(\n                    ONE.div(derivativeSPaSs[i])\n                );\n    });\n\n    // Now redestribute sumNegativeOrExceedingSwapAmounts\n    // to non-exceeding pools if sumNegativeOrExceedingSwapAmounts > 0\n    // or to non zero swapAmount pools if sumNegativeOrExceedingSwapAmounts < 0\n    swapAmounts.forEach((swapAmount, i) => {\n        if (swapAmount.lte(ZERO)) {\n            swapAmounts[i] = ZERO;\n            exceedingAmounts[i] = exceedingAmounts[i].minus(swapAmount);\n        } else if (exceedingAmounts[i].gte(ZERO)) {\n            swapAmounts[i] = swapAmounts[i].minus(exceedingAmounts[i]); // This is the same as swapAmounts[i] = pathLimitAmounts[i]\n            exceedingAmounts[i] = ZERO;\n        } else {\n            const deltaSwapAmount = sumNegativeOrExceedingSwapAmounts\n                .times(ONE.div(derivativeSPaSs[i]))\n                .div(sumInverseDerivativeSPaSsForViableAmounts);\n            swapAmounts[i] = swapAmounts[i].plus(deltaSwapAmount);\n            exceedingAmounts[i] = exceedingAmounts[i].plus(deltaSwapAmount);\n        }\n    });\n\n    // If there were no viable amounts (i.e all amounts were either negative or above limit)\n    // We run this extra loop to redistribute the excess\n    if (sumInverseDerivativeSPaSsForViableAmounts.isZero()) {\n        if (sumNegativeOrExceedingSwapAmounts.lt(ZERO)) {\n            // This means we need to redistribute to the exceeding amounts that\n            // were now set to the limit\n            swapAmounts.forEach((swapAmount, i) => {\n                if (exceedingAmounts[i].isZero()) {\n                    const deltaSwapAmount = sumNegativeOrExceedingSwapAmounts\n                        .times(ONE.div(derivativeSPaSs[i]))\n                        .div(sumInverseDerivativeSPaSsForExceedingAmounts);\n                    swapAmounts[i] = swapAmounts[i].plus(deltaSwapAmount);\n                    exceedingAmounts[i] =\n                        exceedingAmounts[i].plus(deltaSwapAmount);\n                }\n            });\n        } else {\n            // This means we need to redistribute to the negative amounts that\n            // were now set to zero\n            swapAmounts.forEach((swapAmount, i) => {\n                if (swapAmounts[i].isZero()) {\n                    const deltaSwapAmount = sumNegativeOrExceedingSwapAmounts\n                        .times(ONE.div(derivativeSPaSs[i]))\n                        .div(sumInverseDerivativeSPaSsForNegativeAmounts);\n                    swapAmounts[i] = swapAmounts[i].plus(deltaSwapAmount);\n                    exceedingAmounts[i] =\n                        exceedingAmounts[i].plus(deltaSwapAmount);\n                }\n            });\n        }\n    }\n    return [swapAmounts, exceedingAmounts];\n}\n\n// TODO: calculate EVM return (use bmath) and update pool balances like current SOR\nexport const calcTotalReturn = (\n    paths: NewPath[],\n    swapType: SwapTypes,\n    swapAmounts: OldBigNumber[],\n    inputDecimals: number\n): OldBigNumber => {\n    let totalReturn = new OldBigNumber(0);\n    // changing the contents of pools (parameter passed as reference)\n    paths.forEach((path, i) => {\n        totalReturn = totalReturn.plus(\n            getOutputAmountSwapForPath(\n                path,\n                swapType,\n                swapAmounts[i],\n                inputDecimals\n            )\n        );\n    });\n    return totalReturn;\n};\n","import { BigNumber as OldBigNumber, bnum, ZERO } from '../utils/bignumber';\nimport { getHighestLimitAmountsForPaths } from './helpersClass';\nimport { formatSwaps, optimizeSwapAmounts } from './sorClass';\nimport { NewPath, Swap, SwapTypes } from '../types';\nimport { BigNumber, formatFixed } from '@ethersproject/bignumber';\nimport { Zero } from '@ethersproject/constants';\n\nexport const getBestPaths = (\n    paths: NewPath[],\n    swapType: SwapTypes,\n    totalSwapAmount: BigNumber,\n    inputDecimals: number,\n    outputDecimals: number,\n    maxPools: number,\n    costReturnToken: BigNumber\n): [Swap[][], OldBigNumber, OldBigNumber, OldBigNumber] => {\n    // No paths available or totalSwapAmount == 0, return empty solution\n    if (paths.length == 0 || totalSwapAmount.isZero()) {\n        return [[], ZERO, ZERO, ZERO];\n    }\n\n    // Before we start the main loop, we first check if there is enough liquidity for this totalSwapAmount\n    const highestLimitAmounts = getHighestLimitAmountsForPaths(paths, maxPools);\n    const sumLimitAmounts = highestLimitAmounts.reduce(\n        (r: BigNumber[], pathLimit: BigNumber) => {\n            r.push(pathLimit.add(r[r.length - 1] || Zero));\n            return r;\n        },\n        []\n    );\n\n    // If the cumulative limit across all paths is lower than totalSwapAmount then no solution is possible\n    if (totalSwapAmount.gt(sumLimitAmounts[sumLimitAmounts.length - 1])) {\n        return [[], ZERO, ZERO, ZERO]; // Not enough liquidity, return empty\n    }\n\n    // We use the highest limits to define the initial number of pools considered and the initial guess for swapAmounts.\n    const initialNumPaths =\n        sumLimitAmounts.findIndex((cumulativeLimit) =>\n            // If below is true, it means we have enough liquidity\n            totalSwapAmount.lte(cumulativeLimit)\n        ) + 1;\n\n    const initialSwapAmounts = highestLimitAmounts.slice(0, initialNumPaths);\n\n    //  Since the sum of the first i highest limits will be less than totalSwapAmount, we remove the difference to the last swapAmount\n    //  so we are sure that the sum of swapAmounts will be equal to totalSwapAmount\n    const difference =\n        sumLimitAmounts[initialNumPaths - 1].sub(totalSwapAmount);\n    initialSwapAmounts[initialSwapAmounts.length - 1] =\n        initialSwapAmounts[initialSwapAmounts.length - 1].sub(difference);\n\n    const [bestPaths, bestSwapAmounts, bestTotalReturnConsideringFees] =\n        optimizeSwapAmounts(\n            paths,\n            swapType,\n            totalSwapAmount,\n            initialSwapAmounts,\n            highestLimitAmounts,\n            inputDecimals,\n            outputDecimals,\n            initialNumPaths,\n            maxPools,\n            costReturnToken\n        );\n\n    const [swaps, bestTotalReturn, marketSp] = formatSwaps(\n        bestPaths,\n        swapType,\n        bnum(formatFixed(totalSwapAmount, inputDecimals)),\n        bestSwapAmounts\n    );\n\n    if (bestTotalReturn.eq(0)) return [[], ZERO, ZERO, ZERO];\n\n    return [swaps, bestTotalReturn, marketSp, bestTotalReturnConsideringFees];\n};\n","import { Zero } from '@ethersproject/constants';\nimport { SwapInfo } from './types';\n\nexport const EMPTY_SWAPINFO: SwapInfo = {\n    tokenAddresses: [],\n    swaps: [],\n    swapAmount: Zero,\n    swapAmountForSwaps: Zero,\n    tokenIn: '',\n    tokenInForSwaps: '',\n    tokenOut: '',\n    tokenOutFromSwaps: '',\n    returnAmount: Zero,\n    returnAmountConsideringFees: Zero,\n    returnAmountFromSwaps: Zero,\n    marketSp: Zero.toString(),\n};\n","import { BigNumber } from '@ethersproject/bignumber';\nimport { Provider } from '@ethersproject/providers';\nimport { AddressZero, Zero } from '@ethersproject/constants';\nimport { Contract } from '@ethersproject/contracts';\nimport cloneDeep from 'lodash.clonedeep';\nimport { SubgraphPoolBase, SwapInfo, SwapTypes, SwapV2 } from '../../types';\nimport { parseNewPool } from '../../pools';\nimport { BigNumber as OldBigNumber, ZERO, bnum } from '../../utils/bignumber';\nimport vaultAbi from '../../abi/Vault.json';\nimport { EMPTY_SWAPINFO } from '../../constants';\n\nexport const Lido = {\n    Networks: [1, 42],\n    stETH: {\n        1: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n        42: '0x4803bb90d18a1cb7a2187344fe4feb0e07878d05',\n    },\n    wstETH: {\n        1: '0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0',\n        42: '0xa387b91e393cfb9356a460370842bc8dbb2f29af',\n    },\n    WETH: {\n        1: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        42: '0xdfcea9088c8a88a76ff74892c1457c17dfeef9c1',\n    },\n    DAI: {\n        1: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        42: '0x04df6e4121c27713ed22341e7c7df330f56f289b',\n    },\n    USDC: {\n        1: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        42: '0xc2569dd7d0fd715b054fbf16e75b001e5c0c1115',\n    },\n    USDT: {\n        1: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        42: '0xcc08220af469192c53295fdd34cfb8df29aa17ab',\n    },\n    StaticPools: {\n        // DAI/USDC/USDT\n        staBal: {\n            1: '0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063',\n            42: '0x45f78862bd3aa5205e63141fa7f2d35f38eb87c30000000000000000000000fd',\n        },\n        // WETH/DAI (WETH/USDC on Kovan)\n        wethDai: {\n            1: '0x0b09dea16768f0799065c475be02919503cb2a3500020000000000000000001a',\n            42: '0x3a19030ed746bd1c3f2b0f996ff9479af04c5f0a000200000000000000000004',\n        },\n        // WETH/wstETH Lido Pool\n        wstEthWeth: {\n            1: '0x32296969ef14eb0c6d29669c550d4a0449130230000200000000000000000080',\n            42: '0xe08590bde837eb9b2d42aa1196469d6e08fe96ec000200000000000000000101',\n        },\n    },\n};\n\ntype Route = {\n    name: string;\n    tokenInDecimals: number;\n    tokenOutDecimals: number;\n    tokenAddresses: string[];\n    swaps: SwapV2[];\n};\n\ntype RouteMap = {\n    [id: string]: Route;\n};\n\nexport const Routes: { [network: number]: RouteMap } = {\n    1: {},\n    42: {},\n};\n\n// MAINNET STATIC ROUTES FOR LIDO <> Stable\n// DAI/wstETH: DAI > WETH > wstETH\nRoutes[1][`${Lido.DAI[1]}${Lido.wstETH[1]}0`] = {\n    name: 'DAI/wstETH-SwapExactIn',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 18,\n    tokenAddresses: [Lido.DAI[1], Lido.WETH[1], Lido.wstETH[1]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wethDai[1],\n            amount: '',\n            assetInIndex: 0,\n            assetOutIndex: 1,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wstEthWeth[1],\n            amount: '0',\n            assetInIndex: 1,\n            assetOutIndex: 2,\n            userData: '0x',\n        },\n    ],\n};\n\n// wstETH/DAI: wstETH > WETH > DAI\nRoutes[1][`${Lido.wstETH[1]}${Lido.DAI[1]}0`] = {\n    name: 'wstETH/DAI-SwapExactIn',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 18,\n    tokenAddresses: [Lido.wstETH[1], Lido.WETH[1], Lido.DAI[1]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wstEthWeth[1],\n            amount: '',\n            assetInIndex: 0,\n            assetOutIndex: 1,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[1],\n            amount: '0',\n            assetInIndex: 1,\n            assetOutIndex: 2,\n            userData: '0x',\n        },\n    ],\n};\n\n// DAI/wstETH: DAI > WETH > wstETH\nRoutes[1][`${Lido.DAI[1]}${Lido.wstETH[1]}1`] = {\n    name: 'DAI/wstETH-SwapExactOut',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 18,\n    tokenAddresses: [Lido.DAI[1], Lido.WETH[1], Lido.wstETH[1]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wstEthWeth[1],\n            amount: '',\n            assetInIndex: 1,\n            assetOutIndex: 2,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[1],\n            amount: '0',\n            assetInIndex: 0,\n            assetOutIndex: 1,\n            userData: '0x',\n        },\n    ],\n};\n\n// wstETH/DAI: wstETH > WETH > DAI\nRoutes[1][`${Lido.wstETH[1]}${Lido.DAI[1]}1`] = {\n    name: 'wstETH/DAI-SwapExactOut',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 18,\n    tokenAddresses: [Lido.wstETH[1], Lido.WETH[1], Lido.DAI[1]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wethDai[1],\n            amount: '',\n            assetInIndex: 1,\n            assetOutIndex: 2,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wstEthWeth[1],\n            amount: '0',\n            assetInIndex: 0,\n            assetOutIndex: 1,\n            userData: '0x',\n        },\n    ],\n};\n\n// USDC/wstETH: USDC > DAI > WETH > wstETH\nRoutes[1][`${Lido.USDC[1]}${Lido.wstETH[1]}0`] = {\n    name: 'USDC/wstETH-SwapExactIn',\n    tokenInDecimals: 6,\n    tokenOutDecimals: 18,\n    tokenAddresses: [Lido.USDC[1], Lido.DAI[1], Lido.WETH[1], Lido.wstETH[1]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.staBal[1],\n            amount: '',\n            assetInIndex: 0,\n            assetOutIndex: 1,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[1],\n            amount: '0',\n            assetInIndex: 1,\n            assetOutIndex: 2,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wstEthWeth[1],\n            amount: '0',\n            assetInIndex: 2,\n            assetOutIndex: 3,\n            userData: '0x',\n        },\n    ],\n};\n\nRoutes[1][`${Lido.USDC[1]}${Lido.wstETH[1]}1`] = {\n    name: 'USDC/wstETH-SwapExactOut',\n    tokenInDecimals: 6,\n    tokenOutDecimals: 18,\n    tokenAddresses: [Lido.USDC[1], Lido.DAI[1], Lido.WETH[1], Lido.wstETH[1]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wstEthWeth[1],\n            amount: '',\n            assetInIndex: 2,\n            assetOutIndex: 3,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[1],\n            amount: '0',\n            assetInIndex: 1,\n            assetOutIndex: 2,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.staBal[1],\n            amount: '0',\n            assetInIndex: 0,\n            assetOutIndex: 1,\n            userData: '0x',\n        },\n    ],\n};\n\n// wstETH/USDC: wstETH > WETH > DAI > USDC\nRoutes[1][`${Lido.wstETH[1]}${Lido.USDC[1]}0`] = {\n    name: 'wstETH/USDC-SwapExactIn',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 6,\n    tokenAddresses: [Lido.wstETH[1], Lido.WETH[1], Lido.DAI[1], Lido.USDC[1]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wstEthWeth[1],\n            amount: '',\n            assetInIndex: 0,\n            assetOutIndex: 1,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[1],\n            amount: '0',\n            assetInIndex: 1,\n            assetOutIndex: 2,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.staBal[1],\n            amount: '0',\n            assetInIndex: 2,\n            assetOutIndex: 3,\n            userData: '0x',\n        },\n    ],\n};\n\nRoutes[1][`${Lido.wstETH[1]}${Lido.USDC[1]}1`] = {\n    name: 'wstETH/USDC-SwapExactOut',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 6,\n    tokenAddresses: [Lido.wstETH[1], Lido.WETH[1], Lido.DAI[1], Lido.USDC[1]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.staBal[1],\n            amount: '',\n            assetInIndex: 2,\n            assetOutIndex: 3,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[1],\n            amount: '0',\n            assetInIndex: 1,\n            assetOutIndex: 2,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wstEthWeth[1],\n            amount: '0',\n            assetInIndex: 0,\n            assetOutIndex: 1,\n            userData: '0x',\n        },\n    ],\n};\n\n// USDT/wstETH: USDT > DAI > WETH > wstETH\nRoutes[1][`${Lido.USDT[1]}${Lido.wstETH[1]}0`] = {\n    name: 'USDT/wstETH-SwapExactIn',\n    tokenInDecimals: 6,\n    tokenOutDecimals: 18,\n    tokenAddresses: [Lido.USDT[1], Lido.DAI[1], Lido.WETH[1], Lido.wstETH[1]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.staBal[1],\n            amount: '',\n            assetInIndex: 0,\n            assetOutIndex: 1,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[1],\n            amount: '0',\n            assetInIndex: 1,\n            assetOutIndex: 2,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wstEthWeth[1],\n            amount: '0',\n            assetInIndex: 2,\n            assetOutIndex: 3,\n            userData: '0x',\n        },\n    ],\n};\n\nRoutes[1][`${Lido.USDT[1]}${Lido.wstETH[1]}1`] = {\n    name: 'USDT/wstETH-SwapExactOut',\n    tokenInDecimals: 6,\n    tokenOutDecimals: 18,\n    tokenAddresses: [Lido.USDT[1], Lido.DAI[1], Lido.WETH[1], Lido.wstETH[1]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wstEthWeth[1],\n            amount: '',\n            assetInIndex: 2,\n            assetOutIndex: 3,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[1],\n            amount: '0',\n            assetInIndex: 1,\n            assetOutIndex: 2,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.staBal[1],\n            amount: '0',\n            assetInIndex: 0,\n            assetOutIndex: 1,\n            userData: '0x',\n        },\n    ],\n};\n\n// wstETH/USDT: wstETH > WETH > DAI > USDT\nRoutes[1][`${Lido.wstETH[1]}${Lido.USDT[1]}0`] = {\n    name: 'wstETH/USDT-SwapExactIn',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 6,\n    tokenAddresses: [Lido.wstETH[1], Lido.WETH[1], Lido.DAI[1], Lido.USDT[1]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wstEthWeth[1],\n            amount: '',\n            assetInIndex: 0,\n            assetOutIndex: 1,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[1],\n            amount: '0',\n            assetInIndex: 1,\n            assetOutIndex: 2,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.staBal[1],\n            amount: '0',\n            assetInIndex: 2,\n            assetOutIndex: 3,\n            userData: '0x',\n        },\n    ],\n};\n\nRoutes[1][`${Lido.wstETH[1]}${Lido.USDT[1]}1`] = {\n    name: 'wstETH/USDT-SwapExactOut',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 6,\n    tokenAddresses: [Lido.wstETH[1], Lido.WETH[1], Lido.DAI[1], Lido.USDT[1]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.staBal[1],\n            amount: '',\n            assetInIndex: 2,\n            assetOutIndex: 3,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[1],\n            amount: '0',\n            assetInIndex: 1,\n            assetOutIndex: 2,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wstEthWeth[1],\n            amount: '0',\n            assetInIndex: 0,\n            assetOutIndex: 1,\n            userData: '0x',\n        },\n    ],\n};\n\n// KOVAN STATIC ROUTES FOR LIDO <> Stable\n// USDC/wstETH: USDC > WETH > wstETH\nRoutes[42][`${Lido.USDC[42]}${Lido.wstETH[42]}0`] = {\n    name: 'USDC/wstETH-SwapExactIn',\n    tokenInDecimals: 6,\n    tokenOutDecimals: 18,\n    tokenAddresses: [Lido.USDC[42], Lido.WETH[42], Lido.wstETH[42]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wethDai[42],\n            amount: '',\n            assetInIndex: 0,\n            assetOutIndex: 1,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wstEthWeth[42],\n            amount: '0',\n            assetInIndex: 1,\n            assetOutIndex: 2,\n            userData: '0x',\n        },\n    ],\n};\n\n// wstETH/USDC: wstETH > WETH > USDC\nRoutes[42][`${Lido.wstETH[42]}${Lido.USDC[42]}0`] = {\n    name: 'wstETH/USDC-SwapExactIn',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 6,\n    tokenAddresses: [Lido.wstETH[42], Lido.WETH[42], Lido.USDC[42]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wstEthWeth[42],\n            amount: '',\n            assetInIndex: 0,\n            assetOutIndex: 1,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[42],\n            amount: '0',\n            assetInIndex: 1,\n            assetOutIndex: 2,\n            userData: '0x',\n        },\n    ],\n};\n\n// USDC/wstETH: USDC > WETH > wstETH\nRoutes[42][`${Lido.USDC[42]}${Lido.wstETH[42]}1`] = {\n    name: 'USDC/wstETH-SwapExactOut',\n    tokenInDecimals: 6,\n    tokenOutDecimals: 18,\n    tokenAddresses: [Lido.USDC[42], Lido.WETH[42], Lido.wstETH[42]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wstEthWeth[42],\n            amount: '',\n            assetInIndex: 1,\n            assetOutIndex: 2,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[42],\n            amount: '0',\n            assetInIndex: 0,\n            assetOutIndex: 1,\n            userData: '0x',\n        },\n    ],\n};\n\n// wstETH/USDC: wstETH > WETH > USDC\nRoutes[42][`${Lido.wstETH[42]}${Lido.USDC[42]}1`] = {\n    name: 'wstETH/USDC-SwapExactOut',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 6,\n    tokenAddresses: [Lido.wstETH[42], Lido.WETH[42], Lido.USDC[42]],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wethDai[42],\n            amount: '',\n            assetInIndex: 1,\n            assetOutIndex: 2,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wstEthWeth[42],\n            amount: '0',\n            assetInIndex: 0,\n            assetOutIndex: 1,\n            userData: '0x',\n        },\n    ],\n};\n\n// DAI/wstETH: DAI > USDC > WETH > wstETH\nRoutes[42][`${Lido.DAI[42]}${Lido.wstETH[42]}0`] = {\n    name: 'DAI/wstETH-SwapExactIn',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 18,\n    tokenAddresses: [\n        Lido.DAI[42],\n        Lido.USDC[42],\n        Lido.WETH[42],\n        Lido.wstETH[42],\n    ],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.staBal[42],\n            amount: '',\n            assetInIndex: 0,\n            assetOutIndex: 1,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[42],\n            amount: '0',\n            assetInIndex: 1,\n            assetOutIndex: 2,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wstEthWeth[42],\n            amount: '0',\n            assetInIndex: 2,\n            assetOutIndex: 3,\n            userData: '0x',\n        },\n    ],\n};\n\nRoutes[42][`${Lido.DAI[42]}${Lido.wstETH[42]}1`] = {\n    name: 'DAI/wstETH-SwapExactOut',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 18,\n    tokenAddresses: [\n        Lido.DAI[42],\n        Lido.USDC[42],\n        Lido.WETH[42],\n        Lido.wstETH[42],\n    ],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wstEthWeth[42],\n            amount: '',\n            assetInIndex: 2,\n            assetOutIndex: 3,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[42],\n            amount: '0',\n            assetInIndex: 1,\n            assetOutIndex: 2,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.staBal[42],\n            amount: '0',\n            assetInIndex: 0,\n            assetOutIndex: 1,\n            userData: '0x',\n        },\n    ],\n};\n\n// wstETH/DAI: wstETH > WETH > USDC > DAI\nRoutes[42][`${Lido.wstETH[42]}${Lido.DAI[42]}0`] = {\n    name: 'wstETH/DAI-SwapExactIn',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 18,\n    tokenAddresses: [\n        Lido.wstETH[42],\n        Lido.WETH[42],\n        Lido.USDC[42],\n        Lido.DAI[42],\n    ],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wstEthWeth[42],\n            amount: '',\n            assetInIndex: 0,\n            assetOutIndex: 1,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[42],\n            amount: '0',\n            assetInIndex: 1,\n            assetOutIndex: 2,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.staBal[42],\n            amount: '0',\n            assetInIndex: 2,\n            assetOutIndex: 3,\n            userData: '0x',\n        },\n    ],\n};\n\nRoutes[42][`${Lido.wstETH[42]}${Lido.DAI[42]}1`] = {\n    name: 'wstETH/DAI-SwapExactOut',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 18,\n    tokenAddresses: [\n        Lido.wstETH[42],\n        Lido.WETH[42],\n        Lido.USDC[42],\n        Lido.DAI[42],\n    ],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.staBal[42],\n            amount: '',\n            assetInIndex: 2,\n            assetOutIndex: 3,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[42],\n            amount: '0',\n            assetInIndex: 1,\n            assetOutIndex: 2,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wstEthWeth[42],\n            amount: '0',\n            assetInIndex: 0,\n            assetOutIndex: 1,\n            userData: '0x',\n        },\n    ],\n};\n\n// USDT/wstETH: USDT > USDC > WETH > wstETH\nRoutes[42][`${Lido.USDT[42]}${Lido.wstETH[42]}0`] = {\n    name: 'USDT/wstETH-SwapExactIn',\n    tokenInDecimals: 6,\n    tokenOutDecimals: 18,\n    tokenAddresses: [\n        Lido.USDT[42],\n        Lido.USDC[42],\n        Lido.WETH[42],\n        Lido.wstETH[42],\n    ],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.staBal[42],\n            amount: '',\n            assetInIndex: 0,\n            assetOutIndex: 1,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[42],\n            amount: '0',\n            assetInIndex: 1,\n            assetOutIndex: 2,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wstEthWeth[42],\n            amount: '0',\n            assetInIndex: 2,\n            assetOutIndex: 3,\n            userData: '0x',\n        },\n    ],\n};\n\nRoutes[42][`${Lido.USDT[42]}${Lido.wstETH[42]}1`] = {\n    name: 'USDT/wstETH-SwapExactOut',\n    tokenInDecimals: 6,\n    tokenOutDecimals: 18,\n    tokenAddresses: [\n        Lido.USDT[42],\n        Lido.USDC[42],\n        Lido.WETH[42],\n        Lido.wstETH[42],\n    ],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wstEthWeth[42],\n            amount: '',\n            assetInIndex: 2,\n            assetOutIndex: 3,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[42],\n            amount: '0',\n            assetInIndex: 1,\n            assetOutIndex: 2,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.staBal[42],\n            amount: '0',\n            assetInIndex: 0,\n            assetOutIndex: 1,\n            userData: '0x',\n        },\n    ],\n};\n\n// wstETH/USDT: wstETH > WETH > USDC > USDT\nRoutes[42][`${Lido.wstETH[42]}${Lido.USDT[42]}0`] = {\n    name: 'wstETH/USDT-SwapExactIn',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 6,\n    tokenAddresses: [\n        Lido.wstETH[42],\n        Lido.WETH[42],\n        Lido.USDC[42],\n        Lido.USDT[42],\n    ],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.wstEthWeth[42],\n            amount: '',\n            assetInIndex: 0,\n            assetOutIndex: 1,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[42],\n            amount: '0',\n            assetInIndex: 1,\n            assetOutIndex: 2,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.staBal[42],\n            amount: '0',\n            assetInIndex: 2,\n            assetOutIndex: 3,\n            userData: '0x',\n        },\n    ],\n};\n\nRoutes[42][`${Lido.wstETH[42]}${Lido.USDT[42]}1`] = {\n    name: 'wstETH/USDT-SwapExactOut',\n    tokenInDecimals: 18,\n    tokenOutDecimals: 6,\n    tokenAddresses: [\n        Lido.wstETH[42],\n        Lido.WETH[42],\n        Lido.USDC[42],\n        Lido.USDT[42],\n    ],\n    swaps: [\n        {\n            poolId: Lido.StaticPools.staBal[42],\n            amount: '',\n            assetInIndex: 2,\n            assetOutIndex: 3,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wethDai[42],\n            amount: '0',\n            assetInIndex: 1,\n            assetOutIndex: 2,\n            userData: '0x',\n        },\n        {\n            poolId: Lido.StaticPools.wstEthWeth[42],\n            amount: '0',\n            assetInIndex: 0,\n            assetOutIndex: 1,\n            userData: '0x',\n        },\n    ],\n};\n\n// Only want static routes for Lido <> Stable\nexport function isLidoStableSwap(\n    chainId: number,\n    tokenIn: string,\n    tokenOut: string\n): boolean {\n    if (!Lido.Networks.includes(chainId)) return false;\n\n    tokenIn = tokenIn.toLowerCase();\n    tokenOut = tokenOut.toLowerCase();\n\n    if (\n        (tokenIn === Lido.wstETH[chainId] && tokenOut === Lido.DAI[chainId]) ||\n        (tokenIn === Lido.wstETH[chainId] && tokenOut === Lido.USDC[chainId]) ||\n        (tokenIn === Lido.wstETH[chainId] && tokenOut === Lido.USDT[chainId]) ||\n        (tokenIn === Lido.DAI[chainId] && tokenOut === Lido.wstETH[chainId]) ||\n        (tokenIn === Lido.USDC[chainId] && tokenOut === Lido.wstETH[chainId]) ||\n        (tokenIn === Lido.USDT[chainId] && tokenOut === Lido.wstETH[chainId]) ||\n        (tokenIn === Lido.stETH[chainId] && tokenOut === Lido.DAI[chainId]) ||\n        (tokenIn === Lido.stETH[chainId] && tokenOut === Lido.USDC[chainId]) ||\n        (tokenIn === Lido.stETH[chainId] && tokenOut === Lido.USDT[chainId]) ||\n        (tokenIn === Lido.DAI[chainId] && tokenOut === Lido.stETH[chainId]) ||\n        (tokenIn === Lido.USDC[chainId] && tokenOut === Lido.stETH[chainId]) ||\n        (tokenIn === Lido.USDT[chainId] && tokenOut === Lido.stETH[chainId])\n    )\n        return true;\n    else return false;\n}\n\n// Uses Vault queryBatchSwap to get return amount for swap\nasync function queryBatchSwap(\n    swapType: SwapTypes,\n    swaps: SwapV2[],\n    assets: string[],\n    provider: Provider\n): Promise<BigNumber> {\n    const vaultAddr = '0xBA12222222228d8Ba445958a75a0704d566BF2C8';\n    const vaultContract = new Contract(vaultAddr, vaultAbi, provider);\n    const funds = {\n        sender: AddressZero,\n        recipient: AddressZero,\n        fromInternalBalance: false,\n        toInternalBalance: false,\n    };\n\n    try {\n        const deltas: BigNumber[] =\n            await vaultContract.callStatic.queryBatchSwap(\n                swapType,\n                swaps,\n                assets,\n                funds\n            );\n        // negative amounts represent tokens (or ETH) sent by the Vault\n        if (swapType === SwapTypes.SwapExactIn)\n            return deltas[assets.length - 1].mul(-1);\n        else return deltas[0];\n    } catch (err) {\n        console.error(\n            `SOR - Lido Static Route QueryBatchSwap Error. No swaps.`\n        );\n        return Zero;\n    }\n}\n\n/*\nSpot Price for path is product of each pools SP for relevant tokens.\n(See helpersClass getSpotPriceAfterSwapForPath)\n*/\nfunction calculateMarketSp(\n    swapType: SwapTypes,\n    swaps: SwapV2[],\n    assets: string[],\n    pools: SubgraphPoolBase[]\n): OldBigNumber {\n    const spotPrices: OldBigNumber[] = [];\n    for (let i = 0; i < swaps.length; i++) {\n        const swap = swaps[i];\n\n        // Find matching pool from list so we can use balances, etc\n        const pool = pools.filter((p) => p.id === swap.poolId);\n        if (pool.length !== 1) return bnum(0);\n\n        // This will get a specific pool type so we can call parse and spot price functions\n        const newPool = parseNewPool(pool[0]);\n        if (!newPool) return bnum(0);\n\n        // Parses relevant balances, etc\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const poolPairData: any = newPool.parsePoolPairData(\n            assets[swap.assetInIndex],\n            assets[swap.assetOutIndex]\n        );\n\n        // Calculate current spot price\n        let spotPrice: OldBigNumber;\n        if (swapType === SwapTypes.SwapExactIn)\n            spotPrice = newPool._spotPriceAfterSwapExactTokenInForTokenOut(\n                poolPairData,\n                ZERO\n            );\n        // Amount = 0 to just get current SP\n        else\n            spotPrice = newPool._spotPriceAfterSwapTokenInForExactTokenOut(\n                poolPairData,\n                ZERO\n            ); // Amount = 0 to just get current SP\n\n        // console.log(`${swap.poolId} ${spotPrice.toString()}`);\n        spotPrices.push(spotPrice);\n    }\n\n    // SP for Path is product of all\n    return spotPrices.reduce((a, b) => a.times(b));\n}\n\nexport async function getStEthRate(\n    provider: Provider,\n    chainId: number\n): Promise<BigNumber> {\n    // Call stEthPerToken or tokensPerStETH to get the scaling factors in each direction.\n    const wstETHContract = new Contract(\n        Lido.wstETH[chainId],\n        ['function tokensPerStEth() external view returns (uint256)'],\n        provider\n    );\n    const rate = await wstETHContract.tokensPerStEth();\n    return rate;\n}\n\n/*\nUsed when SOR doesn't support paths with more than one hop.\nEnables swapping of stables <> wstETH via WETH/DAI pool which has good liquidity.\n*/\nexport async function getLidoStaticSwaps(\n    pools: SubgraphPoolBase[],\n    chainId: number,\n    tokenIn: string,\n    tokenOut: string,\n    swapType: SwapTypes,\n    swapAmount: BigNumber,\n    provider: Provider\n): Promise<SwapInfo> {\n    // Check for stETH tokens and convert to use wstETH for routing\n    let isWrappingIn,\n        isWrappingOut = false;\n    if (tokenIn === Lido.stETH[chainId]) {\n        tokenIn = Lido.wstETH[chainId];\n        isWrappingIn = true;\n    }\n    if (tokenOut === Lido.stETH[chainId]) {\n        tokenOut = Lido.wstETH[chainId];\n        isWrappingOut = true;\n    }\n\n    const swapInfo: SwapInfo = cloneDeep(EMPTY_SWAPINFO);\n    const staticRoute = Routes[chainId][`${tokenIn}${tokenOut}${swapType}`];\n    if (!staticRoute) return swapInfo;\n\n    swapInfo.tokenAddresses = staticRoute.tokenAddresses;\n    swapInfo.swaps = staticRoute.swaps;\n    swapInfo.swapAmount = swapAmount;\n    // if (swapType === SwapTypes.SwapExactIn)\n    //     swapInfo.swapAmount = scale(swapAmount, staticRoute.tokenInDecimals).dp(\n    //         0\n    //     );\n    // else\n    //     swapInfo.swapAmount = scale(\n    //         swapAmount,\n    //         staticRoute.tokenOutDecimals\n    //     ).dp(0);\n\n    swapInfo.swaps[0].amount = swapInfo.swapAmount.toString();\n    if (isWrappingIn) swapInfo.tokenIn = Lido.stETH[chainId];\n    else swapInfo.tokenIn = tokenIn;\n\n    if (isWrappingOut) swapInfo.tokenOut = Lido.stETH[chainId];\n    else swapInfo.tokenOut = tokenOut;\n\n    // Calculate SP as product of all pool SP in path\n    swapInfo.marketSp = calculateMarketSp(\n        swapType,\n        swapInfo.swaps,\n        swapInfo.tokenAddresses,\n        pools\n    ).toString();\n\n    // Unlike main SOR here we haven't calculated the return amount for swaps so use query call on Vault to get value.\n    swapInfo.returnAmount = await queryBatchSwap(\n        swapType,\n        swapInfo.swaps,\n        swapInfo.tokenAddresses,\n        provider\n    );\n\n    if (swapInfo.returnAmount.isZero()) {\n        return cloneDeep(EMPTY_SWAPINFO);\n    }\n\n    // Considering fees shouldn't matter as there won't be alternative options on V1\n    swapInfo.returnAmountConsideringFees = swapInfo.returnAmount;\n    return swapInfo;\n}\n","import { BigNumber } from '@ethersproject/bignumber';\nimport { Provider } from '@ethersproject/providers';\nimport { Contract } from '@ethersproject/contracts';\nimport { WeiPerEther as ONE } from '@ethersproject/constants';\n\n// The unbutton ERC-20 wrapper is a generic wrapper which wraps any rebasing token\n// into a fixed balance version.\n// https://github.com/buttonwood-protocol/button-wrappers/blob/main/contracts/UnbuttonToken.sol#L18\n\nexport const TokensToUnbuttonWrapperMap = {\n    Networks: [1],\n    1: {\n        // underlying => wrapper\n\n        // AMPL => WAMPL\n        '0xd46ba6d942050d489dbd938a2c909a5d5039a161':\n            '0xedb171c18ce90b633db442f2a6f72874093b49ef',\n\n        // aAMPL -> ubAAMPL\n        '0x1e6bb68acec8fefbd87d192be09bb274170a0548':\n            '0xF03387d8d0FF326ab586A58E0ab4121d106147DF',\n    },\n};\n\n// Returns the current wrapper exchange rate,\n// ie) number of wrapper tokens for 1e18 (ONE) underlying token\nexport async function getWrapperRate(\n    provider: Provider,\n    wrapperAddress: string\n): Promise<BigNumber> {\n    const ubWrapper = new Contract(\n        wrapperAddress,\n        [\n            'function underlyingToWrapper(uint256 amount) external view returns (uint256)',\n        ],\n        provider\n    );\n    return ubWrapper.underlyingToWrapper(ONE);\n}\n","import { BigNumber } from '@ethersproject/bignumber';\nimport { Provider } from '@ethersproject/providers';\nimport { AddressZero, WeiPerEther as ONE } from '@ethersproject/constants';\nimport { Lido, getStEthRate } from './pools/lido';\nimport { SwapTypes, SwapInfo, SorConfig } from './types';\nimport {\n    TokensToUnbuttonWrapperMap,\n    getWrapperRate as getUnbuttonWrapperRate,\n} from './wrappers/unbutton';\nimport { isSameAddress } from './utils';\n\nexport interface WrappedInfo {\n    swapAmountOriginal: BigNumber;\n    swapAmountForSwaps: BigNumber;\n    tokenIn: TokenInfo;\n    tokenOut: TokenInfo;\n}\n\nexport interface TokenInfo {\n    addressOriginal: string;\n    addressForSwaps: string;\n    wrapType: WrapTypes;\n    rate: BigNumber;\n}\n\nexport enum WrapTypes {\n    None,\n    ETH, // ETH -> WETH\n    stETH, // stETH -> wSTETH\n    Unbutton, // [rebasing Token] -> ubToken\n}\n\nexport async function getWrappedInfo(\n    provider: Provider,\n    swapType: SwapTypes,\n    tokenIn: string,\n    tokenOut: string,\n    config: SorConfig,\n    swapAmount: BigNumber\n): Promise<WrappedInfo> {\n    // The Subgraph returns tokens in lower case format so we must match this\n    tokenIn = tokenIn.toLowerCase();\n    tokenOut = tokenOut.toLowerCase();\n\n    let swapAmountForSwaps = swapAmount;\n    let tokenInForSwaps = tokenIn;\n    let tokenInWrapType = WrapTypes.None;\n    let tokenOutForSwaps = tokenOut;\n    let tokenOutWrapType = WrapTypes.None;\n    let tokenInRate = ONE;\n    let tokenOutRate = ONE;\n\n    //--------------------------------------------------------------------------\n    // ETH/WETH\n\n    // Handle ETH wrapping\n    if (tokenIn === AddressZero) {\n        tokenInForSwaps = config.weth.toLowerCase();\n        tokenInWrapType = WrapTypes.ETH;\n    }\n\n    // Handle WETH unwrapping\n    if (tokenOut === AddressZero) {\n        tokenOutForSwaps = config.weth.toLowerCase();\n        tokenOutWrapType = WrapTypes.ETH;\n    }\n\n    //--------------------------------------------------------------------------\n    // stETH/wstETH\n\n    // Handle stETH wrapping\n    if (tokenIn === Lido.stETH[config.chainId]) {\n        tokenInForSwaps = Lido.wstETH[config.chainId];\n        tokenInWrapType = WrapTypes.stETH;\n        const rate = await getStEthRate(provider, config.chainId);\n        tokenInRate = rate;\n        if (swapType === SwapTypes.SwapExactIn)\n            swapAmountForSwaps = swapAmount.mul(rate).div(ONE);\n    }\n\n    // Handle wstETH unwrapping\n    if (tokenOut === Lido.stETH[config.chainId]) {\n        tokenOutForSwaps = Lido.wstETH[config.chainId];\n        tokenOutWrapType = WrapTypes.stETH;\n        const rate = await getStEthRate(provider, config.chainId);\n        tokenOutRate = rate;\n        if (swapType === SwapTypes.SwapExactOut)\n            swapAmountForSwaps = swapAmount.mul(rate).div(ONE);\n    }\n\n    //--------------------------------------------------------------------------\n    // ubTokens\n\n    // Gets a list of all the tokens and their unbutton wrappers\n    const tokensToUBWrapperMap =\n        TokensToUnbuttonWrapperMap[config.chainId] || {};\n\n    // Handle token unbutton wrapping\n    if (tokensToUBWrapperMap[tokenIn]) {\n        tokenInForSwaps = tokensToUBWrapperMap[tokenIn];\n        tokenInWrapType = WrapTypes.Unbutton;\n        tokenInRate = await getUnbuttonWrapperRate(provider, tokenInForSwaps);\n        if (swapType === SwapTypes.SwapExactIn)\n            swapAmountForSwaps = swapAmount.mul(tokenInRate).div(ONE);\n    }\n\n    // Handle unbutton token unwrapping\n    if (tokensToUBWrapperMap[tokenOut]) {\n        tokenOutForSwaps = tokensToUBWrapperMap[tokenOut];\n        tokenOutWrapType = WrapTypes.Unbutton;\n        tokenOutRate = await getUnbuttonWrapperRate(provider, tokenOutForSwaps);\n        if (swapType === SwapTypes.SwapExactOut)\n            swapAmountForSwaps = swapAmount.mul(tokenOutRate).div(ONE);\n    }\n\n    //--------------------------------------------------------------------------\n\n    return {\n        swapAmountOriginal: swapAmount,\n        swapAmountForSwaps: swapAmountForSwaps,\n        tokenIn: {\n            addressOriginal: tokenIn,\n            addressForSwaps: tokenInForSwaps,\n            wrapType: tokenInWrapType,\n            rate: tokenInRate,\n        },\n        tokenOut: {\n            addressOriginal: tokenOut,\n            addressForSwaps: tokenOutForSwaps,\n            wrapType: tokenOutWrapType,\n            rate: tokenOutRate,\n        },\n    };\n}\n\nexport function setWrappedInfo(\n    swapInfo: SwapInfo,\n    swapType: SwapTypes,\n    wrappedInfo: WrappedInfo,\n    config: SorConfig\n): SwapInfo {\n    if (swapInfo.swaps.length === 0) return swapInfo;\n\n    swapInfo.tokenIn = wrappedInfo.tokenIn.addressOriginal;\n    swapInfo.tokenOut = wrappedInfo.tokenOut.addressOriginal;\n\n    swapInfo.swapAmountForSwaps = swapInfo.swapAmount;\n    swapInfo.returnAmountFromSwaps = swapInfo.returnAmount;\n\n    swapInfo.tokenInForSwaps = wrappedInfo.tokenIn.addressForSwaps;\n    swapInfo.tokenOutFromSwaps = wrappedInfo.tokenOut.addressForSwaps;\n\n    // No wrapping required\n    if (\n        wrappedInfo.tokenIn.wrapType === WrapTypes.None &&\n        wrappedInfo.tokenOut.wrapType === WrapTypes.None\n    ) {\n        return swapInfo;\n    }\n\n    //--------------------------------------------------------------------------\n    // Wrappers which are 1:1 (ETH/WETH), ie UnscaledWrappers\n    // Replace weth with ZERO/ETH in assets for Vault to handle ETH directly\n    if (\n        wrappedInfo.tokenIn.wrapType === WrapTypes.ETH ||\n        wrappedInfo.tokenOut.wrapType === WrapTypes.ETH\n    ) {\n        swapInfo.tokenAddresses = swapInfo.tokenAddresses.map((addr) =>\n            isSameAddress(addr, config.weth) ? AddressZero : addr\n        );\n    }\n\n    //--------------------------------------------------------------------------\n    // Wrappers which are NOT 1:1 (stETH/wstETH, AMPL/WAMPL, all ubTokens etc)\n    // ie ScaledWrappers\n\n    const isScaledWrapper = (wrapType) =>\n        wrapType === WrapTypes.stETH || wrapType === WrapTypes.Unbutton;\n\n    // Scaling required for wrappers which don't scale 1:1 with the underlying token\n    // swap amount and return amounts are scaled if swap type is SwapExact\n\n    // Handle swap amount scaling\n    if (\n        (isScaledWrapper(wrappedInfo.tokenIn.wrapType) &&\n            swapType === SwapTypes.SwapExactIn) ||\n        (isScaledWrapper(wrappedInfo.tokenOut.wrapType) &&\n            swapType === SwapTypes.SwapExactOut)\n    ) {\n        swapInfo.swapAmount = wrappedInfo.swapAmountOriginal;\n        swapInfo.swapAmountForSwaps = wrappedInfo.swapAmountForSwaps;\n    }\n\n    // Handle return amount scaling\n    // SwapExactIn, unwrapped out, returnAmount is unwrapped amount out, returnAmountForSwaps is wrapped amount out\n    if (\n        swapType === SwapTypes.SwapExactIn &&\n        isScaledWrapper(wrappedInfo.tokenOut.wrapType)\n    ) {\n        swapInfo.returnAmount = swapInfo.returnAmount\n            .mul(ONE)\n            .div(wrappedInfo.tokenOut.rate);\n\n        swapInfo.returnAmountConsideringFees =\n            swapInfo.returnAmountConsideringFees\n                .mul(ONE)\n                .div(wrappedInfo.tokenOut.rate);\n    }\n\n    // SwapExactOut, unwrapped in, returnAmount us unwrapped amount in, returnAmountForSwaps is wrapped amount in\n    if (\n        swapType === SwapTypes.SwapExactOut &&\n        isScaledWrapper(wrappedInfo.tokenIn.wrapType)\n    ) {\n        swapInfo.returnAmount = swapInfo.returnAmount\n            .mul(ONE)\n            .div(wrappedInfo.tokenIn.rate);\n\n        swapInfo.returnAmountConsideringFees =\n            swapInfo.returnAmountConsideringFees\n                .mul(ONE)\n                .div(wrappedInfo.tokenIn.rate);\n    }\n\n    return swapInfo;\n}\n","import { BigNumber } from '@ethersproject/bignumber';\nimport cloneDeep from 'lodash.clonedeep';\nimport { bnum, scale } from './utils/bignumber';\nimport { EMPTY_SWAPINFO } from './constants';\nimport { SwapTypes, SwapV2, Swap, SwapInfo } from './types';\nimport { Zero } from '@ethersproject/constants';\n\n/**\n * @returns an array of deduplicated token addresses used in the provided swaps\n */\nconst getTokenAddresses = (swaps: Swap[][]): string[] => {\n    const tokenAddressesSet: Set<string> = new Set(\n        swaps.flatMap((sequence) =>\n            sequence.flatMap((swap): [string, string] => [\n                swap.tokenIn,\n                swap.tokenOut,\n            ])\n        )\n    );\n\n    return [...tokenAddressesSet];\n};\n\n/**\n * @returns an array of deduplicated token addresses used in the provided swaps\n */\nexport const getTokenAddressesForSwap = (swaps: Swap[]): string[] => {\n    const tokenAddressesSet: Set<string> = new Set(\n        swaps.flatMap((swap): [string, string] => [swap.tokenIn, swap.tokenOut])\n    );\n\n    return [...tokenAddressesSet];\n};\n\n/**\n * @dev Assumes that intermediate swaps have been properly formatted using the zero sentinel value\n * @returns the total amount of tokens used in the described batchSwap\n */\nconst getTotalSwapAmount = (swaps: SwapV2[]) => {\n    return swaps.reduce((acc, { amount }) => acc.add(amount), Zero);\n};\n\n/**\n * Formats a sequence of swaps to the format expected by the Balance Vault.\n * @dev Intermediate swaps' amounts are replaced with the sentinel value of zero\n *      and exact output sequences are reversed.\n * @param swapKind - a SwapTypes enum for whether the swap has an exact input or exact output\n * @param sequence - a sequence of swaps which form a path from the input token to the output token\n * @param tokenAddresses - an array of all the token address which are involved in the batchSwap\n * @returns\n */\nexport const formatSequence = (\n    swapKind: SwapTypes,\n    sequence: Swap[],\n    tokenAddresses: string[]\n): SwapV2[] => {\n    if (swapKind === SwapTypes.SwapExactOut) {\n        // GIVEN_OUT sequences must be passed to the vault in reverse order.\n        // After reversing the sequence we can treat them almost equivalently to GIVEN_IN sequences\n        sequence = sequence.reverse();\n    }\n\n    return sequence.map((swap, i) => {\n        // Multihop swaps can be executed by passing an `amountIn` value of zero for a swap. This will cause the amount out\n        // of the previous swap to be used as the amount in of the current one. In such a scenario, `tokenIn` must equal the\n        // previous swap's `tokenOut`.\n        let amountScaled = '0';\n\n        // First swap needs to be given a value so we inject this from SOR solution\n        if (i === 0) {\n            // If it's a GIVEN_IN swap then swapAmount is in terms of tokenIn\n            // and vice versa for GIVEN_OUT\n            const scalingFactor =\n                swapKind === SwapTypes.SwapExactIn\n                    ? swap.tokenInDecimals\n                    : swap.tokenOutDecimals;\n\n            amountScaled = scale(bnum(swap.swapAmount as string), scalingFactor)\n                .decimalPlaces(0, 1)\n                .toString();\n        }\n        const scalingFactorReturn =\n            swapKind === SwapTypes.SwapExactIn\n                ? swap.tokenOutDecimals\n                : swap.tokenInDecimals;\n\n        const returnScaled = scale(\n            bnum(swap.returnAmount ?? '0'),\n            scalingFactorReturn\n        )\n            .decimalPlaces(0, 1)\n            .toString();\n\n        const assetInIndex = tokenAddresses.indexOf(swap.tokenIn);\n        const assetOutIndex = tokenAddresses.indexOf(swap.tokenOut);\n        return {\n            poolId: swap.pool,\n            assetInIndex,\n            assetOutIndex,\n            amount: amountScaled,\n            userData: '0x',\n            returnAmount: returnScaled,\n        };\n    });\n};\n\nexport function formatSwaps(\n    swapsOriginal: Swap[][],\n    swapType: SwapTypes,\n    swapAmount: BigNumber,\n    tokenIn: string,\n    tokenOut: string,\n    returnAmount: BigNumber,\n    returnAmountConsideringFees: BigNumber,\n    marketSp: string\n): SwapInfo {\n    if (swapsOriginal.length === 0) {\n        return cloneDeep(EMPTY_SWAPINFO);\n    }\n\n    const swapsClone = cloneDeep(swapsOriginal);\n    const tokenAddresses = getTokenAddresses(swapsClone);\n    const swaps: SwapV2[] = swapsClone.flatMap((sequence) =>\n        formatSequence(swapType, sequence, tokenAddresses)\n    );\n\n    // We need to account for any rounding losses by adding dust to first path\n    const dust = swapAmount.sub(getTotalSwapAmount(swaps));\n    if (dust.gt(0)) {\n        swaps[0].amount = BigNumber.from(swaps[0].amount).add(dust).toString();\n    }\n\n    const swapInfo: SwapInfo = {\n        swapAmount,\n        swapAmountForSwaps: swapAmount,\n        returnAmount,\n        returnAmountFromSwaps: returnAmount,\n        returnAmountConsideringFees,\n        swaps,\n        tokenAddresses,\n        tokenIn,\n        tokenOut,\n        marketSp,\n    };\n\n    return swapInfo;\n}\n","import cloneDeep from 'lodash.clonedeep';\nimport {\n    PoolDataService,\n    SubgraphPoolBase,\n    SubgraphToken,\n    GraphQLArgs,\n} from './types';\n\nexport class PoolCacher {\n    private pools: SubgraphPoolBase[] = [];\n    private _finishedFetching = false;\n\n    constructor(private readonly poolDataService: PoolDataService) {}\n\n    public get finishedFetching(): boolean {\n        return this._finishedFetching;\n    }\n\n    public getPools(useBpts?: boolean): SubgraphPoolBase[] {\n        const pools = cloneDeep(this.pools);\n        // If we use join/exit paths add the pool token to its token list\n        if (useBpts) {\n            for (const pool of pools) {\n                if (\n                    pool.poolType === 'Weighted' ||\n                    pool.poolType === 'Investment'\n                ) {\n                    const BptAsToken: SubgraphToken = {\n                        address: pool.address,\n                        balance: pool.totalShares,\n                        decimals: 18,\n                        priceRate: '1',\n                        weight: '0',\n                    };\n                    pool.tokens.push(BptAsToken);\n                    pool.tokensList.push(pool.address);\n                }\n            }\n        }\n        return pools;\n    }\n\n    /*\n     * Saves updated pools data to internal cache.\n     *\n     * @param {GraphQLArgs} queryArgs - Optional query arguments to pass to pool data service.\n     * @returns {boolean} True if pools fetched successfully, False if not.\n     */\n    public async fetchPools(queryArgs?: GraphQLArgs): Promise<boolean> {\n        try {\n            this.pools = await this.poolDataService.getPools(queryArgs);\n            this._finishedFetching = true;\n            return true;\n        } catch (err) {\n            // On error clear all caches and return false so user knows to try again.\n            this._finishedFetching = false;\n            this.pools = [];\n            console.error(`Error: fetchPools(): ${err}`);\n            return false;\n        }\n    }\n}\n","import cloneDeep from 'lodash.clonedeep';\nimport {\n    SubgraphPoolBase,\n    PoolDictionary,\n    NewPath,\n    Swap,\n    PoolBase,\n    PoolFilter,\n    PoolTypes,\n    PoolPairBase,\n    SorConfig,\n    hopDictionary,\n} from '../types';\nimport { ZERO } from '../utils/bignumber';\nimport { parseNewPool } from '../pools';\nimport { Zero } from '@ethersproject/constants';\n\nconst BOOSTED_PATHS_MAX_LENGTH = 7;\n\ninterface edgeDict {\n    [node: string]: [string, string, string][];\n}\n\ninterface treeEdge {\n    edge: [string, string, string];\n    parentIndices: [number, number];\n    visitedNodes: string[];\n}\n\nexport const filterPoolsByType = (\n    pools: SubgraphPoolBase[],\n    poolTypeFilter: PoolFilter\n): SubgraphPoolBase[] => {\n    if (poolTypeFilter === PoolFilter.All) return pools;\n    return pools.filter((p) => p.poolType === poolTypeFilter);\n};\n\n/*\nThe purpose of this function is to build dictionaries of direct pools \nand plausible hop pools.\n*/\nexport function filterPoolsOfInterest(\n    allPools: PoolDictionary,\n    tokenIn: string,\n    tokenOut: string,\n    maxPools: number\n): [PoolDictionary, hopDictionary, hopDictionary] {\n    const directPools: PoolDictionary = {};\n    const hopsIn: hopDictionary = {};\n    const hopsOut: hopDictionary = {};\n\n    Object.keys(allPools).forEach((id) => {\n        const pool = allPools[id];\n        const tokenListSet = new Set(pool.tokensList);\n        const containsTokenIn = tokenListSet.has(tokenIn.toLowerCase());\n        const containsTokenOut = tokenListSet.has(tokenOut.toLowerCase());\n\n        // This is a direct pool as has both tokenIn and tokenOut\n        if (containsTokenIn && containsTokenOut) {\n            directPools[pool.id] = pool;\n            return;\n        }\n\n        if (maxPools > 1) {\n            if (containsTokenIn && !containsTokenOut) {\n                for (const hopToken of tokenListSet) {\n                    if (!hopsIn[hopToken]) hopsIn[hopToken] = new Set([]);\n                    hopsIn[hopToken].add(pool.id);\n                }\n            } else if (!containsTokenIn && containsTokenOut) {\n                for (const hopToken of [...tokenListSet]) {\n                    if (!hopsOut[hopToken]) hopsOut[hopToken] = new Set([]);\n                    hopsOut[hopToken].add(pool.id);\n                }\n            }\n        }\n    });\n    return [directPools, hopsIn, hopsOut];\n}\n\nexport function producePaths(\n    tokenIn: string,\n    tokenOut: string,\n    directPools: PoolDictionary,\n    hopsIn: hopDictionary,\n    hopsOut: hopDictionary,\n    pools: PoolDictionary\n): NewPath[] {\n    const paths: NewPath[] = [];\n\n    // Create direct paths\n    for (const id in directPools) {\n        const path = createPath([tokenIn, tokenOut], [pools[id]]);\n        paths.push(path);\n    }\n\n    for (const hopToken in hopsIn) {\n        if (hopsOut[hopToken]) {\n            let highestNormalizedLiquidityFirst = ZERO; // Aux variable to find pool with most liquidity for pair (tokenIn -> hopToken)\n            let highestNormalizedLiquidityFirstPoolId: string | undefined; // Aux variable to find pool with most liquidity for pair (tokenIn -> hopToken)\n            let highestNormalizedLiquiditySecond = ZERO; // Aux variable to find pool with most liquidity for pair (hopToken -> tokenOut)\n            let highestNormalizedLiquiditySecondPoolId: string | undefined; // Aux variable to find pool with most liquidity for pair (hopToken -> tokenOut)\n            for (const poolInId of [...hopsIn[hopToken]]) {\n                const poolIn = pools[poolInId];\n                const poolPairData = poolIn.parsePoolPairData(\n                    tokenIn,\n                    hopToken\n                );\n                const normalizedLiquidity =\n                    poolIn.getNormalizedLiquidity(poolPairData);\n                // Cannot be strictly greater otherwise highestNormalizedLiquidityPoolId = 0 if hopTokens[i] balance is 0 in this pool.\n                if (\n                    normalizedLiquidity.isGreaterThanOrEqualTo(\n                        highestNormalizedLiquidityFirst\n                    )\n                ) {\n                    highestNormalizedLiquidityFirst = normalizedLiquidity;\n                    highestNormalizedLiquidityFirstPoolId = poolIn.id;\n                }\n            }\n            for (const poolOutId of [...hopsOut[hopToken]]) {\n                const poolOut = pools[poolOutId];\n                const poolPairData = poolOut.parsePoolPairData(\n                    hopToken,\n                    tokenOut\n                );\n                const normalizedLiquidity =\n                    poolOut.getNormalizedLiquidity(poolPairData);\n                // Cannot be strictly greater otherwise highestNormalizedLiquidityPoolId = 0 if hopTokens[i] balance is 0 in this pool.\n                if (\n                    normalizedLiquidity.isGreaterThanOrEqualTo(\n                        highestNormalizedLiquiditySecond\n                    )\n                ) {\n                    highestNormalizedLiquiditySecond = normalizedLiquidity;\n                    highestNormalizedLiquiditySecondPoolId = poolOut.id;\n                }\n            }\n            if (\n                highestNormalizedLiquidityFirstPoolId &&\n                highestNormalizedLiquiditySecondPoolId\n            ) {\n                const path = createPath(\n                    [tokenIn, hopToken, tokenOut],\n                    [\n                        pools[highestNormalizedLiquidityFirstPoolId],\n                        pools[highestNormalizedLiquiditySecondPoolId],\n                    ]\n                );\n                paths.push(path);\n            }\n        }\n    }\n    return paths;\n}\n\n// We build a directed graph for the boosted pools.\n// Nodes are tokens and edges are triads: [pool.id, tokenIn, tokenOut].\n// The current criterion for including a pool into this graph is the following:\n// (a) We include every linear pool.\n// (b) Among preminted BPT pools and weighted pools, we include those that contain the pool token of a linear pool.\n// (c) Among every pool, we include those that contain the pool token of a pool from the previous step.\n// (d) We include connections of tokenIn and tokenOut to list of tokens from `connectingTokens` (only highest liquidity for each).\n// (e) When tokenIn or tokenOut are tokens offered at an LBP, we also include\n// the LBPs and the corresponding highest liquidity connections of the raising tokens with WETH.\n// (f) We include the pool weth/wsteth\n//\n// To build the paths using boosted pools we use the following algorithm.\n// Given a tokenIn and a tokenOut belonging to the graph, we want to find\n// all the connecting paths inside the graph, with the properties:\n// (a) They do not visit the same token twice\n// (b) They do not use the same pool twice in a row (since this\n// would never be optimal).\n// These paths can be organized as a directed tree having tokenIn as a root.\n// We build this tree by adding at each step all the possible continuations for\n// each branch. When a branch reaches tokenOut, we write down the corresponding path.\n// We only allow paths up to length BOOSTED_PATHS_MAX_LENGTH = 7\nexport function getBoostedGraph(\n    tokenIn: string,\n    tokenOut: string,\n    poolsAllDict: PoolDictionary,\n    config: SorConfig\n): edgeDict {\n    // This should contain all pools in the Graph\n    const graphPoolsSet: Set<PoolBase> = new Set();\n    const allLinearPoolAddresses: string[] = [];\n    const poolsToCheckForLinearBpt: PoolBase[] = [];\n    const connectingTokens = config.connectingTokens\n        ? config.connectingTokens.map(\n              (connectingToken) => connectingToken.address\n          )\n        : [];\n    // Add all LinearPools (see step a)\n    // Create a list of pools that should be checked for Linear BPT (for step b)\n    // Add LBP pools with tokenIn or tokenOut and their corresponding highest liquidity connections\n    for (const id in poolsAllDict) {\n        const pool = poolsAllDict[id];\n        if (pool.poolType == PoolTypes.Linear) {\n            allLinearPoolAddresses.push(pool.address);\n            graphPoolsSet.add(pool);\n        } else {\n            const tokensList = pool.tokensList.map((address) =>\n                address.toLowerCase()\n            );\n            if (tokensList.includes(pool.address)) {\n                // Here we asssume that preminted pools are exactly those that\n                // are not linear and have their pool token in their tokensList.\n                poolsToCheckForLinearBpt.push(pool);\n            } else if (pool.poolType === PoolTypes.Weighted) {\n                // We want to consider Weighted Pools with Linear Bpt tokens\n                poolsToCheckForLinearBpt.push(pool);\n            }\n            if (config.lbpRaisingTokens && pool.isLBP) {\n                handleLBPCase(\n                    graphPoolsSet,\n                    config.lbpRaisingTokens,\n                    pool,\n                    tokenIn,\n                    tokenOut,\n                    connectingTokens,\n                    poolsAllDict\n                );\n            }\n        }\n    }\n    if (allLinearPoolAddresses.length == 0) return {};\n\n    // add best pools tokenIn -> connectingToken and connectingToken -> tokenOut\n    // these can be part of a longer path so do not rely on being directly connected\n    for (const connectingToken of connectingTokens) {\n        addMostLiquidPoolToSet(\n            tokenIn,\n            connectingToken,\n            poolsAllDict,\n            graphPoolsSet\n        );\n        addMostLiquidPoolToSet(\n            connectingToken,\n            tokenOut,\n            poolsAllDict,\n            graphPoolsSet\n        );\n    }\n    // As per step b - Among preminted BPT pools and weighted pools, we include those that contain the pool token of a linear pool.\n    const poolsWithLinearTokens: Set<string> = new Set();\n    for (const pool of poolsToCheckForLinearBpt) {\n        if (\n            pool.tokensList.some((token) =>\n                allLinearPoolAddresses.includes(token)\n            )\n        ) {\n            graphPoolsSet.add(pool);\n            poolsWithLinearTokens.add(pool.address);\n        }\n    }\n    // As per step c -  We include every pool that has a pool token from the previous step\n    for (const id in poolsAllDict) {\n        const pool = poolsAllDict[id];\n        if (pool.tokensList.some((token) => poolsWithLinearTokens.has(token))) {\n            graphPoolsSet.add(pool);\n        }\n    }\n    // Step f - add pool weth/wsteth when it exists\n    if (config.wETHwstETH && poolsAllDict[config.wETHwstETH.id]) {\n        graphPoolsSet.add(poolsAllDict[config.wETHwstETH.id]);\n    }\n    const graphPools: PoolBase[] = [...graphPoolsSet];\n    const edgeDict = getNodesAndEdges(graphPools);\n    return edgeDict;\n}\n\nfunction getNodesAndEdges(pools: PoolBase[]): edgeDict {\n    const edgesFromNode: edgeDict = {};\n    for (const pool of pools) {\n        const n = pool.tokensList.length;\n        for (let i = 0; i < n; i++) {\n            if (!edgesFromNode[pool.tokensList[i]])\n                edgesFromNode[pool.tokensList[i]] = [];\n            for (let j = 0; j < n; j++) {\n                if (i == j) continue;\n                const edge: [string, string, string] = [\n                    pool.id,\n                    pool.tokensList[i],\n                    pool.tokensList[j],\n                ];\n                edgesFromNode[pool.tokensList[i]].push(edge);\n            }\n        }\n    }\n    return edgesFromNode;\n}\n\nexport function getBoostedPaths(\n    tokenIn: string,\n    tokenOut: string,\n    poolsAllDict: PoolDictionary,\n    config: SorConfig\n): NewPath[] {\n    const edgesFromNode = getBoostedGraph(\n        tokenIn,\n        tokenOut,\n        poolsAllDict,\n        config\n    );\n    const pathsInfo: [string[], string[]][] = [];\n    const rootTreeEdge: treeEdge = {\n        edge: ['', '', tokenIn],\n        parentIndices: [-1, -1],\n        visitedNodes: [],\n    };\n    const treeEdges: treeEdge[][] = [[rootTreeEdge]];\n    let iterate = true;\n    while (iterate) {\n        const n = treeEdges.length; // number of tree edge layers so far\n        const newTreeEdges: treeEdge[] = [];\n        // adds every possible treeEdge for each treeEdge of the previous layer\n        for (let i = 0; i < treeEdges[n - 1].length; i++) {\n            const treeEdge = treeEdges[n - 1][i];\n            const token = treeEdge.edge[2];\n            const edgesFromToken = edgesFromNode[token];\n            if (!edgesFromToken) continue;\n            for (const edge of edgesFromToken) {\n                // skip if the node was already visited or\n                // if the pool is the one from the previous edge\n                if (\n                    treeEdge.visitedNodes.includes(edge[2]) ||\n                    treeEdge.edge[0] == edge[0]\n                ) {\n                    continue;\n                }\n                if (edge[2] == tokenOut) {\n                    pathsInfo.push(getPathInfo(edge, treeEdge, treeEdges));\n                }\n                const newTreeEdge: treeEdge = {\n                    edge: edge,\n                    parentIndices: [n - 1, i],\n                    visitedNodes: treeEdge.visitedNodes.concat(edge[1]),\n                };\n                newTreeEdges.push(newTreeEdge);\n            }\n        }\n        if (newTreeEdges.length == 0) {\n            iterate = false;\n        } else treeEdges.push(newTreeEdges);\n        if (n == BOOSTED_PATHS_MAX_LENGTH) iterate = false;\n    }\n    return pathsInfoToPaths(pathsInfo, poolsAllDict);\n}\n\nfunction getPathInfo(\n    edge: [string, string, string],\n    treeEdge: treeEdge,\n    treeEdges: treeEdge[][]\n): [string[], string[]] {\n    const pathEdges: [string, string, string][] = [edge];\n    pathEdges.unshift(treeEdge.edge);\n    let indices = treeEdge.parentIndices;\n    while (indices[0] !== -1) {\n        pathEdges.unshift(treeEdges[indices[0]][indices[1]].edge);\n        indices = treeEdges[indices[0]][indices[1]].parentIndices;\n    }\n    const pools = pathEdges.map((pathEdge) => pathEdge[0]);\n    pools.splice(0, 1);\n    const tokens = pathEdges.map((pathEdge) => pathEdge[2]);\n    return [tokens, pools];\n}\n\nfunction pathsInfoToPaths(\n    flexBoostedPathsInfo: [string[], string[]][],\n    poolsAllDict: PoolDictionary\n): NewPath[] {\n    const paths: NewPath[] = [];\n    for (const boostedPathInfo of flexBoostedPathsInfo) {\n        const pools = boostedPathInfo[1].map((id) => poolsAllDict[id]);\n        // ignore paths of length 1 and 2\n        if (pools.length > 2) {\n            paths.push(createPath(boostedPathInfo[0], pools));\n        }\n    }\n    return paths;\n}\n\n// Creates a path with pools.length hops\n// i.e. tokens[0]>[Pool0]>tokens[1]>[Pool1]>tokens[2]>[Pool2]>tokens[3]\nexport function createPath(tokens: string[], pools: PoolBase[]): NewPath {\n    let tI: string, tO: string;\n    const swaps: Swap[] = [];\n    const poolPairData: PoolPairBase[] = [];\n    let id = '';\n\n    for (let i = 0; i < pools.length; i++) {\n        tI = tokens[i];\n        tO = tokens[i + 1];\n        const poolPair = pools[i].parsePoolPairData(tI, tO);\n        poolPairData.push(poolPair);\n        id = id + poolPair.id;\n\n        const swap: Swap = {\n            pool: pools[i].id,\n            tokenIn: tI,\n            tokenOut: tO,\n            tokenInDecimals: poolPair.decimalsIn,\n            tokenOutDecimals: poolPair.decimalsOut,\n        };\n\n        swaps.push(swap);\n    }\n\n    const path: NewPath = {\n        id,\n        swaps,\n        limitAmount: Zero,\n        poolPairData,\n        pools,\n    };\n\n    return path;\n}\n\nexport function getHighestLiquidityPool(\n    tokenIn: string,\n    tokenOut: string,\n    poolsOfInterest: PoolDictionary\n): string | null {\n    let highestNormalizedLiquidity = ZERO;\n    let highestNormalizedLiquidityPoolId: string | null = null;\n    for (const id in poolsOfInterest) {\n        const pool = poolsOfInterest[id];\n        const tokenListSet = new Set(pool.tokensList);\n\n        // If pool doesn't have tokenIn or tokenOut then ignore\n\n        if (\n            !tokenListSet.has(tokenIn.toLowerCase()) ||\n            !tokenListSet.has(tokenOut.toLowerCase())\n        )\n            continue;\n        const poolPairData = pool.parsePoolPairData(tokenIn, tokenOut);\n        const normalizedLiquidity = pool.getNormalizedLiquidity(poolPairData);\n        // Cannot be strictly greater otherwise highestNormalizedLiquidityPoolId = 0 if hopTokens[i] balance is 0 in this pool.\n        if (\n            normalizedLiquidity.isGreaterThanOrEqualTo(\n                highestNormalizedLiquidity\n            )\n        ) {\n            highestNormalizedLiquidity = normalizedLiquidity;\n            highestNormalizedLiquidityPoolId = id;\n        }\n    }\n    return highestNormalizedLiquidityPoolId;\n}\n\n// This function will only work correctly if the input is composable\n// i.e. each path's token out = next path's token in\nfunction composePaths(paths: NewPath[]): NewPath {\n    let id = '';\n    let swaps: Swap[] = [];\n    let poolPairData: PoolPairBase[] = [];\n    let pools: PoolBase[] = [];\n    for (const path of paths) {\n        id += path.id;\n        swaps = swaps.concat(path.swaps);\n        poolPairData = poolPairData.concat(path.poolPairData);\n        pools = pools.concat(path.pools);\n    }\n    const path: NewPath = {\n        id: id,\n        swaps: swaps,\n        poolPairData: poolPairData,\n        limitAmount: Zero,\n        pools: pools,\n    };\n    return path;\n}\n\n/*\nThe staBAL3 pool (STABALADDR) is the main stable pool that holds DAI/USDC/USDT and has the staBAL3 BPT.\nMetastable pools that contain a project token, i.e. TUSD, paired with staBAL3 BPT.\nUSDC connecting pool (USDCCONNECTINGPOOL) is a metastable pool containing USDC and staBAL3 BPT.\nThis setup should enable paths between the new project metastable pools and other liquidity. I.e. TUSD > BAL, which would look like:\nTUSD>[TUSDstaBALPool]>staBAL3>[ConnectingPool]>USDC>[BalWeightedPool]>BAL\n*/\nexport function getPathsUsingStaBalPool(\n    tokenIn: string,\n    tokenOut: string,\n    poolsAll: PoolDictionary,\n    poolsFiltered: PoolDictionary,\n    config: SorConfig\n): NewPath[] {\n    // This will be the USDC/staBAL Connecting pool used in Polygon\n    const usdcConnectingPoolInfo = config.usdcConnectingPool;\n    if (!usdcConnectingPoolInfo) return [];\n\n    const usdcConnectingPool = poolsAll[usdcConnectingPoolInfo.id];\n    // staBal BPT token is the hop token between token and USDC connecting pool\n    const hopTokenStaBal = config.staBal3Pool?.address;\n\n    if (!usdcConnectingPool || !hopTokenStaBal) return [];\n\n    // Finds the best metastable Pool with tokenIn/staBal3Bpt or returns null if doesn't exist\n    const metastablePoolIdIn = getHighestLiquidityPool(\n        tokenIn,\n        hopTokenStaBal,\n        poolsFiltered\n    );\n    // Finds the best metastable Pool with tokenOut/staBal3Bpt or returns null if doesn't exist\n    const metastablePoolIdOut = getHighestLiquidityPool(\n        hopTokenStaBal,\n        tokenOut,\n        poolsFiltered\n    );\n\n    if (metastablePoolIdIn && !metastablePoolIdOut) {\n        // First part of path is multihop through metaStablePool and USDC Connecting Pools\n        // Last part of path is single hop through USDC/tokenOut highest liquidity pool\n        // i.e. tokenIn>[metaStablePool]>staBAL>[usdcConnecting]>USDC>[HighLiqPool]>tokenOut\n\n        const metaStablePoolIn = poolsFiltered[metastablePoolIdIn];\n\n        // tokenIn > [metaStablePool] > staBal > [UsdcConnectingPool] > USDC\n        const staBalPath = createPath(\n            [tokenIn, hopTokenStaBal, usdcConnectingPoolInfo.usdc],\n            [metaStablePoolIn, usdcConnectingPool]\n        );\n\n        // Hop out as it is USDC > tokenOut\n        const mostLiquidLastPool = getHighestLiquidityPool(\n            usdcConnectingPoolInfo.usdc,\n            tokenOut,\n            poolsFiltered\n        );\n        // No USDC>tokenOut pool so return empty path\n        if (mostLiquidLastPool === null) return [];\n\n        const lastPool = poolsFiltered[mostLiquidLastPool];\n        const pathEnd = createPath(\n            [usdcConnectingPoolInfo.usdc, tokenOut],\n            [lastPool]\n        );\n\n        return [composePaths([staBalPath, pathEnd])];\n    }\n\n    if (!metastablePoolIdIn && metastablePoolIdOut) {\n        // First part of path is single hop through tokenIn/USDC highest liquidity pool\n        // Last part of path is multihop through USDC Connecting Pools and metaStablePool\n        // i.e. i.e. tokenIn>[HighLiqPool]>USDC>[usdcConnecting]>staBAL>[metaStablePool]>tokenOut\n\n        // Hop in as it is tokenIn > USDC\n        const mostLiquidFirstPool = getHighestLiquidityPool(\n            tokenIn,\n            usdcConnectingPoolInfo.usdc,\n            poolsFiltered\n        );\n        // No tokenIn>USDC pool so return empty path\n        if (mostLiquidFirstPool === null) return [];\n\n        const metaStablePoolIn = poolsFiltered[metastablePoolIdOut];\n        const firstPool = poolsFiltered[mostLiquidFirstPool];\n\n        // USDC > [UsdcConnectingPool] > staBal > [metaStablePool] > tokenOut\n        const staBalPath = createPath(\n            [usdcConnectingPoolInfo.usdc, hopTokenStaBal, tokenOut],\n            [usdcConnectingPool, metaStablePoolIn]\n        );\n        const pathStart = createPath(\n            [tokenIn, usdcConnectingPoolInfo.usdc],\n            [firstPool]\n        );\n\n        return [composePaths([pathStart, staBalPath])];\n    }\n\n    // If we're here either the path doesn't use metastable pools (and so will not be routed through StaBAL)\n    // or both input and output tokens are in metastable pools and so should be handled by existing multihop algorithm\n    // (because it is tokenIn>[metaStablePoolIn]>staBal>[metaStablePoolOut]>tokenOut)\n    //\n    // We then return an empty set of paths\n    return [];\n}\n\nexport function parseToPoolsDict(\n    pools: SubgraphPoolBase[],\n    timestamp: number\n): PoolDictionary {\n    return Object.fromEntries(\n        cloneDeep(pools)\n            .filter(\n                (pool) =>\n                    pool.tokensList.length > 0 && pool.tokens[0].balance !== '0'\n            )\n            .map((pool) => [pool.id, parseNewPool(pool, timestamp)])\n            .filter(([, pool]) => pool !== undefined)\n    );\n}\n\nfunction getRaisingToken(\n    pool: PoolBase,\n    lbpRaisingTokens: string[],\n    token: string\n): string | undefined {\n    let theOtherToken: string | undefined;\n    const tokensList = pool.tokensList;\n    if (tokensList.includes(token) && !lbpRaisingTokens.includes(token)) {\n        for (let i = 0; i < 2; i++) {\n            if (tokensList[i] == token) {\n                theOtherToken = tokensList[1 - i];\n            }\n        }\n    }\n    return theOtherToken;\n}\n\nfunction handleLBPCase(\n    graphPoolsSet: Set<PoolBase>,\n    lbpRaisingTokens: string[],\n    poolLbp: PoolBase,\n    tokenIn: string,\n    tokenOut: string,\n    connectingTokens: string[],\n    poolsAllDict: PoolDictionary\n) {\n    // Tokens that will be used as LBP Base Token, e.g. USDC/DAI/WETH\n    const raisingTokens = lbpRaisingTokens.map((address) =>\n        address.toLowerCase()\n    );\n\n    if (raisingTokens.length === 0) return;\n\n    // Assuming tokenIn is the lbpToken find the corresponding base token if it exists\n    const raisingTokenIn: string | undefined = getRaisingToken(\n        poolLbp,\n        raisingTokens,\n        tokenIn\n    );\n    const raisingTokenOut: string | undefined = getRaisingToken(\n        poolLbp,\n        raisingTokens,\n        tokenOut\n    );\n    if (!raisingTokenIn && !raisingTokenOut) return;\n\n    // Add the LBP pool to the graph\n    graphPoolsSet.add(poolLbp);\n\n    // For each connecting token add most liquid pools with raisingToken and raisingTokenOut\n    for (const connectingToken of connectingTokens) {\n        if (raisingTokenIn && raisingTokenIn !== connectingToken) {\n            // raisingToken>[Pool]>connectingToken\n            addMostLiquidPoolToSet(\n                raisingTokenIn,\n                connectingToken,\n                poolsAllDict,\n                graphPoolsSet\n            );\n        }\n        if (raisingTokenOut && raisingTokenOut !== connectingToken) {\n            // connectingToken>[Pool]>raisingToken\n            addMostLiquidPoolToSet(\n                connectingToken,\n                raisingTokenOut,\n                poolsAllDict,\n                graphPoolsSet\n            );\n        }\n    }\n}\n\nfunction addMostLiquidPoolToSet(\n    tokenIn: string,\n    tokenOut: string,\n    pools: PoolDictionary,\n    graphPools: Set<PoolBase>\n): void {\n    const pool = getHighestLiquidityPool(tokenIn, tokenOut, pools);\n    if (pool) graphPools.add(pools[pool]);\n}\n","import { BigNumber, parseFixed } from '@ethersproject/bignumber';\nimport { Zero } from '@ethersproject/constants';\nimport { SwapTypes, NewPath } from '../types';\nimport { getOutputAmountSwap } from '../pools';\nimport { BigNumber as OldBigNumber } from '../utils/bignumber';\n\nexport function calculatePathLimits(\n    paths: NewPath[],\n    swapType: SwapTypes\n): [NewPath[], BigNumber] {\n    let maxLiquidityAvailable = Zero;\n    paths.forEach((path) => {\n        // Original parsedPoolPairForPath here but this has already been done.\n        path.limitAmount = getLimitAmountSwapForPath(path, swapType);\n        // if (path.limitAmount.isNaN()) throw 'path.limitAmount.isNaN';\n        maxLiquidityAvailable = maxLiquidityAvailable.add(path.limitAmount);\n    });\n    const sortedPaths = paths.sort((a, b) => {\n        return b.limitAmount.gt(a.limitAmount) ? 1 : -1;\n    });\n    return [sortedPaths, maxLiquidityAvailable];\n}\n\nexport function getLimitAmountSwapForPath(\n    path: NewPath,\n    swapType: SwapTypes\n): BigNumber {\n    const poolPairData = path.poolPairData;\n    let limit: OldBigNumber;\n    if (swapType === SwapTypes.SwapExactIn) {\n        limit = path.pools[poolPairData.length - 1].getLimitAmountSwap(\n            poolPairData[poolPairData.length - 1],\n            SwapTypes.SwapExactIn\n        );\n\n        for (let i = poolPairData.length - 2; i >= 0; i--) {\n            const poolLimitExactIn = path.pools[i].getLimitAmountSwap(\n                poolPairData[i],\n                SwapTypes.SwapExactIn\n            );\n            const poolLimitExactOut = path.pools[i].getLimitAmountSwap(\n                poolPairData[i],\n                SwapTypes.SwapExactOut\n            );\n            if (poolLimitExactOut.lte(limit)) {\n                limit = poolLimitExactIn;\n            } else {\n                const pulledLimit = getOutputAmountSwap(\n                    path.pools[i],\n                    path.poolPairData[i],\n                    SwapTypes.SwapExactOut,\n                    limit\n                );\n                limit = OldBigNumber.min(pulledLimit, poolLimitExactIn);\n            }\n        }\n        if (limit.isZero()) return Zero;\n        const result = parseFixed(\n            limit.dp(poolPairData[0].decimalsIn).toString(),\n            poolPairData[0].decimalsIn\n        );\n        return result;\n    } else {\n        limit = path.pools[0].getLimitAmountSwap(\n            poolPairData[0],\n            SwapTypes.SwapExactOut\n        );\n        for (let i = 1; i < poolPairData.length; i++) {\n            const poolLimitExactIn = path.pools[i].getLimitAmountSwap(\n                poolPairData[i],\n                SwapTypes.SwapExactIn\n            );\n            const poolLimitExactOut = path.pools[i].getLimitAmountSwap(\n                poolPairData[i],\n                SwapTypes.SwapExactOut\n            );\n            if (poolLimitExactIn.lte(limit)) {\n                limit = poolLimitExactOut;\n            } else {\n                const pushedLimit = getOutputAmountSwap(\n                    path.pools[i],\n                    path.poolPairData[i],\n                    SwapTypes.SwapExactIn,\n                    limit\n                );\n                limit = OldBigNumber.min(pushedLimit, poolLimitExactOut);\n            }\n        }\n        if (limit.isZero()) return Zero;\n        return parseFixed(\n            limit\n                .dp(poolPairData[poolPairData.length - 1].decimalsOut)\n                .toString(),\n            poolPairData[poolPairData.length - 1].decimalsOut\n        );\n    }\n}\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.20';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      if (iteratees.length) {\n        iteratees = arrayMap(iteratees, function(iteratee) {\n          if (isArray(iteratee)) {\n            return function(value) {\n              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n            }\n          }\n          return iteratee;\n        });\n      } else {\n        iteratees = [identity];\n      }\n\n      var index = -1;\n      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n          return object;\n        }\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      var low = 0,\n          high = array == null ? 0 : array.length;\n      if (high === 0) {\n        return 0;\n      }\n\n      value = iteratee(value);\n      var valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     *\n     * // Combining several predicates using `_.overEvery` or `_.overSome`.\n     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n     * // => objects for ['fred', 'barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 30 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n      // and escape the comment, thus injecting code that gets evaled.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/\\s/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     *\n     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])\n     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","import { NewPath, PoolBase, PoolTypes } from '../types';\nimport { keyBy, orderBy, sortBy, uniq } from 'lodash';\nimport { Graph } from 'graphlib';\nimport { Zero } from '@ethersproject/constants';\nimport {\n    PathGraphEdge,\n    PathGraphEdgeLabel,\n    PathGraphTraversalConfig,\n    PoolAddressDictionary,\n    PoolPairMap,\n} from './pathGraphTypes';\n\nexport class PathGraph {\n    private graph: Graph = new Graph({ multigraph: true });\n    private poolAddressMap: PoolAddressDictionary = {};\n    private graphIsInitialized = false;\n    private maxPathsPerTokenPair = 2;\n\n    public get isGraphInitialized(): boolean {\n        return this.graphIsInitialized;\n    }\n\n    // We build a directed graph for all pools.\n    // Nodes are tokens and edges are triads: [pool.id, tokenIn, tokenOut].\n    // The current criterion for including a pool path into this graph is the following:\n    // (a) We include every pool with phantom BPTs.\n    // (b) For any token pair x -> y, we include only the most liquid ${maxPathsPerTokenPair}\n    // pool pairs (default 2).\n    public buildGraph({\n        pools,\n        maxPathsPerTokenPair = 2,\n    }: {\n        pools: PoolBase[];\n        maxPathsPerTokenPair?: number;\n    }): void {\n        this.poolAddressMap = keyBy(pools, 'address');\n        const graph = new Graph({ multigraph: true });\n        const poolPairMap = this.buildSortedPoolPairMap(pools);\n\n        for (const id of Object.keys(poolPairMap)) {\n            const items = poolPairMap[id];\n\n            for (let i = 0; i < items.length; i++) {\n                const poolPair = items[i].poolPair;\n                const pool = this.poolAddressMap[poolPair.address];\n\n                // we take the first `maxPathsPerTokenPair` most liquid pairs.\n                // Always include pairs where the pool has phantom bpt\n                if (\n                    i < maxPathsPerTokenPair ||\n                    pool.tokensList.includes(poolPair.address)\n                ) {\n                    this.addGraphEdgeForPoolPair({\n                        tokenIn: poolPair.tokenIn,\n                        tokenOut: poolPair.tokenOut,\n                        pool,\n                        graph,\n                    });\n                }\n            }\n        }\n\n        this.graph = graph;\n        this.graphIsInitialized = true;\n        this.maxPathsPerTokenPair = maxPathsPerTokenPair;\n    }\n\n    // Since the path combinations here can get quite large, we use configurable parameters\n    // to enforce upper limits across several dimensions, defined in the pathConfig.\n    // (a) maxDepth - the max depth of the traversal (length of token path), defaults to 7.\n    // (b) maxNonBoostedPathDepth - the max depth for any path that does not contain a phantom bpt.\n    // (c) maxNonBoostedHopTokensInBoostedPath - The max number of non boosted hop tokens\n    // allowed in a boosted path.\n    // (d) approxPathsToReturn - search for up to this many paths. Since all paths for a single traversal\n    // are added, its possible that the amount returned is larger than this number.\n    // (e) poolIdsToInclude - Only include paths with these poolIds (optional)\n\n    // Additionally, we impose the following requirements for a path to be considered valid\n    // (a) It does not visit the same token twice\n    // (b) It does not use the same pool twice\n    public traverseGraphAndFindBestPaths({\n        tokenIn,\n        tokenOut,\n        pathConfig,\n    }: {\n        tokenIn: string;\n        tokenOut: string;\n        pathConfig?: Partial<PathGraphTraversalConfig>;\n    }): NewPath[] {\n        if (!this.graph.hasNode(tokenIn) || !this.graph.hasNode(tokenOut)) {\n            return [];\n        }\n\n        // apply defaults, allowing caller override whatever they'd like\n        const config: PathGraphTraversalConfig = {\n            maxDepth: 7,\n            maxNonBoostedPathDepth: 3,\n            maxNonBoostedHopTokensInBoostedPath: 1,\n            approxPathsToReturn: 5,\n            ...pathConfig,\n        };\n\n        const paths: PathGraphEdge[][] = [];\n        const selectedPathIds: string[] = [];\n        let seenPoolAddresses: string[] = [];\n\n        while (paths.length < config.approxPathsToReturn) {\n            //the tokenPairIndex refers to the nth most liquid path for a token\n            //pair x -> y. maxPathsPerTokenPair is provided as a config on graph init\n            for (let idx = 0; idx < this.maxPathsPerTokenPair; idx++) {\n                let foundPath = true;\n\n                //loop until we've found all unique paths from tokenIn -> tokenOut\n                //that meet validity and config criteria, preferring the ${idx}th most\n                //liquid pair. When there is less than ${idx+1} pairs, we default to the\n                //most liquid pair\n                while (foundPath) {\n                    foundPath = false;\n\n                    const path = this.traverseGraphAndFindUniquePath({\n                        token: tokenIn,\n                        tokenIn,\n                        tokenOut,\n                        tokenPairIndex: idx,\n                        config,\n                        tokenPath: [tokenIn],\n                        seenPoolAddresses,\n                        selectedPathIds,\n                    });\n\n                    if (path) {\n                        seenPoolAddresses = [\n                            ...seenPoolAddresses,\n                            ...path.map((segment) => segment.poolAddress),\n                        ];\n\n                        paths.push(path);\n                        selectedPathIds.push(this.getIdForPath(path));\n                        foundPath = true;\n                    }\n                }\n            }\n\n            // the assumption we make here is that if we are going to re-use a pool,\n            // the outcome will most likely be better if we reuse stable pools over\n            // volatile pools. If there are stable pools in the seen list, we remove\n            // them and rerun the traversal.\n            if (\n                paths.length < config.approxPathsToReturn &&\n                seenPoolAddresses.length > 0\n            ) {\n                const volatilePoolAddresses =\n                    this.filterVolatilePools(seenPoolAddresses);\n\n                if (\n                    volatilePoolAddresses.length > 0 &&\n                    volatilePoolAddresses.length < seenPoolAddresses.length\n                ) {\n                    seenPoolAddresses = volatilePoolAddresses;\n                } else {\n                    seenPoolAddresses = [];\n                }\n            } else {\n                // we have either found enough paths, or found no new paths for\n                // for an entire iteration\n                break;\n            }\n        }\n\n        return paths.map((path) => {\n            return {\n                id: path.map((segment) => segment.poolId).join('_'),\n                swaps: path.map((segment) => ({\n                    pool: segment.poolId,\n                    tokenIn: segment.tokenIn,\n                    tokenOut: segment.tokenOut,\n                    tokenInDecimals: this.getTokenDecimals(segment.tokenIn),\n                    tokenOutDecimals: this.getTokenDecimals(segment.tokenOut),\n                })),\n                poolPairData: path.map((segment) => segment.poolPair),\n                pools: path.map(\n                    (segment) => this.poolAddressMap[segment.poolAddress]\n                ),\n                limitAmount: Zero,\n            };\n        });\n    }\n\n    private buildSortedPoolPairMap(pools: PoolBase[]): PoolPairMap {\n        const poolPairMap: PoolPairMap = {};\n\n        for (const pool of pools) {\n            for (let i = 0; i < pool.tokensList.length - 1; i++) {\n                for (let j = i + 1; j < pool.tokensList.length; j++) {\n                    const id = `${pool.tokensList[i]}-${pool.tokensList[j]}`;\n                    const reverseId = `${pool.tokensList[j]}-${pool.tokensList[i]}`;\n\n                    if (!poolPairMap[id]) {\n                        poolPairMap[id] = [];\n                    }\n\n                    if (!poolPairMap[reverseId]) {\n                        poolPairMap[reverseId] = [];\n                    }\n\n                    const poolPair = pool.parsePoolPairData(\n                        pool.tokensList[i],\n                        pool.tokensList[j]\n                    );\n\n                    poolPairMap[id].push({\n                        poolPair,\n                        normalizedLiquidity:\n                            pool.getNormalizedLiquidity(poolPair),\n                    });\n\n                    const poolPairReverse = pool.parsePoolPairData(\n                        pool.tokensList[j],\n                        pool.tokensList[i]\n                    );\n\n                    poolPairMap[reverseId].push({\n                        poolPair: poolPairReverse,\n                        normalizedLiquidity:\n                            pool.getNormalizedLiquidity(poolPairReverse),\n                    });\n                }\n            }\n        }\n\n        for (const id of Object.keys(poolPairMap)) {\n            poolPairMap[id] = orderBy(\n                poolPairMap[id],\n                (item) => item.normalizedLiquidity.toNumber(),\n                'desc'\n            );\n        }\n\n        return poolPairMap;\n    }\n\n    private addGraphEdgeForPoolPair({\n        tokenIn,\n        tokenOut,\n        pool,\n        graph,\n    }: {\n        tokenIn: string;\n        tokenOut: string;\n        pool: PoolBase;\n        graph: Graph;\n    }) {\n        const poolPair = pool.parsePoolPairData(tokenIn, tokenOut);\n\n        const label: PathGraphEdgeLabel = {\n            poolId: pool.id,\n            poolAddress: pool.address,\n            poolPair,\n            normalizedLiquidity: pool.getNormalizedLiquidity(poolPair),\n            isPhantomBptHop:\n                !!this.poolAddressMap[tokenIn] ||\n                !!this.poolAddressMap[tokenOut],\n        };\n\n        graph.setEdge(\n            {\n                name: `${pool.id}-${tokenIn}-${tokenOut}`,\n                v: tokenIn,\n                w: tokenOut,\n            },\n            label\n        );\n    }\n\n    private traverseGraphAndFindUniquePath({\n        token,\n        tokenIn,\n        tokenOut,\n        tokenPath,\n        tokenPairIndex,\n        config,\n        seenPoolAddresses,\n        selectedPathIds,\n    }: {\n        token: string;\n        tokenIn: string;\n        tokenOut: string;\n        tokenPath: string[];\n        tokenPairIndex: number;\n        config: PathGraphTraversalConfig;\n        seenPoolAddresses: string[];\n        selectedPathIds: string[];\n    }): null | PathGraphEdge[] {\n        if (!this.isValidTokenPath({ tokenPath, config, tokenIn, tokenOut })) {\n            return null;\n        }\n\n        const successors = (this.graph.successors(token) || []).filter(\n            (successor) => !tokenPath.includes(successor)\n        );\n\n        if (successors.includes(tokenOut)) {\n            const path = this.buildPath({\n                tokenPath: [...tokenPath, tokenOut],\n                tokenPairIndex,\n            });\n\n            if (\n                path &&\n                this.isValidPath({\n                    path,\n                    seenPoolAddresses,\n                    selectedPathIds,\n                    config,\n                })\n            ) {\n                return path;\n            }\n        }\n\n        // we peek ahead one level, and optimistically sort the successors\n        const sortedAndFiltered = sortBy(successors, (successor) => {\n            const children = this.graph.successors(successor) || [];\n            return children.includes(tokenOut) ? -1 : 1;\n        }).filter((successor) => !tokenPath.includes(successor));\n\n        for (const successor of sortedAndFiltered) {\n            const result = this.traverseGraphAndFindUniquePath({\n                token: successor,\n                tokenIn,\n                tokenOut,\n                tokenPath: [...tokenPath, successor],\n                tokenPairIndex,\n                config,\n                seenPoolAddresses,\n                selectedPathIds,\n            });\n\n            if (result != null) {\n                return result;\n            }\n        }\n\n        return null;\n    }\n\n    private buildPath({\n        tokenPath,\n        tokenPairIndex,\n    }: {\n        tokenPath: string[];\n        tokenPairIndex: number;\n    }): PathGraphEdge[] | null {\n        const path: PathGraphEdge[] = [];\n        let isUnique = false;\n\n        for (let i = 0; i < tokenPath.length - 1; i++) {\n            const outEdges =\n                this.graph.outEdges(tokenPath[i], tokenPath[i + 1]) || [];\n\n            if (outEdges.length > tokenPairIndex) {\n                //if no part of this path uses the current tokenPairIndex, it\n                //will be a duplicate path, so we ignore it.\n                isUnique = true;\n            }\n\n            //this edge has already been qualified in the traversal, so it's safe\n            //to assume its here\n            const edge = outEdges[tokenPairIndex] || outEdges[0];\n            const edgeLabel: PathGraphEdgeLabel = this.graph.edge(edge);\n\n            path.push({\n                tokenIn: tokenPath[i],\n                tokenOut: tokenPath[i + 1],\n                ...edgeLabel,\n            });\n        }\n\n        return isUnique ? path : null;\n    }\n\n    private isValidPath({\n        path,\n        seenPoolAddresses,\n        selectedPathIds,\n        config,\n    }: {\n        path: PathGraphEdge[];\n        seenPoolAddresses: string[];\n        selectedPathIds: string[];\n        config: PathGraphTraversalConfig;\n    }) {\n        if (config.poolIdsToInclude) {\n            for (const edge of path) {\n                if (!config.poolIdsToInclude.includes(edge.poolId)) {\n                    //path includes a pool that is not allowed for this traversal\n                    return false;\n                }\n            }\n        }\n\n        const isBoostedPath =\n            path.filter(\n                (edge) =>\n                    this.poolAddressMap[edge.tokenIn] ||\n                    this.poolAddressMap[edge.tokenOut]\n            ).length > 0;\n\n        if (!isBoostedPath && path.length + 1 > config.maxNonBoostedPathDepth) {\n            return false;\n        }\n\n        const uniquePools = uniq(path.map((edge) => edge.poolId));\n\n        //dont include any path that hops through the same pool twice\n        if (uniquePools.length !== path.length) {\n            return false;\n        }\n\n        const intersection = path.filter((segment) =>\n            seenPoolAddresses.includes(segment.poolAddress)\n        );\n\n        //this path contains a pool that has already been used\n        if (intersection.length > 0) {\n            return false;\n        }\n\n        //this is a duplicate path\n        if (selectedPathIds.includes(this.getIdForPath(path))) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private getIdForPath(path: PathGraphEdge[]): string {\n        return path\n            .map(\n                (segment) =>\n                    `${segment.poolId}-${segment.tokenIn}-${segment.tokenOut}`\n            )\n            .join('_');\n    }\n\n    private filterVolatilePools(poolAddresses: string[]): string[] {\n        return poolAddresses.filter(\n            (address) =>\n                this.poolAddressMap[address].poolType === PoolTypes.Weighted\n        );\n    }\n\n    private isValidTokenPath({\n        tokenPath,\n        config,\n        tokenIn,\n        tokenOut,\n    }: {\n        tokenPath: string[];\n        config: PathGraphTraversalConfig;\n        tokenIn: string;\n        tokenOut: string;\n    }) {\n        const hopTokens = tokenPath.filter(\n            (token) => token !== tokenIn && token !== tokenOut\n        );\n        const numStandardHopTokens = hopTokens.filter(\n            (token) => !this.poolAddressMap[token]\n        ).length;\n        const isBoostedPath =\n            tokenPath.filter((token) => this.poolAddressMap[token]).length > 0;\n\n        if (tokenPath.length > config.maxDepth) {\n            return false;\n        }\n\n        if (\n            isBoostedPath &&\n            numStandardHopTokens > config.maxNonBoostedHopTokensInBoostedPath\n        ) {\n            return false;\n        }\n\n        // if the path length is greater than maxNonBoostedPathDepth, then this path\n        // will only be valid if its a boosted path, so it must honor maxNonBoostedHopTokensInBoostedPath\n        if (\n            tokenPath.length > config.maxNonBoostedPathDepth &&\n            numStandardHopTokens > config.maxNonBoostedHopTokensInBoostedPath\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private getTokenDecimals(tokenAddress: string): number {\n        const allTokens = Object.values(this.poolAddressMap)\n            .map((pool) => pool.tokens)\n            .flat();\n\n        const token = allTokens.find(\n            (token) =>\n                token.address.toLowerCase() === tokenAddress.toLowerCase()\n        );\n\n        return token?.decimals || 18;\n    }\n}\n","import { parseToPoolsDict } from './filtering';\nimport { calculatePathLimits } from './pathLimits';\nimport {\n    NewPath,\n    PoolDictionary,\n    PoolFilter,\n    SorConfig,\n    SubgraphPoolBase,\n    SwapOptions,\n    SwapTypes,\n} from '../types';\nimport { PathGraph } from '../pathGraph/pathGraph';\n\nexport class RouteProposer {\n    cache: Record<string, { paths: NewPath[] }> = {};\n    private readonly pathGraph: PathGraph;\n\n    constructor(private readonly config: SorConfig) {\n        this.pathGraph = new PathGraph();\n    }\n\n    public initPathGraphWithPools(pools: SubgraphPoolBase[]): void {\n        //TODO: setting the timestamp here is no longer ideal\n        const poolsAllDict = parseToPoolsDict(pools, 0);\n\n        this.pathGraph.buildGraph({\n            pools: Object.values(poolsAllDict),\n        });\n    }\n\n    /**\n     * Given a list of pools and a desired input/output, returns a set of possible paths to route through\n     */\n    getCandidatePaths(\n        tokenIn: string,\n        tokenOut: string,\n        swapType: SwapTypes,\n        pools: SubgraphPoolBase[],\n        swapOptions: SwapOptions\n    ): NewPath[] {\n        tokenIn = tokenIn.toLowerCase();\n        tokenOut = tokenOut.toLowerCase();\n        if (pools.length === 0) return [];\n\n        // If token pair has been processed before that info can be reused to speed up execution\n        // If timestamp has not been manually set in `getSwaps` then default (set on instantiation) is used which means cache will be used\n        const cache =\n            this.cache[\n                `${tokenIn}${tokenOut}${swapType}${swapOptions.timestamp}`\n            ];\n        // forceRefresh can be set to force fresh processing of paths/prices\n        if (!swapOptions.forceRefresh && !!cache) {\n            // Using pre-processed data from cache\n            return cache.paths;\n        }\n\n        //TODO: this flow is no longer ideal, but is here for the moment to ensure\n        //TODO: the graph is always initialized\n        if (!this.pathGraph.isGraphInitialized) {\n            const poolsAllDict = parseToPoolsDict(pools, swapOptions.timestamp);\n\n            this.pathGraph.buildGraph({\n                pools: Object.values(poolsAllDict),\n            });\n        }\n\n        const bestPaths = this.pathGraph.traverseGraphAndFindBestPaths({\n            tokenIn,\n            tokenOut,\n            pathConfig: {\n                poolIdsToInclude:\n                    swapOptions.poolTypeFilter !== PoolFilter.All\n                        ? pools.map((pool) => pool.id)\n                        : undefined,\n            },\n        });\n\n        const [paths] = calculatePathLimits(bestPaths, swapType);\n\n        this.cache[`${tokenIn}${tokenOut}${swapType}${swapOptions.timestamp}`] =\n            {\n                paths: paths,\n            };\n        return paths;\n    }\n\n    /**\n     * Given a pool dictionary and a desired input/output, returns a set of possible paths to route through.\n     * @param {string} tokenIn - Address of tokenIn\n     * @param {string} tokenOut - Address of tokenOut\n     * @param {SwapTypes} swapType - SwapExactIn where the amount of tokens in (sent to the Pool) is known or SwapExactOut where the amount of tokens out (received from the Pool) is known.\n     * @param {PoolDictionary} poolsAllDict - Dictionary of pools.\n     * @param {number }maxPools - Maximum number of pools to hop through.\n     * @returns {NewPath[]} Array of possible paths sorted by liquidity.\n     */\n    getCandidatePathsFromDict(\n        tokenIn: string,\n        tokenOut: string,\n        swapType: SwapTypes,\n        poolsAllDict: PoolDictionary\n        //TODO: replace this with path config\n        //maxPools: number\n    ): NewPath[] {\n        tokenIn = tokenIn.toLowerCase();\n        tokenOut = tokenOut.toLowerCase();\n        if (Object.keys(poolsAllDict).length === 0) return [];\n\n        const bestPaths = this.pathGraph.traverseGraphAndFindBestPaths({\n            tokenIn,\n            tokenOut,\n        });\n\n        const [paths] = calculatePathLimits(bestPaths, swapType);\n        return paths;\n    }\n}\n","import { BigNumber } from '@ethersproject/bignumber';\nimport { WeiPerEther as ONE, Zero } from '@ethersproject/constants';\nimport { bnum, scale } from './utils/bignumber';\nimport { SorConfig, TokenPriceService } from './types';\n\nexport class SwapCostCalculator {\n    private readonly tokenPriceCache: Record<string, string>;\n\n    constructor(\n        config: SorConfig,\n        private readonly tokenPriceService: TokenPriceService\n    ) {\n        this.tokenPriceCache = {\n            AddressZero: '1',\n            [config.weth.toLowerCase()]: '1',\n        };\n    }\n\n    /**\n     * Calculate the cost of spending a certain amount of gas in terms of a token.\n     * This allows us to determine whether an increased amount of tokens gained\n     * is worth spending this extra gas (e.g. by including an extra pool in a swap)\n     */\n    public async convertGasCostToToken(\n        tokenAddress: string,\n        tokenDecimals: number,\n        gasPriceWei: BigNumber,\n        swapGas: BigNumber = BigNumber.from('85000')\n    ): Promise<BigNumber> {\n        if (gasPriceWei.isZero() || swapGas.isZero()) return Zero;\n        const tokenPrice = await this.getNativeAssetPriceInToken(tokenAddress);\n        const tokenPriceWei = BigNumber.from(\n            scale(bnum(tokenPrice), tokenDecimals).dp(0).toString()\n        );\n\n        return gasPriceWei.mul(swapGas).mul(tokenPriceWei).div(ONE);\n    }\n\n    /**\n     * @param tokenAddress - the address of the token for which to express the native asset in terms of\n     * @param tokenPrice - the price of the native asset in terms of the provided token\n     */\n    public setNativeAssetPriceInToken(\n        tokenAddress: string,\n        tokenPrice: string\n    ): void {\n        this.tokenPriceCache[tokenAddress.toLowerCase()] = tokenPrice;\n    }\n\n    /**\n     * @param tokenAddress - the address of the token for which to express the native asset in terms of\n     */\n    private async getNativeAssetPriceInToken(\n        tokenAddress: string\n    ): Promise<string> {\n        // Check if we have token price cached\n        const cachedTokenPrice =\n            this.tokenPriceCache[tokenAddress.toLowerCase()];\n        if (cachedTokenPrice) return cachedTokenPrice;\n\n        try {\n            const ethPriceInToken =\n                await this.tokenPriceService.getNativeAssetPriceInToken(\n                    tokenAddress\n                );\n\n            //cache the price so we don't need to refetch it\n            this.setNativeAssetPriceInToken(tokenAddress, ethPriceInToken);\n\n            return ethPriceInToken;\n        } catch (err) {\n            console.log('Error Getting Token Price. Defaulting to 0.');\n            console.log(err);\n            return '0';\n        }\n    }\n}\n","import { BigNumber, BigNumberish, parseFixed } from '@ethersproject/bignumber';\nimport { Provider } from '@ethersproject/providers';\nimport cloneDeep from 'lodash.clonedeep';\nimport { BigNumber as OldBigNumber } from './utils/bignumber';\nimport { getBestPaths } from './router';\nimport { getWrappedInfo, setWrappedInfo } from './wrapInfo';\nimport { formatSwaps } from './formatSwaps';\nimport { PoolCacher } from './poolCacher';\nimport { RouteProposer } from './routeProposal';\nimport { filterPoolsByType } from './routeProposal/filtering';\nimport { SwapCostCalculator } from './swapCostCalculator';\nimport { getLidoStaticSwaps, isLidoStableSwap } from './pools/lido';\nimport { isSameAddress } from './utils';\nimport { EMPTY_SWAPINFO } from './constants';\nimport {\n    NewPath,\n    PoolFilter,\n    SubgraphPoolBase,\n    Swap,\n    SwapInfo,\n    SwapOptions,\n    SwapTypes,\n    TokenPriceService,\n    PoolDataService,\n    SorConfig,\n    GraphQLArgs,\n} from './types';\nimport { Zero } from '@ethersproject/constants';\n\nexport class SOR {\n    private readonly poolCacher: PoolCacher;\n    public readonly routeProposer: RouteProposer;\n    readonly swapCostCalculator: SwapCostCalculator;\n    private useBpt: boolean;\n\n    private readonly defaultSwapOptions: SwapOptions = {\n        gasPrice: parseFixed('50', 9),\n        swapGas: BigNumber.from('85000'),\n        poolTypeFilter: PoolFilter.All,\n        maxPools: 4,\n        timestamp: Math.floor(Date.now() / 1000),\n        forceRefresh: false,\n    };\n\n    /**\n     * @param {Provider} provider - Provider.\n     * @param {SorConfig} config - Chain specific configuration for the SOR.\n     * @param {PoolDataService} poolDataService - Generic service that fetches pool data from an external data source.\n     * @param {TokenPriceService} tokenPriceService - Generic service that fetches token prices from an external price feed. Used in calculating swap cost.\n     */\n    constructor(\n        public provider: Provider,\n        private readonly config: SorConfig,\n        poolDataService: PoolDataService,\n        tokenPriceService: TokenPriceService\n    ) {\n        this.poolCacher = new PoolCacher(poolDataService);\n        this.routeProposer = new RouteProposer(config);\n        this.swapCostCalculator = new SwapCostCalculator(\n            config,\n            tokenPriceService\n        );\n    }\n\n    getPools(useBpts?: boolean): SubgraphPoolBase[] {\n        return this.poolCacher.getPools(useBpts);\n    }\n\n    /**\n     * fetchPools Retrieves pools information and saves to internal pools cache.\n     * @returns {boolean} True if pools fetched successfully, False if not.\n     */\n    async fetchPools(queryArgs?: GraphQLArgs): Promise<boolean> {\n        const success = await this.poolCacher.fetchPools(queryArgs);\n\n        if (success) {\n            const pools = this.poolCacher.getPools();\n            this.routeProposer.initPathGraphWithPools(pools);\n        }\n\n        return success;\n    }\n\n    /**\n     * getSwaps Retrieve information for best swap tokenIn>tokenOut.\n     * @param {string} tokenIn - Address of tokenIn.\n     * @param {string} tokenOut - Address of tokenOut.\n     * @param {SwapTypes} swapType - SwapExactIn where the amount of tokens in (sent to the Pool) is known or SwapExactOut where the amount of tokens out (received from the Pool) is known.\n     * @param {BigNumberish} swapAmount - Either amountIn or amountOut depending on the `swapType` value.\n     * @param swapOptions\n     * @param useBpts Set to true to consider join/exit weighted pool paths (these will need formatted and submitted via Relayer)\n     * @returns Swap information including return amount and swaps structure to be submitted to Vault.\n     */\n    async getSwaps(\n        tokenIn: string,\n        tokenOut: string,\n        swapType: SwapTypes,\n        swapAmount: BigNumberish,\n        swapOptions?: Partial<SwapOptions>,\n        useBpts = false\n    ): Promise<SwapInfo> {\n        if (!this.poolCacher.finishedFetching) return cloneDeep(EMPTY_SWAPINFO);\n\n        // Set any unset options to their defaults\n        const options: SwapOptions = {\n            ...this.defaultSwapOptions,\n            ...swapOptions,\n        };\n        if (this.useBpt !== useBpts) {\n            options.forceRefresh = true;\n            this.useBpt = useBpts;\n        }\n        const pools: SubgraphPoolBase[] = this.poolCacher.getPools(useBpts);\n        const filteredPools = filterPoolsByType(pools, options.poolTypeFilter);\n\n        const wrappedInfo = await getWrappedInfo(\n            this.provider,\n            swapType,\n            tokenIn,\n            tokenOut,\n            this.config,\n            BigNumber.from(swapAmount)\n        );\n\n        let swapInfo: SwapInfo;\n        if (isLidoStableSwap(this.config.chainId, tokenIn, tokenOut)) {\n            swapInfo = await getLidoStaticSwaps(\n                filteredPools,\n                this.config.chainId,\n                wrappedInfo.tokenIn.addressForSwaps,\n                wrappedInfo.tokenOut.addressForSwaps,\n                swapType,\n                wrappedInfo.swapAmountForSwaps,\n                this.provider\n            );\n        } else {\n            swapInfo = await this.processSwaps(\n                wrappedInfo.tokenIn.addressForSwaps,\n                wrappedInfo.tokenOut.addressForSwaps,\n                swapType,\n                wrappedInfo.swapAmountForSwaps,\n                filteredPools,\n                options\n            );\n        }\n\n        if (swapInfo.returnAmount.isZero()) return swapInfo;\n\n        swapInfo = setWrappedInfo(swapInfo, swapType, wrappedInfo, this.config);\n\n        return swapInfo;\n    }\n    /**\n     * getCostOfSwapInToken Calculates and saves price of a swap in outputToken denomination. Used to determine if extra swaps are cost effective.\n     * @param {string} outputToken - Address of outputToken.\n     * @param {number} outputTokenDecimals - Decimals of outputToken.\n     * @param {BigNumber} gasPrice - Gas price used to calculate cost.\n     * @param {BigNumber} swapGas - Gas cost of a swap. Default=85000.\n     * @returns {BigNumber} Price of a swap in outputToken denomination.\n     */\n    async getCostOfSwapInToken(\n        outputToken: string,\n        outputTokenDecimals: number,\n        gasPrice: BigNumber,\n        swapGas?: BigNumber\n    ): Promise<BigNumber> {\n        if (gasPrice.isZero()) return Zero;\n        return this.swapCostCalculator.convertGasCostToToken(\n            outputToken,\n            outputTokenDecimals,\n            gasPrice,\n            swapGas\n        );\n    }\n\n    // Will process swap/pools data and return best swaps\n    private async processSwaps(\n        tokenIn: string,\n        tokenOut: string,\n        swapType: SwapTypes,\n        swapAmount: BigNumber,\n        pools: SubgraphPoolBase[],\n        swapOptions: SwapOptions\n    ): Promise<SwapInfo> {\n        if (pools.length === 0) return cloneDeep(EMPTY_SWAPINFO);\n\n        const paths = this.routeProposer.getCandidatePaths(\n            tokenIn,\n            tokenOut,\n            swapType,\n            pools,\n            swapOptions\n        );\n\n        if (paths.length == 0) return cloneDeep(EMPTY_SWAPINFO);\n\n        // Path is guaranteed to contain both tokenIn and tokenOut\n        let tokenInDecimals;\n        let tokenOutDecimals;\n        paths[0].swaps.forEach((swap) => {\n            // Inject token decimals to avoid having to query onchain\n            if (isSameAddress(swap.tokenIn, tokenIn)) {\n                tokenInDecimals = swap.tokenInDecimals;\n            }\n            if (isSameAddress(swap.tokenOut, tokenOut)) {\n                tokenOutDecimals = swap.tokenOutDecimals;\n            }\n        });\n\n        const costOutputToken = await this.getCostOfSwapInToken(\n            swapType === SwapTypes.SwapExactIn ? tokenOut : tokenIn,\n            swapType === SwapTypes.SwapExactIn\n                ? tokenOutDecimals\n                : tokenInDecimals,\n            swapOptions.gasPrice,\n            swapOptions.swapGas\n        );\n\n        // Returns list of swaps\n        const [swaps, total, marketSp, totalConsideringFees] =\n            this.getBestPaths(\n                paths,\n                swapAmount,\n                swapType,\n                tokenInDecimals,\n                tokenOutDecimals,\n                costOutputToken,\n                swapOptions.maxPools\n            );\n\n        const swapInfo = formatSwaps(\n            swaps,\n            swapType,\n            swapAmount,\n            tokenIn,\n            tokenOut,\n            total,\n            totalConsideringFees,\n            marketSp\n        );\n\n        return swapInfo;\n    }\n\n    /**\n     * Find optimal routes for trade from given candidate paths\n     */\n    private getBestPaths(\n        paths: NewPath[],\n        swapAmount: BigNumber,\n        swapType: SwapTypes,\n        tokenInDecimals: number,\n        tokenOutDecimals: number,\n        costOutputToken: BigNumber,\n        maxPools: number\n    ): [Swap[][], BigNumber, string, BigNumber] {\n        // swapExactIn - total = total amount swap will return of tokenOut\n        // swapExactOut - total = total amount of tokenIn required for swap\n\n        const [inputDecimals, outputDecimals] =\n            swapType === SwapTypes.SwapExactIn\n                ? [tokenInDecimals, tokenOutDecimals]\n                : [tokenOutDecimals, tokenInDecimals];\n\n        const [swaps, total, marketSp, totalConsideringFees] = getBestPaths(\n            paths,\n            swapType,\n            swapAmount,\n            inputDecimals,\n            outputDecimals,\n            maxPools,\n            costOutputToken\n        );\n\n        return [\n            swaps,\n            parseFixed(\n                total.dp(outputDecimals, OldBigNumber.ROUND_FLOOR).toString(),\n                outputDecimals\n            ),\n            marketSp.toString(),\n            parseFixed(\n                totalConsideringFees\n                    .dp(outputDecimals, OldBigNumber.ROUND_FLOOR)\n                    .toString(),\n                outputDecimals\n            ),\n        ];\n    }\n}\n","import {\n    BigNumber,\n    BigNumberish,\n    formatFixed,\n    parseFixed,\n} from '@ethersproject/bignumber';\nimport { Zero } from '@ethersproject/constants';\nimport { bnum, ZERO } from '../utils/bignumber';\nimport * as weightedMath from '../pools/weightedPool/weightedMath';\nimport { WeightedPoolPairData } from '../pools/weightedPool/weightedPool';\n\n/////////\n/// UI Helpers\n/////////\n\n// Get BPT amount for token amounts with zero-price impact\n// This function is the same regardless of whether we are considering\n// an Add or Remove liquidity operation: The spot prices of BPT in tokens\n// are the same regardless.\nexport function BPTForTokensZeroPriceImpact(\n    balances: BigNumberish[],\n    decimals: number[],\n    normalizedWeights: BigNumberish[],\n    amounts: BigNumberish[],\n    bptTotalSupply: BigNumberish\n): BigNumber {\n    const amountBPTOut = amounts.reduce((totalBptOut, amountIn, i) => {\n        // Calculate amount of BPT gained per token in\n        const poolPairData: WeightedPoolPairData = {\n            balanceIn: balances[i],\n            decimalsIn: decimals[i],\n            balanceOut: bptTotalSupply,\n            weightIn: normalizedWeights[i],\n            swapFee: Zero,\n        } as WeightedPoolPairData;\n        const BPTPrice = weightedMath._spotPriceAfterSwapTokenInForExactBPTOut(\n            ZERO,\n            poolPairData\n        );\n\n        // Multiply by amountIn to get contribution to total bpt out\n        const downscaledAmountIn = formatFixed(amountIn, decimals[i]);\n        const downscaledBptOut = bnum(downscaledAmountIn)\n            .div(BPTPrice)\n            .toString();\n        return BigNumber.from(totalBptOut).add(\n            parseFixed(downscaledBptOut, 18)\n        );\n    }, Zero);\n\n    return BigNumber.from(amountBPTOut);\n}\n","import {\n    BigNumber,\n    BigNumberish,\n    formatFixed,\n    parseFixed,\n} from '@ethersproject/bignumber';\nimport { Zero } from '@ethersproject/constants';\nimport { BigNumber as OldBigNumber, bnum, ZERO } from '../utils/bignumber';\nimport * as stableMath from '../pools/stablePool/stableMath';\nimport { StablePoolPairData } from '../pools/stablePool/stablePool';\n\n/////////\n/// UI Helpers\n/////////\n\n// Get BPT amount for token amounts with zero-price impact\n// This function is the same regardless of whether we are considering\n// an Add or Remove liquidity operation: The spot prices of BPT in tokens\n// are the same regardless.\nexport function BPTForTokensZeroPriceImpact(\n    allBalances: BigNumberish[],\n    decimals: number[],\n    amounts: BigNumberish[], // This has to have the same lenght as allBalances\n    bptTotalSupply: BigNumberish,\n    amp: BigNumberish\n): BigNumber {\n    if (allBalances.length != amounts.length)\n        throw 'allBalances and amounts have to have same length';\n    // Calculate the amount of BPT adding this liquidity would result in\n    // if there were no price impact, i.e. using the spot price of tokenIn/BPT\n\n    // We downscale the pool balances once as this will be reused across tokens\n    const allBalancesDownScaled: OldBigNumber[] = allBalances.map(\n        (balance, i) => bnum(formatFixed(balance, decimals[i]))\n    );\n\n    const amountBPTOut = amounts.reduce((totalBptOut, amountIn, i) => {\n        // Calculate amount of BPT gained per token in\n        const poolPairData: StablePoolPairData = {\n            amp: BigNumber.from(amp),\n            allBalances: allBalancesDownScaled,\n            tokenIndexIn: i,\n            balanceOut: bptTotalSupply,\n            decimalsOut: 18,\n            swapFee: Zero,\n        } as unknown as StablePoolPairData;\n        const BPTPrice = stableMath._spotPriceAfterSwapTokenInForExactBPTOut(\n            ZERO,\n            poolPairData\n        );\n\n        // Multiply by amountIn to get contribution to total bpt out\n        const downscaledAmountIn = formatFixed(amountIn, decimals[i]);\n        const downscaledBptOut = bnum(downscaledAmountIn)\n            .div(BPTPrice)\n            .toString();\n        return BigNumber.from(totalBptOut).add(\n            parseFixed(downscaledBptOut, 18)\n        );\n    }, Zero);\n\n    return BigNumber.from(amountBPTOut);\n}\n"],"names":["global","ONE","BigNumber","ONE_BigInt","_calcOutGivenIn","subtractFee","_calcInGivenOut","addFee","_calcBptOutGivenExactTokensIn","_calcTokensOutGivenExactBptIn","_calcTokenOutGivenExactBptIn","_calcBptInGivenExactTokensOut","_calcTokenInGivenExactBptOut","_calculateInvariant","_spotPriceAfterSwapExactTokenInForTokenOut","_spotPriceAfterSwapTokenInForExactTokenOut","_spotPriceAfterSwapExactTokenInForBPTOut","_spotPriceAfterSwapExactBPTInForTokenOut","_spotPriceAfterSwapBPTInForExactTokenOut","_spotPriceAfterSwapTokenInForExactBPTOut","_derivativeSpotPriceAfterSwapExactTokenInForTokenOut","_derivativeSpotPriceAfterSwapTokenInForExactTokenOut","_derivativeSpotPriceAfterSwapExactTokenInForBPTOut","_derivativeSpotPriceAfterSwapTokenInForExactBPTOut","_derivativeSpotPriceAfterSwapExactBPTInForTokenOut","_derivativeSpotPriceAfterSwapBPTInForExactTokenOut","PairTypes","_invariant","_exactTokenInForTokenOut","EONE","_solveAnalyticalBalance","_tokenInForExactTokenOut","_poolDerivatives","_feeFactor","_tokenInForExactBPTOut","_poolDerivativesBPT","_getTokenBalanceGivenInvariantAndAllOtherBalances","phantomStableMath._spotPriceAfterSwapExactTokenInForBPTOut","phantomStableMath._spotPriceAfterSwapExactBPTInForTokenOut","phantomStableMath._spotPriceAfterSwapExactTokenInForTokenOut","phantomStableMath._spotPriceAfterSwapTokenInForExactBPTOut","phantomStableMath._spotPriceAfterSwapBPTInForExactTokenOut","phantomStableMath._spotPriceAfterSwapTokenInForExactTokenOut","phantomStableMath._derivativeSpotPriceAfterSwapExactTokenInForBPTOut","phantomStableMath._derivativeSpotPriceAfterSwapExactBPTInForTokenOut","phantomStableMath._derivativeSpotPriceAfterSwapExactTokenInForTokenOut","phantomStableMath._derivativeSpotPriceAfterSwapTokenInForExactBPTOut","phantomStableMath._derivativeSpotPriceAfterSwapBPTInForExactTokenOut","phantomStableMath._derivativeSpotPriceAfterSwapTokenInForExactTokenOut","_calculateNewSpotPrice","_getNormalizedLiquidity","normalizeBalances","OldBigNumber","formatSwaps","getUnbuttonWrapperRate","undefined","this","keyBy","orderBy","sortBy","uniq","BPTForTokensZeroPriceImpact","weightedMath._spotPriceAfterSwapTokenInForExactBPTOut","stableMath._spotPriceAfterSwapTokenInForExactBPTOut"],"mappings":"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,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,CAAC;AAC3F,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,KAAK,EAAE;AAC5B,EAAE,OAAO,KAAK,IAAI,IAAI,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AACvE,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB,CAAC,KAAK,EAAE;AAClC,EAAE,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC;AACnD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,GAAG,cAAc,IAAI,SAAS,CAAC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU,CAAC,KAAK,EAAE;AAC3B;AACA;AACA,EAAE,IAAI,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;AAC9D,EAAE,OAAO,GAAG,IAAI,OAAO,IAAI,GAAG,IAAI,MAAM,CAAC;AACzC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,KAAK,EAAE;AACzB,EAAE,OAAO,OAAO,KAAK,IAAI,QAAQ;AACjC,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,gBAAgB,CAAC;AAC9D,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,KAAK,EAAE;AACzB,EAAE,IAAI,IAAI,GAAG,OAAO,KAAK,CAAC;AAC1B,EAAE,OAAO,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,QAAQ,IAAI,IAAI,IAAI,UAAU,CAAC,CAAC;AAC7D,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,KAAK,EAAE;AAC7B,EAAE,OAAO,CAAC,CAAC,KAAK,IAAI,OAAO,KAAK,IAAI,QAAQ,CAAC;AAC7C,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,CAAC,MAAM,EAAE;AACtB,EAAE,OAAO,WAAW,CAAC,MAAM,CAAC,GAAG,aAAa,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;AACxE,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG;AAC/D,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG;AAC/D,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG;AAC/D,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG;AAC9E,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG;AAC9E,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG;AAC/D,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG;AAC/D,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG;AAC/D,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG;AAC9E,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG;AAC9E,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,GAAG;AACjC,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG;AAChD,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG;AAC9E,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG;AAC9E,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG;AAC/D,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG;AAC/D,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG;AAChD,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG;AAChD,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG;AAChD,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG;AAChD,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG;AAC/D,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG;AAC/D,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG;AAChD,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG;AAChD,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG;AAC7F,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG;AAC7F,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,GAAG;AACjC,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG;AAChD,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GA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M,CAAC;AACpD,MAAM,IAAI,CAAC,MAAM,EAAE;AACnB,QAAQ,OAAO,EAAE,CAAC;AAClB,OAAO;AACP,MAAM,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,KAAKA,WAAS,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC;AACrB,MAAM,OAAO,SAAS,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAChD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,cAAc,CAAC,KAAK,EAAE,SAAS,EAAE;AAC9C,MAAM,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM;AACnC,UAAU,SAAS,CAAC,KAAK,EAAE,WAAW,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;AACjE,UAAU,EAAE,CAAC;AACb,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,SAAS,CAAC,KAAK,EAAE,SAAS,EAAE;AACzC,MAAM,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM;AACnC,UAAU,SAAS,CAAC,KAAK,EAAE,WAAW,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;AAC3D,UAAU,EAAE,CAAC;AACb,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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AAChC,SAAS;AACT,QAAQ,OAAO,KAAK,CAAC;AACrB,OAAO,CAAC,CAAC;AACT,KAAK,CAAC,CAAC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,YAAY,GAAG;AAC5B,MAAM,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC;AACzB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,aAAa,GAAG;AAC7B,MAAM,OAAO,IAAI,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AAC7D,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,WAAW,GAAG;AAC3B,MAAM,IAAI,IAAI,CAAC,UAAU,KAAKA,WAAS,EAAE;AACzC,QAAQ,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;AAChD,OAAO;AACP,MAAM,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM;AACzD,UAAU,KAAK,GAAG,IAAI,GAAGA,WAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;AACvE;AACA,MAAM,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;AAC9C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,iBAAiB,GAAG;AACjC,MAAM,OAAO,IAA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,CAAC;AAC9B,OAAO;AACP,MAAM,OAAO,IAAI,CAAC,UAAU,EAAE,WAAW,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;AACzD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,MAAM,CAAC,UAAU,EAAE,SAAS,EAAE;AAC3C,MAAM,IAAI,IAAI,GAAG,OAAO,CAAC,UAAU,CAAC,GAAG,WAAW,GAAG,UAAU,CAAC;AAChE,MAAM,OAAO,IAAI,CAAC,UAAU,EAAE,WAAW,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;AACzD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,IAAI,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,QAAQ,GAAG,UAAU,CAAC,aAAa,CAAC,CAAC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,OAAO,CAAC,UAAU,EAAE,QAAQ,EAAE;AAC3C,MAAM,OAAO,WAAW,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;AACvD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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AAC;AAClB,OAAO;AACP,MAAM,IAAI,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAC/B,MAAM,OAAO,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;AAC9C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,KAAK,CAAC,KAAK,EAAE;AAC1B,MAAM,OAAO,SAAS,CAAC,KAAK,EAAE,kBAAkB,CAAC,CAAC;AAClD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,SAAS,CAAC,KAAK,EAAE,UAAU,EAAE;AAC1C,MAAM,UAAU,GAAG,OAAO,UAAU,IAAI,UAAU,GAAG,UAAU,GAAGA,WAAS,CAAC;AAC5E,MAAM,OAAO,SAAS,CAAC,KAAK,EAAE,kBAAkB,EAAE,UAAU,CAAC,CAAC;AAC9D,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,SAAS,CAAC,KAAK,EAAE;AAC9B,MAAM,OAAO,SAAS,CAAC,KAAK,EAAE,eAAe,GAAG,kBAAkB,CAAC,CAAC;AACpE,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,aAAa,CAAC,KAAK,EAAE,UAAU,EAAE;AAC9C,MAAM,UAAU,GAAG,OAAO,UAAU,IAAI,UAAU,GAAG,UAAU,GAAGA,WAAS,CAAC;AAC5E,MAAM,OAAO,SAAS,CAAC,KAAK,EAAE,eAAe,GAAG,kBAAkB,EAAE,UAAU,CAAC,CAAC;AAChF,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE;AACxC,MAAM,OAAO,MAAM,IAAI,IAAI,IAAI,cAAc,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AAC5E,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE;AAC9B,MAAM,OAAO,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,CAAC,CAAC;AACrE,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,EAAE,GAAG,yBAAyB,CAAC,MAAM,CAAC,CAAC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,GAAG,GAAG,yBAAyB,CAAC,SAAS,KAAK,EAAE,KAAK,EAAE;AAC/D,MAAM,OAAO,KAAK,IAAI,KAAK,CAAC;AAC5B,KAAK,CAAC,CAAC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,WAAW,GAAG,eAAe,CAAC,WAAW,EAAE,OAAO,SAAS,CAAC,EAAE,EAAE,CAAC,GAAG,eAAe,GAAG,SAAS,KAAK,EAAE;AAC9G,MAAM,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC;AACxE,QAAQ,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;AACpD,KAAK,CAAC;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,aAAa,GAAG,iBAAiB,GAAG,SAAS,CAAC,iBAAiB,CAAC,GAAG,iBAAiB,CAAC;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,WAAW,CAAC,KAAK,EAAE;AAChC,MAAM,OAAO,KAAK,IAAI,IAAI,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AAC3E,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,iBAAiB,CAAC,KAAK,EAAE;AACtC,MAAM,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC;AACvD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,SAAS,CAAC,KAAK,EAA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CA;AACA;AACA;AACA,IAAI,SAAS,SAAS,CAAC,KAAK,EAAE;AAC9B,MAAM,OAAO,OAAO,KAAK,IAAI,QAAQ,IAAI,KAAK,IAAI,SAAS,CAAC,KAAK,CAAC,CAAC;AACnE,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,QAAQ,CAAC,KAAK,EAAE;AAC7B,MAAM,OAAO,OAAO,KAAK,IAAI,QAAQ;AACrC,QAAQ,KAAK,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,gBAAgB,CAAC;AAClE,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,QAAQ,CAAC,KAAK,EAAE;AAC7B,MAAM,IAAI,IAAI,GAAG,OAAO,KAAK,CAAC;AAC9B,MAAM,OAAO,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,QAAQ,IAAI,IAAI,IAAI,UAAU,CAAC,CAAC;AACvE,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,YAAY,CAAC,KAAK,EAAE;AACjC,MAAM,OAAO,KAAK,IAAI,IAAI,IAAI,OAAO,KAAK,IAAI,QAAQ,CAAC;AACvD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,KAAK,GAAG,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE;AACrC,MAAM,OAAO,MAAM,KAAK,MAAM,IAAI,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;AACpF,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE;AACrD,MAAM,UAAU,GAAG,OAAO,UAAU,IAAI,UAAU,GAAG,UAAU,GAAGA,WAAS,CAAC;AAC5E,MAAM,OAAO,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,YAAY,CAAC,MAAM,CAAC,EAAE,UAAU,CAAC,CAAC;AAC3E,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,KAAK,CAAC,KAAK,EAAE;AAC1B;AACA;AACA;AACA,MAAM,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC;AAChD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,QAAQ,CAAC,KAAK,EAAE;AAC7B,MAAM,IAAI,UAAU,CAAC,KAAK,CAAC,EAAE;AAC7B,QAAQ,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;AACzC,OAAO;AACP,MAAM,OAAO,YAAY,CAAC,KAAK,CAAC,CAAC;AACjC,KA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AAC;AAChE,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,YAAY,GAAG,gBAAgB,GAAG,SAAS,CAAC,gBAAgB,CAAC,GAAG,gBAAgB,CAAC;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,WAAW,CAAC,KAAK,EAAE;AAChC,MAAM,OAAO,KAAK,KAAKA,WAAS,CAAC;AACjC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,SAAS,CAAC,KAAK,EAAE;AAC9B,MAAM,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,UAAU,CAAC;AAChE,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,SAAS,CAAC,KAAK,EAAE;AAC9B,MAAM,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,UAAU,CAAC,KAAK,CAAC,IAAI,UAAU,CAAC;AACpE,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,EAAE,GAAG,yBAAyB,CAAC,MAAM,CAAC,CAAC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,GAAG,GAAG,yBAAyB,CAAC,SAAS,KAAK,EAAE,KAAK,EAAE;AAC/D,MAAM,OAAO,KAAK,IAAI,KAAK,CAAC;AAC5B,KAAK,CAAC,CAAC;AACP;AACA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,EAAEA,WAAS,EAAE,IAAI,CAAC,CAAC;AAC/C,KAAK,CAAC,CAAC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,OAAO,CAAC,MAAM,EAAE,SAAS,EAAE;AACxC,MAAM,OAAO,WAAW,CAAC,MAAM,EAAE,WAAW,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;AACxE,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,WAAW,CAAC,MAAM,EAAE,SAAS,EAAE;AAC5C,MAAM,OAAO,WAAW,CAAC,MAAM,EAAE,WAAW,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;AAC7E,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,KAAK,CAAC,MAAM,EAAE,QAAQ,EAAE;AACrC,MAAM,OAAO,MAAM,IAAI,IAAI;AAC3B,UAAU,MAAM;AAChB,UAAU,OAAO,CAAC,MAAM,EAAE,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AAC5D,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,UAAU,CAAC,MAAM,EAAE,QAAQ,EAAE;AAC1C,MAAM,OAAO,MAAM,IAAI,IAAI;AAC3B,UAAU,MAAM;AAChB,UAAU,YAAY,CAAC,MAAM,EAAE,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AACjE,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE;AACtC,MAAM,OAAO,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;AACpE,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,WAAW,CAAC,MAAM,EAAE,QAAQ,EAAE;AAC3C,MAAM,OAAO,MAAM,IAAI,eAAe,CAAC,MAAM,EAAE,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;AACzE,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,SAAS,CAAC,MAAM,EAAE;AAC/B,MAAM,OAAO,MAAM,IAAI,IAAI,GAAG,EAAE,GAAG,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AACvE,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,WAAW,CAAC,MAAM,EAAE;AACjC,MAAM,OAAO,MAAM,IAAI,IAAI,GAAG,EAAE,GAAG,aAAa,CAAC,MAAM,EAAE,MAAM,CAA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CA,IAAI,SAAS,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE;AACtC,MAAM,OAAO,MAAM,IAAI,IAAI,GAAG,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AACpE,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE;AACtD,MAAM,UAAU,GAAG,OAAO,UAAU,IAAI,UAAU,GAAG,UAAU,GAAGA,WAAS,CAAC;AAC5E,MAAM,OAAO,MAAM,IAAI,IAAI,GAAG,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;AAChF,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,OAAO,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,SAAS,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE;AACtD,MAAM,IAAI,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC;AACjC,UAAU,SAAS,GAAG,KAAK,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,YAAY,CAAC,MA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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,SAAS,CAAC,KAAK,EAAE,YAAY,EAAE;AAC5C,MAAM,OAAO,CAAC,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,YAAY,GAAG,KAAK,CAAC;AACvE,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,IAAI,GAAG,UAAU,EAAE,CAAC;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,QAAQ,CAAC,KAAK,EAAE;AAC7B,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,QAAQ,CAAC,IAAI,EAAE;AAC5B,MAAM,OAAO,YAAY,CAAC,OAAO,IAAI,IAAI,UAAU,GAAG,IAAI,GAAG,SAAS,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC,CAAC;AAC/F,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,OAAO,CAAC,MAAM,EAAE;AAC7B,MAAM,OAAO,WAAW,CAAC,SAAS,CAAC,MAAM,EAAE,eAAe,CAAC,CAAC,CAAC;AAC7D,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,eAAe,CAAC,IAAI,EAAE,QAAQ,EAAE;AAC7C,MAAM,OAAO,mBAAmB,CAAC,IAAI,EAAE,SAAS,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC,CAAC;AAC7E,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,MAAM,GAAG,QAAQ,CAAC,SAAS,IAAI,EAAE,IAAI,EAAE;AAC/C,MAAM,OAAO,SAAS,MAAM,EAAE;AAC9B,QAAQ,OAAO,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAC9C,OAAO,CAAC;AACR,KAAK,CAAC,CAAC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,QAAQ,GAAG,QAAQ,CAAC,SAAS,MAAM,EAAE,IAAI,EAAE;AACnD,MAAM,OAAO,SAAS,IAAI,EAAE;AAC5B,QAAQ,OAAO,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAC9C,OAAO,CAAC;AACR,KAAK,CAAC,CAAC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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;AACA;AACA;AACA,IAAI,IAAI,SAAS,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,QAAQ,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,QAAQ,CAAC,IAAI,EAAE;AAC5B,MAAM,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC;AAC9E,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,UAAU,CAAC,MAAM,EAAE;AAChC,MAAM,OAAO,SAAS,IAAI,EAAE;AAC5B,QAAQ,OAAO,MAAM,IAAI,IAAI,GAAGA,WAAS,GAAG,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAClvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,SAAS,GAAG;AACzB,MAAM,OAAO,EAAE,CAAC;AAChB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,SAAS,GAAG;AACzB,MAAM,OAAO,KAAK,CAAC;AACnB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,UAAU,GAAG;AAC1B,MAAM,OAAO,EAAE,CAAC;AAChB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,UAAU,GAAG;AAC1B,MAAM,OAAO,EAAE,CAAC;AAChB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,QAAQ,GAAG;AACxB,MAAM,OAAO,IAAI,CAAC;AAClB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,KAAK,CAAC,CAAC,EAAE,QAAQ,EAAE;AAChC,MAAM,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AACvB,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,gBAAgB,EAAE;AACzC,QAAQ,OAAO,EAAE,CAAC;AAClB,OAAO;AACP,MAAM,IAAI,KAAK,GAAG,gBAAgB;AAClC,UAAU,MAAM,GAAG,SAAS,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC;AAClD;AACA,MAAM,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC;AACvC,MAAM,CAAC,IAAI,gBAAgB,CAAC;AAC5B;AACA,MAAM,IAAI,MAAM,GAAG,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AAC/C,MAAM,OAAO,EAAE,KAAK,GAAG,CAAC,EAAE;AAC1B,QAAQ,QAAQ,CAAC,KAAK,CAAC,CAAC;AACxB,OAAO;AACP,MAAM,OAAO,MAAM,CAAC;AACpB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,MAAM,CAAC,KAAK,EAAE;AAC3B,MAAM,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;AAC1B,QAAQ,OAAO,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AACtC,OAAO;AACP,MAAM,OAAO,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAClF,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,QAAQ,CAAC,MAAM,EAAE;AAC9B,MAAM,IAAI,EAAE,GAAG,EAAE,SAAS,CAAC;AAC3B,MAAM,OAAO,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;AACnC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,GAAG,GAAG,mBAAmB,CAAC,SAAS,MAAM,EAAE,MAAM,EAAE;AAC3D,MAAM,OAAO,MAAM,GAAG,MAAM,CAAC;AAC7B,KAAK,EAAE,CAAC,CAAC,CAAC;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,IAAI,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,MAAM,GAAG,mBAAmB,CAAC,SAAS,QAAQ,EAAE,OAAO,EAAE;AACjE,MAAM,OAAO,QAAQ,GAAG,OAAO,CAAC;AAChC,KAAK,EAAE,CAAC,CAAC,CAAC;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,GAAG,CAAC,KAAK,EAAE;AACxB,MAAM,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM;AACnC,UAAU,YAAY,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,CAAC;AAC/C,UAAUA,WAAS,CAAC;AACpB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE;AACpC,MAAM,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM;AACnC,UAAU,YAAY,CAAC,KAAK,EAAE,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC;AAC/D,UAAUA,WAAS,CAAC;AACpB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,IAAI,CAAC,KAAK,EAAE;AACzB,MAAM,OAAO,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;AACvC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,MAAM,CAAC,KAAK,EAAE,QAAQ,EAAE;AACrC,MAAM,OAAO,QAAQ,CAAC,KAAK,EAAE,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;AACvD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,GAAG,CAAC,KAAK,EAAE;AACxB,MAAM,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM;AACnC,UAAU,YAAY,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,CAAC;AAC/C,UAAUA,WAAS,CAAC;AACpB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE;AACpC,MAAM,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM;AACnC,UAAU,YAAY,CAAC,KAAK,EAAE,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC;AAC/D,UAAUA,WAAS,CAAC;AACpB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,QAAQ,GAAG,mBAAmB,CAAC,SAAS,UAAU,EAAE,YAAY,EAAE;AAC1E,MAAM,OAAO,UAAU,GAAG,YAAY,CAAC;AACvC,KAAK,EAAE,CAAC,CAAC,CAAC;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,QAAQ,GAAG,mBAAmB,CAAC,SAAS,OAAO,EAAE,UAAU,EAAE;AACrE,MAAM,OAAO,OAAO,GAAG,UAAU,CAAC;AAClC,KAAK,EAAE,CAAC,CAAC,CAAC;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,GAAG,CAAC,KAAK,EAAE;AACxB,MAAM,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM;AACnC,UAAU,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC;AAClC,UAAU,CAAC,CAAC;AACZ,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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"}